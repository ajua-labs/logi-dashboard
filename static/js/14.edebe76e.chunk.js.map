{"version":3,"sources":["framework/Administration/RolesAppManagement.js","../node_modules/@material-ui/icons/Apps.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["AppsManagement","state","rolesApps","loadingApps","RoleID","_this2","this","url","concat","process","setState","props","Auth","AuthenticatedServerCall","then","tempApps","filter","app","ParentID","forEach","appGroup","appsForGroup","ApplicationID","length","ShowInNavigationTree","childApps","push","apply","Object","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","sort","appA","appB","AppOrder","catch","error","ApplicationRoleID","_this3","fetchRolesApps","selectedRoleID","prevProp","_this4","react__WEBPACK_IMPORTED_MODULE_20___default","a","createElement","Fragment","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","style","height","overflow","_material_ui_core__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","avatar","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","aria-label","className","classes","_material_ui_icons_Apps__WEBPACK_IMPORTED_MODULE_19___default","title","subheader","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","map","undefined","key","Application","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","button","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","color","Icon","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","inset","primary","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","in","timeout","unmountOnExit","component","disablePadding","nested","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","checked","Boolean","IsPublic","disabled","onChange","modifyRoleApps","Component","withStyles","theme","paddingLeft","spacing","progress","margin","backgroundColor","red","withTheme","_interopRequireDefault","__webpack_require__","defineProperty","exports","value","default","_react","_default","d","SwitchBase_SwitchBase","react_default","forwardRef","ref","autoFocus","checkedProp","checkedIcon","classNameProp","defaultChecked","disabledProp","icon","id","inputProps","inputRef","muiFormControl","name","onBlur","onFocus","readOnly","required","tabIndex","type","other","objectWithoutProperties_default","isControlled","useRef","current","_React$useState","useState","_React$useState2","slicedToArray_default","checkedState","setCheckedState","hasLabelFor","IconButton","extends_default","clsx_m","root","role","event","input","target","internal_SwitchBase","padding","cursor","position","opacity","width","top","left","withFormControlContext","CheckBoxOutlineBlank","createSvgIcon","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","helpers","data-indeterminate","__webpack_exports__","palette","text","secondary","colorPrimary","&$checked","main","&:hover","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary"],"mappings":"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","file":"static/js/14.edebe76e.chunk.js","sourcesContent":["import {\n  Avatar,\n  Card,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Collapse,\n  Icon,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from \"@material-ui/core\";\nimport red from \"@material-ui/core/colors/red\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Apps from \"@material-ui/icons/Apps\";\nimport React, { Component } from \"react\";\n\nconst styles = theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  progress: {\n    margin: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n});\n\nclass AppsManagement extends Component {\n  state = {\n    rolesApps: [],\n    loadingApps: false\n  };\n\n  fetchRolesApps(RoleID) {\n    var url = `${process.env.REACT_APP_APIURL}security/rolesApps/${RoleID}`;\n    this.setState({ loadingApps: true });\n    this.props.Auth.AuthenticatedServerCall(url, \"GET\")\n      .then(rolesApps => {\n        let tempApps = rolesApps.filter(\n          app => app.ParentID && app.ParentID === -1\n        );\n        tempApps.forEach(appGroup => {\n          let appsForGroup = rolesApps.filter(app => {\n            return app.ParentID === appGroup.ApplicationID;\n          });\n          if (appsForGroup.length > 0) {\n            appGroup.ShowInNavigationTree = true;\n            appGroup.childApps = appsForGroup;\n          } else {\n            appGroup.ShowInNavigationTree = false; //empty group no need to display\n          }\n        });\n        //---add all other apps (with no parent)\n        tempApps.push(\n          ...rolesApps.filter(app => !app.ParentID || app.ParentID === null)\n        );\n        this.setState({\n          rolesApps: tempApps.sort(\n            (appA, appB) => appA.AppOrder - appB.AppOrder\n          ),\n          loadingApps: false\n        });\n      })\n      .catch(error => this.setState({ error, loadingApps: false }));\n  }\n\n  modifyRoleApps(RoleID, ApplicationID, ApplicationRoleID) {\n    this.setState({ loadingApps: true });\n    var url = `${process.env.REACT_APP_APIURL}security/modifyRoleApps`;\n    this.props.Auth.AuthenticatedServerCall(url, \"POST\", {\n      RoleID: RoleID,\n      ApplicationID: ApplicationID,\n      ApplicationRoleID: ApplicationRoleID\n    })\n      .then(() => {\n        this.fetchRolesApps(this.props.selectedRoleID);\n        this.setState({\n          loadingApps: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          loadingApps: false\n        });\n        this.fetchRolesApps(this.props.selectedRoleID);\n      });\n  }\n\n  componentDidUpdate(prevProp) {\n    if (prevProp.selectedRoleID !== this.props.selectedRoleID) {\n      if (this.props.selectedRoleID < 0) {\n        this.setState({\n          rolesApps: []\n        });\n        return;\n      }\n      if (this.props.selectedRoleID && this.props.selectedRoleID >= 0)\n        this.fetchRolesApps(this.props.selectedRoleID);\n    }\n  }\n  componentDidMount() {\n    if (this.props.selectedRoleID && this.props.selectedRoleID >= 0) {\n      this.fetchRolesApps(this.props.selectedRoleID);\n    }\n  }\n\n  render() {\n    const props = this.props;\n    return (\n      <React.Fragment>\n        <Card style={{ height: \"100%\", overflow: \"Auto\" }}>\n          {!props.selectedRoleID ? (\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"Apps\" className={props.classes.avatar}>\n                  R\n                </Avatar>\n              }\n              title=\"Please Select a Role to view/amend accessible Apps\"\n            />\n          ) : !props.loadingApps ? (\n            <React.Fragment>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"Apps\" className={props.classes.avatar}>\n                    <Apps />\n                  </Avatar>\n                }\n                title=\"You can tune accessible app for the roles\"\n                subheader=\"Please note Public apps are accessible for everyone\"\n              />\n              <List>\n                <div>\n                  {this.state.rolesApps.map(app => {\n                    if (\n                      app.ShowInNavigationTree !== undefined &&\n                      (app.ShowInNavigationTree === 1 ||\n                        app.ShowInNavigationTree === true)\n                    ) {\n                      if (app.childApps) {\n                        //it's a group\n                        return (\n                          <React.Fragment key={\"G\" + app.Application}>\n                            <ListItem button key={app.ApplicationID}>\n                              <ListItemIcon>\n                                <Icon color=\"primary\">{app.Icon}</Icon>\n                              </ListItemIcon>\n                              <ListItemText inset primary={app.Application} />\n                            </ListItem>\n                            <Collapse in={true} timeout=\"auto\" unmountOnExit>\n                              <List component=\"div\" disablePadding>\n                                {app.childApps.map(app => {\n                                  return (\n                                    <ListItem\n                                      button\n                                      className={props.classes.nested}\n                                      key={app.ApplicationID}\n                                    >\n                                      <Checkbox\n                                        checked={Boolean(\n                                          app.IsPublic || app.ApplicationRoleID\n                                        )}\n                                        disabled={Boolean(app.IsPublic)}\n                                        onChange={() => {\n                                          this.modifyRoleApps(\n                                            props.selectedRoleID,\n                                            app.ApplicationID,\n                                            app.ApplicationRoleID\n                                          );\n                                        }}\n                                      />\n                                      <ListItemIcon>\n                                        <Icon color=\"primary\">{app.Icon}</Icon>\n                                      </ListItemIcon>\n                                      <ListItemText\n                                        primary={\n                                          app.Application +\n                                          (app.IsPublic ? \" (PUBLIC) \" : \"\")\n                                        }\n                                      />\n                                    </ListItem>\n                                  );\n                                })}\n                              </List>\n                            </Collapse>\n                          </React.Fragment>\n                        );\n                      } else {\n                        return (\n                          <ListItem button key={app.ApplicationID}>\n                            <Checkbox\n                              checked={Boolean(\n                                app.IsPublic || app.ApplicationRoleID\n                              )}\n                              disabled={Boolean(app.IsPublic)}\n                              onChange={() =>\n                                this.modifyRoleApps(\n                                  props.selectedRoleID,\n                                  app.ApplicationID,\n                                  app.ApplicationRoleID\n                                )\n                              }\n                            />\n                            <ListItemIcon>\n                              <Icon color=\"primary\">{app.Icon}</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                              primary={\n                                app.Application +\n                                (app.IsPublic ? \" (PUBLIC) \" : \"\")\n                              }\n                            />\n                          </ListItem>\n                        );\n                      }\n                    } else return null;\n                  })}\n                </div>\n              </List>\n            </React.Fragment>\n          ) : (\n            <CircularProgress />\n          )}\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AppsManagement);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z\"\n}), 'Apps');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withFormControlContext from '../FormControl/withFormControlContext';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      muiFormControl = props.muiFormControl,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"muiFormControl\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkedState = _React$useState2[0],\n      setCheckedState = _React$useState2[1];\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var checked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(checked);\n    }\n\n    if (onChange) {\n      onChange(event, checked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, classNameProp, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), checked ? checkedIcon : icon, React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component property `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(withFormControlContext(SwitchBase));","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component property `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}