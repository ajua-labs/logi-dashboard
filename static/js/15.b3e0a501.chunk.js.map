{"version":3,"sources":["framework/Administration/RolesWidgetManagement.js","../node_modules/@material-ui/icons/Widgets.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["AppsManagement","state","rolesWidgets","loadingWidgets","RoleID","_this2","this","url","concat","process","setState","props","Auth","AuthenticatedServerCall","then","tempApps","filter","app","ParentID","forEach","appGroup","appsForGroup","ApplicationID","length","ShowInNavigationTree","childApps","push","apply","Object","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","sort","appA","appB","AppOrder","catch","error","WidgetID","WidgetRoleID","_this3","fetchRolesWidgets","selectedRoleID","prevProp","_this4","react__WEBPACK_IMPORTED_MODULE_19___default","a","createElement","Fragment","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","style","height","overflow","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","avatar","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","aria-label","className","classes","_material_ui_icons_Widgets__WEBPACK_IMPORTED_MODULE_18___default","title","subheader","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","map","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","button","nested","key","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","checked","Boolean","IsPublic","disabled","onChange","modifyRoleWidgets","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","color","Icon","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","primary","Name","Component","withStyles","theme","paddingLeft","spacing","progress","margin","backgroundColor","red","withTheme","_interopRequireDefault","__webpack_require__","defineProperty","exports","value","default","_react","_default","d","SwitchBase_SwitchBase","react_default","forwardRef","ref","autoFocus","checkedProp","checkedIcon","classNameProp","defaultChecked","disabledProp","icon","id","inputProps","inputRef","muiFormControl","name","onBlur","onFocus","readOnly","required","tabIndex","type","other","objectWithoutProperties_default","isControlled","useRef","current","_React$useState","useState","_React$useState2","slicedToArray_default","checkedState","setCheckedState","hasLabelFor","IconButton","extends_default","component","clsx_m","root","role","undefined","event","input","target","internal_SwitchBase","padding","cursor","position","opacity","width","top","left","withFormControlContext","CheckBoxOutlineBlank","createSvgIcon","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","helpers","data-indeterminate","__webpack_exports__","palette","text","secondary","colorPrimary","&$checked","main","&:hover","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary"],"mappings":"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","file":"static/js/15.b3e0a501.chunk.js","sourcesContent":["import {\n  Avatar,\n  Card,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Icon,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from \"@material-ui/core\";\nimport red from \"@material-ui/core/colors/red\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Widgets from \"@material-ui/icons/Widgets\";\nimport React, { Component } from \"react\";\n\nconst styles = theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  progress: {\n    margin: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n});\n\nclass AppsManagement extends Component {\n  state = {\n    rolesWidgets: [],\n    loadingWidgets: false\n  };\n\n  fetchRolesWidgets(RoleID) {\n    var url = `${process.env.REACT_APP_APIURL}security/rolesWidgets/${RoleID}`;\n    this.setState({ loadingWidgets: true });\n    this.props.Auth.AuthenticatedServerCall(url, \"GET\")\n      .then(rolesWidgets => {\n        let tempApps = rolesWidgets.filter(\n          app => app.ParentID && app.ParentID === -1\n        );\n        tempApps.forEach(appGroup => {\n          let appsForGroup = rolesWidgets.filter(app => {\n            return app.ParentID === appGroup.ApplicationID;\n          });\n          if (appsForGroup.length > 0) {\n            appGroup.ShowInNavigationTree = true;\n            appGroup.childApps = appsForGroup;\n          } else {\n            appGroup.ShowInNavigationTree = false; //empty group no need to display\n          }\n        });\n        //---add all other apps (with no parent)\n        tempApps.push(\n          ...rolesWidgets.filter(app => !app.ParentID || app.ParentID === null)\n        );\n        this.setState({\n          rolesWidgets: tempApps.sort(\n            (appA, appB) => appA.AppOrder - appB.AppOrder\n          ),\n          loadingWidgets: false\n        });\n      })\n      .catch(error => this.setState({ error, loadingWidgets: false }));\n  }\n\n  modifyRoleWidgets(RoleID, WidgetID, WidgetRoleID) {\n    this.setState({ loadingWidgets: true });\n    var url = `${process.env.REACT_APP_APIURL}security/modifyRoleWidgets`;\n    this.props.Auth.AuthenticatedServerCall(url, \"POST\", {\n      RoleID: RoleID,\n      WidgetID: WidgetID,\n      WidgetRoleID: WidgetRoleID\n    })\n      .then(() => this.fetchRolesWidgets(this.props.selectedRoleID))\n      .catch(error => {\n        this.setState({\n          loadingWidgets: false\n        });\n        this.fetchRolesWidgets(this.props.selectedRoleID);\n      });\n  }\n\n  componentDidUpdate(prevProp) {\n    if (prevProp.selectedRoleID !== this.props.selectedRoleID) {\n      if (this.props.selectedRoleID < 0) {\n        this.setState({\n          rolesWidgets: []\n        });\n        return;\n      }\n      if (this.props.selectedRoleID && this.props.selectedRoleID >= 0)\n        this.fetchRolesWidgets(this.props.selectedRoleID);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.selectedRoleID >= 0) {\n      this.fetchRolesWidgets(this.props.selectedRoleID);\n    }\n  }\n\n  render() {\n    const props = this.props;\n    return (\n      <React.Fragment>\n        <Card style={{ height: \"100%\", overflow: \"Auto\" }}>\n          {!props.selectedRoleID ? (\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"Apps\" className={props.classes.avatar}>\n                  R\n                </Avatar>\n              }\n              title=\"Please Select a Role to view/amend accessible Widgets\"\n            />\n          ) : !props.loadingWidgets ? (\n            <React.Fragment>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"Widgets\" className={props.classes.avatar}>\n                    <Widgets />\n                  </Avatar>\n                }\n                title=\"You can tune accessible widgets for the roles\"\n                subheader=\"Please note Public widgets are accessible for everyone\"\n              />\n              <List>\n                <div>\n                  {this.state.rolesWidgets.map(app => {\n                    return (\n                      <ListItem\n                        button\n                        className={props.classes.nested}\n                        key={app.WidgetID}\n                      >\n                        <Checkbox\n                          checked={Boolean(app.IsPublic || app.WidgetRoleID)}\n                          disabled={Boolean(app.IsPublic)}\n                          onChange={() => {\n                            this.modifyRoleWidgets(\n                              props.selectedRoleID,\n                              app.WidgetID,\n                              app.WidgetRoleID\n                            );\n                          }}\n                        />\n                        <ListItemIcon>\n                          <Icon color=\"primary\">{app.Icon}</Icon>\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            app.Name + (app.IsPublic ? \" (PUBLIC) \" : \"\")\n                          }\n                        />\n                      </ListItem>\n                    );\n                  })}\n                </div>\n              </List>\n            </React.Fragment>\n          ) : (\n            <CircularProgress />\n          )}\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AppsManagement);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13 13v8h8v-8h-8zM3 21h8v-8H3v8zM3 3v8h8V3H3zm13.66-1.31L11 7.34 16.66 13l5.66-5.66-5.66-5.65z\"\n}), 'Widgets');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withFormControlContext from '../FormControl/withFormControlContext';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      muiFormControl = props.muiFormControl,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"muiFormControl\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkedState = _React$useState2[0],\n      setCheckedState = _React$useState2[1];\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var checked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(checked);\n    }\n\n    if (onChange) {\n      onChange(event, checked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, classNameProp, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), checked ? checkedIcon : icon, React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component property `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(withFormControlContext(SwitchBase));","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component property `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}