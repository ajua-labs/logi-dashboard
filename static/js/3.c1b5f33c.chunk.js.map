{"version":3,"sources":["framework/Components/logi-table/LogiDataRow.tsx","framework/Components/logi-table/LogiTableToolbar.tsx","framework/Components/logi-table/EditableTableCell.tsx","framework/Components/logi-table/LogiTableHeader.tsx","framework/Components/logi-table/StandardActions.tsx","../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js","framework/Administration/Users.tsx","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Fingerprint.js","../node_modules/@material-ui/icons/GroupWork.js","../node_modules/@material-ui/icons/RemoveCircle.js","../node_modules/@material-ui/icons/AddCircle.js","framework/Components/logi-table/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","rowStyle","&:nth-of-type(odd)","backgroundColor","palette","background","default","LogiDataRow","props","classes","columns","index","labelId","concat","_useState","useState","_useState2","Object","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","editMode","setEditMode","_useState3","row","_useState4","setRow","changeValue","value","columnName","editedRow","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","setEditedRow","useEffect","rowStateAndAction","enterEditMode","discardEditMode","insertMode","oldData","newData","setData","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_3__","className","allowSelection","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_4__","padding","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","checked","inputProps","aria-labelledby","filter","c","hidden","map","colIndex","key","accessor","header","component","id","scope","dataType","viewComponent","_EditableTableCell__WEBPACK_IMPORTED_MODULE_8__","column","newValue","dataRow","__webpack_require__","r","__webpack_exports__","d","LogiTableToolbar","LogiStandardToolbar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_7___default","root","paddingLeft","spacing","paddingRight","spacer","flex","actions","color","text","secondary","title","Fragment","undefined","insertNewRecord","actionsAndStates","onClick","insertedRecordData","discardInsertMode","enterInsertMode","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1__","_date_io_moment__WEBPACK_IMPORTED_MODULE_2__","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_6___default","EditableTableCell","readOnly","onDateInputChange","date","toISOString","utils","DateFnsUtils","autoOk","onChange","rightArrowIcon","leftArrowIcon","e","target","getBool","type","Date","toLocaleDateString","toLocaleString","toLocaleTimeString","toLowerCase","LogiTableHeader","onSelectAllClick","_React$useState","React","_React$useState2","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","order","setOrder","_React$useState3","_React$useState4","orderBy","setOrderBy","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_2__","showSelectAll","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_6__","aria-label","col","sortDirection","allowSort","_material_ui_core_TableSortLabel__WEBPACK_IMPORTED_MODULE_5__","active","direction","clickedColumn","event","customSortFunction","isDesc","StandardActions","EditComp","DeleteComp","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_1__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","progress","marginLeft","marginRight","actionInProgress","size","saveChanges","deleteRecord","CommitButton","CancelButton","EditButton","DeleteButton","Cancel","createSvgIcon","react_default","Chip_Chip","forwardRef","ref","avatarProp","avatar","classNameProp","clickableProp","clickable","_props$color","_props$component","Component","deleteIconProp","deleteIcon","iconProp","icon","label","onDelete","onKeyDown","onKeyUp","_props$size","_props$variant","variant","other","objectWithoutProperties_default","chipRef","useRef","handleDeleteIconClick","stopPropagation","small","clsx_m","helpers","outlined","outlinedPrimary","outlinedSecondary","sizeSmall","deletable","customClasses","deleteIconSmall","isValidElement","cloneElement","avatarSmall","childrenClassName","avatarChildren","iconSmall","handleRef","reactHelpers","extends_default","role","tabIndex","currentTarget","preventDefault","current","blur","labelSmall","esm_Chip_Chip","withStyles","grey","deleteIconColor","colorManipulator","primary","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","getContrastText","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","verticalAlign","boxSizing","colorPrimary","main","contrastText","colorSecondary","WebkitTapHighlightColor","&:hover, &:focus","&:active","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","&:focus","deletableColorPrimary","deletableColorSecondary","$clickable&:hover, $clickable&:focus, $deletable&:focus","action","hoverOpacity","& $avatar","width","avatarColorPrimary","dark","avatarColorSecondary","iconColorPrimary","iconColorSecondary","userSelect","margin","&:hover","deleteIconColorPrimary","&:hover, &:active","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","name","Users","useTheme","fullScreen","useMediaQuery","breakpoints","down","Auth","useAuth","slicedToArray","passwordDialogOpen","setPasswordDialogOpen","newPassword","setNewPassword","repeatPassword","setRepeatPassword","_useState5","_useState6","selectedUserID","setSelectedUserID","_useState7","_useState8","rolesDialogOpen","setRolesDialogOpen","_useState9","_useState10","refreshData","setRefreshData","_fetchUsers","asyncToGenerator","regenerator_default","mark","_callee3","users","wrap","_context3","prev","next","AuthenticatedServerCall","process","sent","abrupt","stop","apply","this","arguments","memorizedFetchUser","useCallback","columnsU","rowAsAndSs","assign","updateStatement","length","substring","UserID","Update","then","console","log","catch","error","Promise","resolve","IconButton","Fingerprint_default","GroupWork_default","logi_table","tableToolbar","_ref","_callee","recordData","_context","UserName","EMail","alert","Insert","trim","LoggedInUserID","IsDisabled","t0","_x","dense","keyAccessor","data","Dialog","open","onClose","DialogTitle","DialogContent","TextField","fullWidth","required","DialogActions","Button","_callee2","_context2","password","autoFocus","disabled","Users_UserRoleDialog","flexWrap","minWidth","minHeight","chip","UserRoleDialog","_useState11","_useState12","userRoles","setUserRoles","_useState13","_useState14","isLoadingRoles","setIsLoadingRoles","_useState15","_useState16","loadingRolesError","setLoadingRolesError","getUsersRoles","url","memorizedGetUserRoles","Paper","CircularProgress","RoleID","Role","IsUsersRole","Avatar","userID","roleID","isAdd","response","modifyUsersRole","RemoveCircle_default","AddCircle_default","_interopRequireDefault","defineProperty","exports","_react","_default","marginTop","paper","marginBottom","table","tableWrapper","overflowX","LogiTable","page","setPage","rowsPerPage","setRowsPerPage","isLoading","setIsLoading","isError","setIsError","addingNewRecord","setAddingNewRecord","newlyAddedRow","fetchData","fetchedData","emptyRows","Math","min","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_12__","MomentUtils","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_4__","_LogiTableHeader__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_5__","_LogiDataRow__WEBPACK_IMPORTED_MODULE_11__","newRecord","forEach","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_6__","colSpan","rowSpan","align","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","slice","style","_material_ui_core_TablePagination__WEBPACK_IMPORTED_MODULE_7__","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","_event","newPage","onChangeRowsPerPage"],"mappings":"wOA6DMA,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,SAAU,CACRC,qBAAsB,CACpBC,gBAAiBJ,EAAMK,QAAQC,WAAWC,cAM3C,SAASC,EAAYC,GAW1B,IAAMC,EAAUZ,IACRa,EAAmBF,EAAnBE,QAASC,EAAUH,EAAVG,MACXC,EAAO,2BAAAC,OAA8BF,GAH1CG,EAI+BC,oBAAS,GAJxCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIMK,EAJNH,EAAA,GAIgBI,EAJhBJ,EAAA,GAAAK,EAMqBN,mBAASP,EAAMc,KANpCC,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAMMC,EANNC,EAAA,GAMWC,EANXD,EAAA,GAWD,SAASE,EAAYC,EAAYC,GAC/B,IAAIC,EAASX,OAAAY,EAAA,EAAAZ,CAAA,GAAQK,GACrBM,EAAUD,GAAcD,EACxBF,EAAOI,GACPpB,EAAMsB,cAAgBtB,EAAMsB,aAAaF,GAR3CG,oBAAU,WACRP,EAAOhB,EAAMc,MACZ,CAACd,EAAMc,MAaV,IAAIU,EAAyC,CAC3CC,cAAe,WACbb,GAAY,IAEdc,gBAAiB,WACfd,GAAY,GATdI,EAAOhB,EAAMc,KACbd,EAAMsB,cAAgBtB,EAAMsB,aAAatB,EAAMc,MAW/CH,SAAUA,KAAaX,EAAM2B,YAAa3B,EAAM2B,WAChDC,QAAS5B,EAAMc,IACfe,QAASf,EACTgB,QAAS,SAACD,GACRb,EAAOa,IAETF,aAAY3B,EAAM2B,YAAa3B,EAAM2B,YAGvC,OACEI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,UAAWlC,EAAQR,UAC1BO,EAAMoC,eACLL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWC,QAAQ,YACjBP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,SAAS,EACTC,WAAY,CAAEC,kBAAmBtC,MAGnC,KACHF,EACEyC,OAAO,SAACC,GAAD,OAAqBA,EAAEC,SAC9BC,IAAI,SAACF,EAAgBG,GACpB,OAAiB,IAAbA,EAEAhB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEW,IAAG,GAAA3C,OAAKuC,EAAEK,SAAWL,EAAEK,SAAWL,EAAEM,QAAjC7C,OAA0CF,GAC7CgD,UAAU,KACVC,GAAIhD,EACJiD,MAAM,MACNf,QAAQ,WAEPtC,EAAM2B,YACQ,iBAAfiB,EAAEU,SAA8B,KAAOV,EAAEW,cACvCX,EAAEW,cAAczC,EAAKU,GAErBO,EAAAC,EAAAC,cAACuB,EAAA,QAAD,CACEC,OAAQb,EACR3B,YAAa,SAACyC,GAAD,OACXzC,EAAYyC,EAAUd,EAAEK,WAE1BU,QAAS7C,EACTH,SAAUA,GAAYX,EAAM2B,cAOlCI,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWW,IAAG,GAAA3C,OAAKuC,EAAEK,SAAWL,EAAEK,SAAWL,EAAEM,QAAjC7C,OAA0CF,IACrDH,EAAM2B,YACQ,iBAAfiB,EAAEU,SAA8B,KAAOV,EAAEW,cACvCX,EAAEW,cAAczC,EAAKU,GAErBO,EAAAC,EAAAC,cAACuB,EAAA,QAAD,CACEC,OAAQb,EACR3B,YAAa,SAACyC,GAAD,OACXzC,EAAYyC,EAAUd,EAAEK,WAE1BU,QAAS7C,EACTH,SACEA,KAAaX,EAAM2B,YAAa3B,EAAM2B,oDC3K5DiC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,qCAAAE,IAAAJ,EAAAG,EAAAD,EAAA,wCAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,IAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAAQ,EAAAK,GAAAE,EAAAf,EAAA,KAAAgB,EAAAhB,EAAAQ,EAAAO,GAAAE,EAAAjB,EAAA,KAAAkB,EAAAlB,EAAAQ,EAAAS,GAaMxF,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuF,KAAM,CACJC,YAAazF,EAAM0F,QAAQ,GAC3BC,aAAc3F,EAAM0F,QAAQ,IAE9BE,OAAQ,CACNC,KAAM,YAERC,QAAS,CACPC,MAAO/F,EAAMK,QAAQ2F,KAAKC,UAC1BJ,KAAM,YAERK,MAAO,CACLL,KAAM,gBAKCpB,EAAmB,SAAChE,GAI/B,IAAMC,EAAUZ,IAEhB,OACE8E,EAAAnC,EAAAC,cAACsC,EAAA,EAAD,CAASpC,UAAWlC,EAAQ8E,MAC1BZ,EAAAnC,EAAAC,cAAA,OAAKE,UAAWlC,EAAQwF,OAAQzF,EAAMyF,OACtCtB,EAAAnC,EAAAC,cAAA,OAAKE,UAAWlC,EAAQkF,SACxBhB,EAAAnC,EAAAC,cAAA,OAAKE,UAAWlC,EAAQoF,SAAUrF,EAAMqF,WAKjCpB,EAAsB,SAACjE,GAKlC,IAAIqF,EAA8BlB,EAAAnC,EAAAC,cAAAkC,EAAAnC,EAAA0D,SAAA,MA+BlC,YA9B8BC,IAA1B3F,EAAM4F,kBACRP,EAAWrF,EAAM6F,iBAAiBlE,WAShCwC,EAAAnC,EAAAC,cAAAkC,EAAAnC,EAAA0D,SAAA,KACEvB,EAAAnC,EAAAC,cAACuC,EAAA,EAAD,CACEsB,QAAS,WACP9F,EAAM4F,gBAAgB5F,EAAM6F,iBAAiBE,uBAE/CN,MAAM,gBAENtB,EAAAnC,EAAAC,cAAC2C,EAAA5C,EAAD,OAEFmC,EAAAnC,EAAAC,cAACuC,EAAA,EAAD,CACEc,MAAM,YACNQ,QAAS9F,EAAM6F,iBAAiBG,kBAChCP,MAAM,kBAENtB,EAAAnC,EAAAC,cAAC6C,EAAA9C,EAAD,QAtBJmC,EAAAnC,EAAAC,cAACuC,EAAA,EAAD,CACEc,MAAM,YACNQ,QAAS9F,EAAM6F,iBAAiBI,gBAChCR,MAAM,cAENtB,EAAAnC,EAAAC,cAACyC,EAAA1C,EAAD,QAuBCmC,EAAAnC,EAAAC,cAAC+B,EAAD,CAAkByB,MAAOzF,EAAMyF,MAAOJ,QAASA,uCCnFxDzB,EAAAC,EAAAC,GAAA,IAAAI,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAgC,EAAAtC,EAAA,KAAAuC,EAAAvC,EAAA,KAAAwC,EAAAxC,EAAA,KAAAyC,EAAAzC,EAAA,KAAA0C,EAAA1C,EAAA,KAAA2C,EAAA3C,EAAAQ,EAAAkC,GAAAE,EAAA5C,EAAA,KAAA6C,EAAA7C,EAAAQ,EAAAoC,GAqIeE,UAhHf,SAA2B1G,GACzB,GAAIA,EAAMW,WAAaX,EAAMyD,OAAOkD,SAAU,CAC5C,IAAMC,EAAoB,SAACC,GAAD,OACxB7G,EAAMiB,YAAY4F,EAAKC,gBACzB,OAAQ9G,EAAMyD,OAAOH,UACnB,IAAK,OACH,OACEa,EAAAnC,EAAAC,cAACmE,EAAA,EAAD,CAAyBW,MAAOC,KAC9B7C,EAAAnC,EAAAC,cAACmE,EAAA,EAAD,CACEa,QAAQ,EACR/F,MAAOlB,EAAM2D,QAAQ3D,EAAMyD,OAAOR,UAClCiE,SAAUN,EACVO,eAAgBhD,EAAAnC,EAAAC,cAACsE,EAAAvE,EAAD,MAChBoF,cAAejD,EAAAnC,EAAAC,cAACwE,EAAAzE,EAAD,SAIvB,IAAK,OACH,OACEmC,EAAAnC,EAAAC,cAACmE,EAAA,EAAD,CAAyBW,MAAOC,KAC9B7C,EAAAnC,EAAAC,cAACmE,EAAA,EAAD,CACElF,MAAOlB,EAAM2D,QAAQ3D,EAAMyD,OAAOR,UAClCiE,SAAUN,KAIlB,IAAK,WACH,OACEzC,EAAAnC,EAAAC,cAACmE,EAAA,EAAD,CAAyBW,MAAOC,KAC9B7C,EAAAnC,EAAAC,cAACmE,EAAA,EAAD,CACElF,MAAOlB,EAAM2D,QAAQ3D,EAAMyD,OAAOR,UAClCiE,SAAUN,EACVO,eAAgBhD,EAAAnC,EAAAC,cAACsE,EAAAvE,EAAD,MAChBoF,cAAejD,EAAAnC,EAAAC,cAACwE,EAAAzE,EAAD,SAIvB,IAAK,UACH,OACEmC,EAAAnC,EAAAC,cAACoE,EAAA,EAAD,CACEa,SAAU,SAAAG,GACRrH,EAAMiB,YAAYoG,EAAEC,OAAO9E,UAE7BA,QAAS+E,MAGf,IAAK,SACL,IAAK,SACL,QACE,OACEpD,EAAAnC,EAAAC,cAACiE,EAAA,EAAD,CACEsB,KAAgC,WAA1BxH,EAAMyD,OAAOH,SAAwB,SAAW,OACtDpC,MAAOlB,EAAM2D,QAAQ3D,EAAMyD,OAAOR,UAClCiE,SAAU,SAAAG,GAAC,OAAIrH,EAAMiB,YAAYoG,EAAEC,OAAOpG,gBAMlD,OAAQlB,EAAMyD,OAAOH,UACnB,IAAK,OACH,OACEa,EAAAnC,EAAAC,cAACkC,EAAAnC,EAAM0D,SAAP,KACG,IAAI+B,KACHzH,EAAM2D,QAAQ3D,EAAMyD,OAAOR,WAC3ByE,sBAGR,IAAK,WACH,OACEvD,EAAAnC,EAAAC,cAACkC,EAAAnC,EAAM0D,SAAP,KACG,IAAI+B,KAAKzH,EAAM2D,QAAQ3D,EAAMyD,OAAOR,WAAW0E,kBAGtD,IAAK,OACH,OACExD,EAAAnC,EAAAC,cAACkC,EAAAnC,EAAM0D,SAAP,KACG,IAAI+B,KACHzH,EAAM2D,QAAQ3D,EAAMyD,OAAOR,WAC3B2E,sBAGR,IAAK,UACH,OAAOzD,EAAAnC,EAAAC,cAACoE,EAAA,EAAD,CAAU7D,QAAS+E,MAC5B,QACE,OACEpD,EAAAnC,EAAAC,cAACkC,EAAAnC,EAAM0D,SAAP,KACG1F,EAAM2D,QAAQ3D,EAAMyD,OAAOR,WAMtC,SAASsE,IACP,cAAevH,EAAM2D,QAAQ3D,EAAMyD,OAAOR,WACxC,IAAK,UACH,OAAOjD,EAAM2D,QAAQ3D,EAAMyD,OAAOR,UACpC,IAAK,SACH,OAAOjD,EAAM2D,QAAQ3D,EAAMyD,OAAOR,UAAY,EAChD,IAAK,SACH,MAE+B,SAFvBjD,EAAM2D,QACZ3D,EAAMyD,OAAOR,UACF4E,cAGf,QAEE,OAAO7H,EAAM2D,QAAQ3D,EAAMyD,OAAOR,6KCxHnC,SAAS6E,EAAgB9H,GAO7B,IACO+H,EAA8B/H,EAA9B+H,iBAAkB7H,EAAYF,EAAZE,QADzB8H,EAGyBC,IAAM1H,SAAgB,OAH/C2H,EAAAzH,OAAA0H,EAAA,EAAA1H,CAAAuH,EAAA,GAGMI,EAHNF,EAAA,GAGaG,EAHbH,EAAA,GAAAI,EAI6BL,IAAM1H,SAAS,IAJ5CgI,EAAA9H,OAAA0H,EAAA,EAAA1H,CAAA6H,EAAA,GAIME,EAJND,EAAA,GAIeE,EAJfF,EAAA,GAkBD,OACEG,EAAA1G,EAAAC,cAAC0G,EAAA,EAAD,KACED,EAAA1G,EAAAC,cAAC2G,EAAA,EAAD,KACG5I,EAAMoC,eACLsG,EAAA1G,EAAAC,cAAC4G,EAAA,EAAD,CAAWvG,QAAQ,YAChBtC,EAAM8I,cACLJ,EAAA1G,EAAAC,cAAC8G,EAAA,EAAD,CAEEvG,SAAS,EACT0E,SAAUa,EACVtF,WAAY,CAAEuG,aAAc,gBAE5B,MAEJ,KACH9I,EAAQ4C,IAAI,SAAAmG,GAAG,OACdA,EAAIpG,OAAS,KACX6F,EAAA1G,EAAAC,cAAC4G,EAAA,EAAD,CACE7F,IAAKiG,EAAIhG,SAGTiG,cAAeV,IAAYS,EAAI/F,QAASkF,GAEvCpI,EAAMmJ,WAAgC,iBAAjBF,EAAI3F,SACxBoF,EAAA1G,EAAAC,cAACmH,EAAA,EAAD,CACEC,OAAQb,IAAYS,EAAI/F,OACxBoG,UAAWlB,EACXtC,SAvCWyD,EAuCgBN,EAvCe,SACxDO,GAEA,GAAIxJ,EAAMyJ,mBACRzJ,EAAMyJ,mBAAmBD,EAAOD,OAC7B,CACH,IAAMG,EAASlB,IAAYe,EAAcrG,QAAoB,SAAVkF,EACnDC,EAASqB,EAAS,MAAQ,QAC1BjB,EAAWc,EAAcrG,YAiCZ+F,EAAI/F,QAGP+F,EAAI/F,QA5CQ,IAACqG,yCCrB7B3F,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,oCAAA6F,IAAA/F,EAAAG,EAAAD,EAAA,6BAAA8F,IAAAhG,EAAAG,EAAAD,EAAA,+BAAA+F,IAAA,IAAA3F,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAA4F,EAAAlG,EAAA,KAAAmG,EAAAnG,EAAAQ,EAAA0F,GAAAE,EAAApG,EAAA,KAAAqG,EAAArG,EAAAQ,EAAA4F,GAAAE,EAAAtG,EAAA,KAAAuG,EAAAvG,EAAAQ,EAAA8F,GAAAE,EAAAxG,EAAA,KAAAyG,EAAAzG,EAAAQ,EAAAgG,GAAAE,EAAA1G,EAAA,IAAArB,GAAAqB,EAAA,KAAAA,EAAA,KAAA2G,EAAA3G,EAAA,KAAA4G,EAAA5G,EAAA,KAqBMvE,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiL,SAAU,CACRC,WAAYnL,EAAM0F,QAAQ,GAC1B0F,YAAapL,EAAM0F,QAAQ,QAK1B,SAAS0E,EAAgB3J,GAC9B,IAAMC,EAAUZ,IAChB,OAAIW,EAAM4K,iBACDzG,EAAAnC,EAAAC,cAACuI,EAAA,EAAD,CAAkBK,KAAM,GAAI1I,UAAWlC,EAAQwK,WAEpDzK,EAAMW,SACDwD,EAAAnC,EAAAC,cAAC2H,EAAa5J,GAGrBmE,EAAAnC,EAAAC,cAAAkC,EAAAnC,EAAA0D,SAAA,UACyBC,IAAtB3F,EAAM8K,YAA4B3G,EAAAnC,EAAAC,cAAC2H,EAAa5J,GAAY,UACrC2F,IAAvB3F,EAAM+K,aAA6B5G,EAAAnC,EAAAC,cAAC4H,EAAe7J,GAAY,MAK/D,SAAS4J,EAAS5J,GACvB,OAAKA,EAAMW,SAUPwD,EAAAnC,EAAAC,cAAAkC,EAAAnC,EAAA0D,SAAA,KACEvB,EAAAnC,EAAAC,cAAC+I,EAAD,CACElF,QAAS,SAACuB,GACRrH,EAAM8K,aAAe9K,EAAM8K,iBAG/B3G,EAAAnC,EAAAC,cAACgJ,EAAD,CACEnF,QAAS,WACP9F,EAAM0B,sBAhBZyC,EAAAnC,EAAAC,cAACiJ,EAAD,CACEpF,QAAS,WACP9F,EAAMyB,mBAqBT,SAASoI,EAAW7J,GACzB,OACEmE,EAAAnC,EAAAC,cAACkJ,EAAD,CAAcrF,QAAS,kBAAM9F,EAAM+K,cAAgB/K,EAAM+K,kBAI7D,IAAMG,EAAa,SAAClL,GAAD,OACjBmE,EAAAnC,EAAAC,cAACqI,EAAA,EAAD,CAAYxE,QAAS9F,EAAM8F,QAASL,MAAM,YACxCtB,EAAAnC,EAAAC,cAACgI,EAAAjI,EAAD,QAIEmJ,EAAe,SAACnL,GAAD,OACnBmE,EAAAnC,EAAAC,cAACqI,EAAA,EAAD,CAAYxE,QAAS9F,EAAM8F,QAASL,MAAM,cACxCtB,EAAAnC,EAAAC,cAAC8H,EAAA/H,EAAD,QAIEgJ,EAAe,SAAChL,GAAD,OACnBmE,EAAAnC,EAAAC,cAACqI,EAAA,EAAD,CAAYxE,QAAS9F,EAAM8F,QAASL,MAAM,gBACxCtB,EAAAnC,EAAAC,cAACkI,EAAAnI,EAAD,QAIEiJ,EAAe,SAACjL,GAAD,OACnBmE,EAAAnC,EAAAC,cAACqI,EAAA,EAAD,CAAYhF,MAAM,YAAYQ,QAAS9F,EAAM8F,QAASL,MAAM,kBAC1DtB,EAAAnC,EAAAC,cAACoI,EAAArI,EAAD,0PC5FWoJ,EAAA3K,OAAA4K,EAAA,GAAcC,EAAAtJ,EAAKC,cAAA,QAClC8B,EAAA,oLACC,uCCqQGwH,EAAOD,EAAAtJ,EAAKwJ,WAAA,SAAAxL,EAAAyL,GAChB,IAAAC,EAAA1L,EAAA2L,OACA1L,EAAAD,EAAAC,QACA2L,EAAA5L,EAAAmC,UACA0J,EAAA7L,EAAA8L,UACAC,EAAA/L,EAAAsF,MACAA,OAAA,IAAAyG,EAAA,UAAAA,EACAC,EAAAhM,EAAAmD,UACA8I,OAAA,IAAAD,EAAA,MAAAA,EACAE,EAAAlM,EAAAmM,WACAC,EAAApM,EAAAqM,KACAC,EAAAtM,EAAAsM,MACAxG,EAAA9F,EAAA8F,QACAyG,EAAAvM,EAAAuM,SACAC,EAAAxM,EAAAwM,UACAC,EAAAzM,EAAAyM,QACAC,EAAA1M,EAAA6K,KACAA,OAAA,IAAA6B,EAAA,SAAAA,EACAC,EAAA3M,EAAA4M,QACAA,OAAA,IAAAD,EAAA,UAAAA,EACAE,EAAcC,IAAwB9M,EAAA,0JAEtC+M,EAAgBzB,EAAAtJ,EAAKgL,OAAA,MAErBC,EAAA,SAAAzD,GAEAA,EAAA0D,kBAEAX,GACAA,EAAA/C,IA0CAsC,KAAA,IAAAD,IAAA/F,IAAA+F,EACAsB,EAAA,UAAAtC,EACA1I,EAAkB1B,OAAA2M,EAAA,EAAA3M,CAAIR,EAAA8E,KAAA6G,EAAA,YAAAtG,GAAA,CAAArF,EAAA,QAAAI,OAA6EI,OAAA4M,EAAA,EAAA5M,CAAU6E,KAAAwG,GAAA7L,EAAA,iBAAAI,OAAwDI,OAAA4M,EAAA,EAAA5M,CAAU6E,KAAAiH,GAAAtM,EAAA,iBAAAI,OAAuDI,OAAA4M,EAAA,EAAA5M,CAAU6E,MAAA,YAAAsH,GAAA,CAAA3M,EAAAqN,SAAA,YAAAhI,GAAArF,EAAAsN,gBAAA,cAAAjI,GAAArF,EAAAuN,mBAAAL,GAAAlN,EAAAwN,UAAA3B,GAAA7L,EAAA6L,UAAAS,GAAAtM,EAAAyN,WAChPvB,EAAA,KAEA,GAAAI,EAAA,CACA,IAAAoB,EAAwBlN,OAAA2M,EAAA,EAAA3M,CAAI,YAAA6E,IAAA,YAAAsH,EAAA3M,EAAA,kBAAAI,OAAkFI,OAAA4M,EAAA,EAAA5M,CAAU6E,KAAArF,EAAA,0BAAAI,OAAqDI,OAAA4M,EAAA,EAAA5M,CAAU6E,MAAA6H,GAAAlN,EAAA2N,iBACvLzB,EAAAD,GAAmCZ,EAAAtJ,EAAK6L,eAAA3B,GAAkCZ,EAAAtJ,EAAK8L,aAAA5B,EAAA,CAC/E/J,UAAiB1B,OAAA2M,EAAA,EAAA3M,CAAIyL,EAAAlM,MAAAmC,UAAAlC,EAAAkM,WAAAwB,GACrB7H,QAAAmH,IACS3B,EAAAtJ,EAAKC,cAAemJ,EAAU,CACvCjJ,UAAiB1B,OAAA2M,EAAA,EAAA3M,CAAIR,EAAAkM,WAAAwB,GACrB7H,QAAAmH,IAIA,IAAAtB,EAAA,KAEAD,GAAoBJ,EAAAtJ,EAAK6L,eAAAnC,KACzBC,EAAaL,EAAAtJ,EAAK8L,aAAApC,EAAA,CAClBvJ,UAAiB1B,OAAA2M,EAAA,EAAA3M,CAAIR,EAAA0L,OAAAD,EAAA1L,MAAAmC,UAAAgL,GAAAlN,EAAA8N,YAAA,YAAAzI,GAAArF,EAAA,cAAAI,OAA+HI,OAAA4M,EAAA,EAAA5M,CAAU6E,MAC9J0I,kBAAyBvN,OAAA2M,EAAA,EAAA3M,CAAIR,EAAAgO,eAAAvC,EAAA1L,MAAAgO,sBAI7B,IAAA3B,EAAA,KAEAD,GAAkBd,EAAAtJ,EAAK6L,eAAAzB,KACvBC,EAAWf,EAAAtJ,EAAK8L,aAAA1B,EAAA,CAChBjK,UAAiB1B,OAAA2M,EAAA,EAAA3M,CAAIR,EAAAoM,KAAAD,EAAApM,MAAAmC,UAAAgL,GAAAlN,EAAAiO,UAAA,YAAA5I,GAAArF,EAAA,YAAAI,OAAuHI,OAAA4M,EAAA,EAAA5M,CAAU6E,SAKtJ,IAAA6I,EAAkB1N,OAAA2N,EAAA,EAAA3N,CAAUsM,EAAAtB,GAC5B,OAASH,EAAAtJ,EAAKC,cAAAgK,EAA0BoC,IAAQ,CAChDC,KAAAxC,GAAAS,EAAA,cAAA5G,EACAxD,YACAoM,SAAAzC,GAAAS,EAAA,OAAA5G,EACAG,UACA0G,UA9EA,SAAAhD,GAMA,GALAgD,GACAA,EAAAhD,GAIAA,EAAAgF,gBAAAhF,EAAAlC,OAAA,CAIA,IAAAtE,EAAAwG,EAAAxG,IAEA,MAAAA,GAAA,UAAAA,GAAA,cAAAA,GAAA,WAAAA,GAAA,WAAAA,GACAwG,EAAAiF,mBAkEAhC,QA9DA,SAAAjD,GAMA,GALAiD,GACAA,EAAAjD,GAIAA,EAAAgF,gBAAAhF,EAAAlC,OAAA,CAIA,IAAAtE,EAAAwG,EAAAxG,KAEA8C,GAAA,MAAA9C,GAAA,UAAAA,GAEKuJ,GAAA,cAAAvJ,GAAA,WAAAA,EAEA,WAAAA,GAAA+J,EAAA2B,SACL3B,EAAA2B,QAAAC,OAFApC,EAAA/C,GAFA1D,EAAA0D,KAkDAiC,IAAA0C,GACGtB,GAAAlB,GAAAU,EAA0Bf,EAAAtJ,EAAKC,cAAA,QAClCE,UAAe1B,OAAA2M,EAAA,EAAA3M,CAAIR,EAAAqM,MAAAa,GAAAlN,EAAA2O,aAChBtC,GAAAH,KA2FY0C,EAAApO,OAAAqO,EAAA,EAAArO,CA9cE,SAAAlB,GACjB,IAEAI,EAAA,UAAAJ,EAAAK,QAAA4H,KAAAjI,EAAAK,QAAAmP,KAAA,KAAAxP,EAAAK,QAAAmP,KAAA,KACAC,EAAwBvO,OAAAwO,EAAA,EAAAxO,CAAIlB,EAAAK,QAAA2F,KAAA2J,QAAA,KAC5B,OAEAnK,KAAA,CACAoK,WAAA5P,EAAA6P,WAAAD,WACAE,SAAA9P,EAAA6P,WAAAE,QAAA,IACAC,QAAA,cACAC,WAAA,SACAC,eAAA,SACAC,OAZA,GAaApK,MAAA/F,EAAAK,QAAA+P,gBAAAhQ,GACAA,kBACAiQ,aAAAF,GACAG,WAAA,SACAC,WAAAvQ,EAAAwQ,YAAAC,OAAA,mCAEAC,OAAA,UAEAC,QAAA,OACAC,eAAA,OACAC,OAAA,OAEA9N,QAAA,EAEA+N,cAAA,SACAC,UAAA,cAIA7C,UAAA,CACAiC,OAhCA,IAoCAa,aAAA,CACA5Q,gBAAAJ,EAAAK,QAAAsP,QAAAsB,KACAlL,MAAA/F,EAAAK,QAAAsP,QAAAuB,cAIAC,eAAA,CACA/Q,gBAAAJ,EAAAK,QAAA4F,UAAAgL,KACAlL,MAAA/F,EAAAK,QAAA4F,UAAAiL,cAIA3E,UAAA,CACA6E,wBAAA,cAEAV,OAAA,UACAW,mBAAA,CACAjR,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAASd,EAAA,MAElCkR,WAAA,CACAC,UAAAvR,EAAAwR,QAAA,GACApR,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAASd,EAAA,OAKlCqR,sBAAA,CACAJ,mBAAA,CACAjR,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAASlB,EAAAK,QAAAsP,QAAAsB,KAAA,MAElCK,WAAA,CACAlR,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAASlB,EAAAK,QAAAsP,QAAAsB,KAAA,OAKlCS,wBAAA,CACAL,mBAAA,CACAjR,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAASlB,EAAAK,QAAA4F,UAAAgL,KAAA,MAElCK,WAAA,CACAlR,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAASlB,EAAAK,QAAA4F,UAAAgL,KAAA,OAKlC9C,UAAA,CACAwD,UAAA,CACAvR,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAASd,EAAA,OAKlCwR,sBAAA,CACAD,UAAA,CACAvR,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAASlB,EAAAK,QAAAsP,QAAAsB,KAAA,MAKlCY,wBAAA,CACAF,UAAA,CACAvR,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAASlB,EAAAK,QAAA4F,UAAAgL,KAAA,MAKlClD,SAAA,CACA3N,gBAAA,cACAyQ,OAAA,aAAA/P,OAAA,UAAAd,EAAAK,QAAA4H,KAAA,mDACA6J,0DAAA,CACA1R,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAAIlB,EAAAK,QAAA2F,KAAA2J,QAAA3P,EAAAK,QAAA0R,OAAAC,eAE7BC,YAAA,CACA9G,YAAA,IAKA6C,gBAAA,CACAjI,MAAA/F,EAAAK,QAAAsP,QAAAsB,KACAJ,OAAA,aAAA/P,OAAAd,EAAAK,QAAAsP,QAAAsB,MACAa,0DAAA,CACA1R,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAAIlB,EAAAK,QAAAsP,QAAAsB,KAAAjR,EAAAK,QAAA0R,OAAAC,gBAK7B/D,kBAAA,CACAlI,MAAA/F,EAAAK,QAAA4F,UAAAgL,KACAJ,OAAA,aAAA/P,OAAAd,EAAAK,QAAA4F,UAAAgL,MACAa,0DAAA,CACA1R,gBAAyBc,OAAAwO,EAAA,EAAAxO,CAAIlB,EAAAK,QAAA4F,UAAAgL,KAAAjR,EAAAK,QAAA0R,OAAAC,gBAK7B5F,OAAA,CACAhB,aAAA,EACA8G,MAxIA,GAyIA/B,OAzIA,GA0IApK,MAAA,UAAA/F,EAAAK,QAAA4H,KAAAjI,EAAAK,QAAAmP,KAAA,KAAAxP,EAAAK,QAAAmP,KAAA,KACAM,SAAA9P,EAAA6P,WAAAE,QAAA,KAEAvB,YAAA,CACA0D,MA7IA,GA8IA/B,OA9IA,GA+IAL,SAAA9P,EAAA6P,WAAAE,QAAA,KAIAoC,mBAAA,CACApM,MAAA/F,EAAAK,QAAAsP,QAAAuB,aACA9Q,gBAAAJ,EAAAK,QAAAsP,QAAAyC,MAIAC,qBAAA,CACAtM,MAAA/F,EAAAK,QAAA4F,UAAAiL,aACA9Q,gBAAAJ,EAAAK,QAAA4F,UAAAmM,MAIA1D,eAAA,CACAyB,OAAA,IAIArD,KAAA,CACA/G,MAAA,UAAA/F,EAAAK,QAAA4H,KAAAjI,EAAAK,QAAAmP,KAAA,KAAAxP,EAAAK,QAAAmP,KAAA,KACArE,WAAA,EACAC,aAAA,GAEAuD,UAAA,CACAuD,MAAA,GACA9G,aAAA,GAIAkH,iBAAA,CACAvM,MAAA,WAIAwM,mBAAA,CACAxM,MAAA,WAIAgH,MAAA,CACAiD,QAAA,OACAC,WAAA,SACAxK,YAAA,GACAE,aAAA,GACA6M,WAAA,OACAlC,WAAA,SACAI,OAAA,WAEArB,WAAA,CACA5J,YAAA,EACAE,aAAA,GAIAiH,WAAA,CAEAwE,wBAAA,cACArL,MAAA0J,EACAiB,OAAA,UACAP,OAAA,OACAsC,OAAA,eACAC,UAAA,CACA3M,MAAe7E,OAAAwO,EAAA,EAAAxO,CAAIuO,EAAA,MAGnBpB,gBAAA,CACA8B,OAAA,GACAsC,OAAA,gBAIAE,uBAAA,CACA5M,MAAa7E,OAAAwO,EAAA,EAAAxO,CAAIlB,EAAAK,QAAAsP,QAAAuB,aAAA,IACjB0B,oBAAA,CACA7M,MAAA/F,EAAAK,QAAAsP,QAAAuB,eAKA2B,yBAAA,CACA9M,MAAa7E,OAAAwO,EAAA,EAAAxO,CAAIlB,EAAAK,QAAA4F,UAAAiL,aAAA,IACjB0B,oBAAA,CACA7M,MAAA/F,EAAAK,QAAA4F,UAAAiL,eAKA4B,+BAAA,CACA/M,MAAa7E,OAAAwO,EAAA,EAAAxO,CAAIlB,EAAAK,QAAAsP,QAAAsB,KAAA,IACjB2B,oBAAA,CACA7M,MAAA/F,EAAAK,QAAAsP,QAAAsB,OAKA8B,iCAAA,CACAhN,MAAa7E,OAAAwO,EAAA,EAAAxO,CAAIlB,EAAAK,QAAA4F,UAAAgL,KAAA,IACjB2B,oBAAA,CACA7M,MAAA/F,EAAAK,QAAA4F,UAAAgL,SAwNgC,CAChC+B,KAAA,WADe,CAEZhH,iJCzLGlM,GAFSmT,UAlQqC,SAAAxS,GAClD,IAAMT,EAAQkT,cACRC,EAAaC,YAAcpT,EAAMqT,YAAYC,KAAK,OAClDC,EAAYC,oBAHyC/K,EAIPC,IAAM1H,UAAS,GAJR2H,EAAAzH,OAAAuS,EAAA,EAAAvS,CAAAuH,EAAA,GAIpDiL,EAJoD/K,EAAA,GAIhCgL,EAJgChL,EAAA,GAAA5H,EAKrBC,mBAAS,IALYC,EAAAC,OAAAuS,EAAA,EAAAvS,CAAAH,EAAA,GAKpD6S,EALoD3S,EAAA,GAKvC4S,EALuC5S,EAAA,GAAAK,EAMfN,mBAAS,IANMQ,EAAAN,OAAAuS,EAAA,EAAAvS,CAAAI,EAAA,GAMpDwS,EANoDtS,EAAA,GAMpCuS,EANoCvS,EAAA,GAAAwS,EAOfhT,qBAPeiT,EAAA/S,OAAAuS,EAAA,EAAAvS,CAAA8S,EAAA,GAOpDE,EAPoDD,EAAA,GAOpCE,EAPoCF,EAAA,GAAAG,EAQbpT,oBAAS,GARIqT,EAAAnT,OAAAuS,EAAA,EAAAvS,CAAAkT,EAAA,GAQpDE,EARoDD,EAAA,GAQnCE,EARmCF,EAAA,GAAAG,EASrBxT,mBAAiB,GATIyT,EAAAvT,OAAAuS,EAAA,EAAAvS,CAAAsT,EAAA,GASpDE,EAToDD,EAAA,GASvCE,EATuCF,EAAA,YAAAG,IAAA,OAAAA,EAAA1T,OAAA2T,EAAA,EAAA3T,CAAA4T,EAAArS,EAAAsS,KAW3D,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAArS,EAAAyS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoB9B,EAAK+B,wBAAL,GAAAxU,OACbyU,wFADa,kBAEhB,OAHJ,cACMN,EADNE,EAAAK,KAAAL,EAAAM,OAAA,SAKSR,GALT,wBAAAE,EAAAO,SAAAV,OAX2DW,MAAAC,KAAAC,WAoB3D,IAAMC,EAAqBC,sBApBgC,kBAAAnB,EAAAe,MAAAC,KAAAC,YAoBR,IAG7CG,EAA0B,CAC9B,CACErS,OAAQ,UACRD,SAAU,kBACVK,SAAU,eACVC,cAAe,SAACzC,EAAU0U,GACxB,OACElK,EAAAtJ,EAAAC,cAAC0H,EAAA,gBAADlJ,OAAAgV,OAAA,GACMD,EADN,CAEE1K,YAAa,WAEX,IAAI4K,EAA0B,GAC9B,IAAK,IAAI1S,KAAOwS,EAAW3T,QACrB2T,EAAW3T,QAAQmB,KAASwS,EAAW5T,QAAQoB,KACjD0S,GAAe,GAAArV,OAAO2C,EAAP,QAAA3C,OAAiBmV,EAAW3T,QAAQmB,GAApC,QAGnB,OAAI0S,EAAgBC,OAAS,GAE3BD,EAAkBA,EAAgBE,UAChC,EACAF,EAAgBC,OAAS,GAEpB7C,EAAK+B,wBAAL,GAAAxU,OACFyU,wFADE,kBAEL,MACA,CACEe,OAAQL,EAAW5T,QAAQiU,OAC3BC,OAAQJ,IAGTK,KAAK,SAAClS,GACLmS,QAAQC,IAAIpS,GAGZqQ,EAAeD,EAAc,KAE9BiC,MAAM,SAACC,GACNH,QAAQC,IAAIE,GACZX,EAAW9T,qBAGV0U,QAAQC,SAAQ,SAMjC,CACEnT,OAAQ,SACRD,SAAU,SACVK,SAAU,SACVT,QAAQ,EACR8D,UAAU,GAEZ,CACEzD,OAAQ,WACRD,SAAU,WACVK,SAAU,UAEZ,CACEJ,OAAQ,QACRD,SAAU,QACVK,SAAU,UAEZ,CACEJ,OAAQ,gBACRD,SAAU,YACVK,SAAU,YAEZ,CACEJ,OAAQ,cACRD,SAAU,aACVK,SAAU,WAEZ,CACEJ,OAAQ,UACRD,SAAU,kBACVK,SAAU,eACVC,cAAe,SAAAzC,GACb,OACEwK,EAAAtJ,EAAAC,cAAAqJ,EAAAtJ,EAAA0D,SAAA,KACE4F,EAAAtJ,EAAAC,cAACqU,EAAA,EAAD,CACExQ,QAAS,SAAC0D,GACRkK,EAAkB5S,EAAI+U,QACtB3C,GAAsB,IAExBzN,MAAM,kBAEN6F,EAAAtJ,EAAAC,cAACsU,EAAAvU,EAAD,OAEFsJ,EAAAtJ,EAAAC,cAACqU,EAAA,EAAD,CACExQ,QAAS,SAAC0D,GACRkK,EAAkB5S,EAAI+U,QACtB/B,GAAmB,IAErBrO,MAAM,kBAEN6F,EAAAtJ,EAAAC,cAACuU,EAAAxU,EAAD,WAQZ,OACEsJ,EAAAtJ,EAAAC,cAAAqJ,EAAAtJ,EAAA0D,SAAA,KACE4F,EAAAtJ,EAAAC,cAACwU,EAAA,UAAD,CACEC,aAAc,SAAC7Q,GACb,OACEyF,EAAAtJ,EAAAC,cAAC+B,EAAA,oBAAD,CACE6B,iBAAkBA,EAClBJ,MAAO,QACPG,gBAAe,eAAA+Q,EAAAlW,OAAA2T,EAAA,EAAA3T,CAAA4T,EAAArS,EAAAsS,KAAE,SAAAsC,EAAMC,GAAN,IAAAhV,EAAA,OAAAwS,EAAArS,EAAAyS,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,UAAAkC,EAAAnC,KAAA,GAEP9S,EAAegE,EAAiBE,sBACzBgR,UAAalV,EAAQmV,MAHrB,CAAAF,EAAAlC,KAAA,eAIXqC,MAAM,mCAJKH,EAAA9B,OAAA,wBAAA8B,EAAAlC,KAAA,EAOP9B,EAAK+B,wBAAL,GAAAxU,OACDyU,wFADC,kBAEJ,OACA,CACEoC,OAAM,4DAAA7W,OAA8DwB,EAAQkV,SAASI,OAA/E,UAAA9W,OAA8FwB,EAAQmV,MAAMG,OAA5G,iCAAA9W,OACAyS,EAAKsE,eADL,sBAAA/W,OAEJwB,EAAQwV,WAAaxV,EAAQwV,WAAa,EAFtC,OAXG,OAkBbnD,EAAeD,EAAc,GAC7BpO,EAAiBG,oBAnBJ8Q,EAAAlC,KAAA,iBAAAkC,EAAAnC,KAAA,GAAAmC,EAAAQ,GAAAR,EAAA,SAqBbd,QAAQC,IAARa,EAAAQ,IACAL,MAAM,iDAtBO,yBAAAH,EAAA7B,SAAA2B,EAAA,kBAAF,gBAAAW,GAAA,OAAAZ,EAAAzB,MAAAC,KAAAC,YAAA,MA4BrBnB,YAAaA,EACbuD,OAAO,EACPrO,WAAW,EACXjJ,QAASqV,EACTkC,YAAY,SACZC,KAAMrC,EACNjT,gBAAgB,IAElBkJ,EAAAtJ,EAAAC,cAAC0V,EAAA,EAAD,CACEjF,WAAYA,EACZkF,KAAM3E,EACN4E,QAAS,kBAAM3E,GAAsB,IACrCxQ,kBAAgB,2BAEhB4I,EAAAtJ,EAAAC,cAAC6V,EAAA,EAAD,CAAa1U,GAAG,2BACb,mBAEHkI,EAAAtJ,EAAAC,cAAC8V,EAAA,EAAD,KACEzM,EAAAtJ,EAAAC,cAAC+V,EAAA,EAAD,CACEhG,OAAO,QACP5O,GAAG,cACHkJ,MAAM,eACN9E,KAAK,WACLyQ,WAAS,EACTC,UAAQ,EACRhX,MAAOiS,EACPjM,SAAU,SAAAsC,GAAK,OAAI4J,EAAe5J,EAAMlC,OAAOpG,UAEjDoK,EAAAtJ,EAAAC,cAAC+V,EAAA,EAAD,CACEhG,OAAO,QACP5O,GAAG,iBACHkJ,MAAM,kBACN9E,KAAK,WACLyQ,WAAS,EACTC,UAAQ,EACRhX,MAAOmS,EACPnM,SAAU,SAAAsC,GAAK,OAAI8J,EAAkB9J,EAAMlC,OAAOpG,WAGtDoK,EAAAtJ,EAAAC,cAACkW,EAAA,EAAD,KACE7M,EAAAtJ,EAAAC,cAACmW,EAAA,EAAD,CACEtS,QAAS,WACPoN,GAAsB,GACtBE,EAAe,IACfE,EAAkB,IAClBI,OAAkB/N,IAEpBL,MAAM,aAPR,UAWAgG,EAAAtJ,EAAAC,cAACmW,EAAA,EAAD,CACEtS,QAAOrF,OAAA2T,EAAA,EAAA3T,CAAA4T,EAAArS,EAAAsS,KAAE,SAAA+D,IAAA,OAAAhE,EAAArS,EAAAyS,KAAA,SAAA6D,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,cAAA0D,EAAAtD,OAAA,SACAlC,EAAK+B,wBAAL,GAAAxU,OACFyU,wFADE,yBAEL,MACA,CACEe,OAAM,GAAAxV,OAAKoT,GACX8E,SAAUpF,IAGX4C,KAAK,SAAClS,GACLuP,EAAe,IACfE,EAAkB,IAClBI,OAAkB/N,GAClBuN,GAAsB,KAEvBgD,MAAM,SAACC,GACNH,QAAQC,IAAIE,MAhBT,wBAAAmC,EAAArD,SAAAoD,MAoBT/S,MAAM,UACNkT,WAAS,EACTC,SAAUtF,EAAYwC,QAAU,GAAKxC,IAAgBE,GAvBvD,UA6BHQ,EACCvI,EAAAtJ,EAAAC,cAACyW,EAAD,CACEhG,WAAYA,EACZoB,mBAAoBA,EACpBL,eAAgBA,EAChBC,kBAAmBA,EACnBZ,KAAMA,IAEN,OAOQxT,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuF,KAAM,CACJwK,QAAS,OACTE,eAAgB,SAChBkJ,SAAU,OACVrW,QAAS/C,EAAM0F,QAAQ,GACvB2T,SAAU,IACVC,UAAW,KAEbC,KAAM,CACJ9G,OAAQzS,EAAM0F,QAAQ,SAKtB8T,EAAiB,SAAS/Y,GAO9B,IAAMC,EAAUZ,IADf2Z,EAEiCzY,qBAFjC0Y,EAAAxY,OAAAuS,EAAA,EAAAvS,CAAAuY,EAAA,GAEME,EAFND,EAAA,GAEiBE,EAFjBF,EAAA,GAAAG,EAG2C7Y,oBAAS,GAHpD8Y,EAAA5Y,OAAAuS,EAAA,EAAAvS,CAAA2Y,EAAA,GAGME,EAHND,EAAA,GAGsBE,EAHtBF,EAAA,GAAAG,EAIiDjZ,oBAAS,GAJ1DkZ,EAAAhZ,OAAAuS,EAAA,EAAAvS,CAAA+Y,EAAA,GAIME,EAJND,EAAA,GAIyBE,EAJzBF,EAAA,GAKKG,EAAgB,WACpB,IAAIC,EAAG,GAAAxZ,OAAMyU,wFAAN,mBAAAzU,OACLL,EAAMyT,gBAER8F,GAAkB,GAClBvZ,EAAM8S,KAAK+B,wBAAwBgF,EAAK,OACrC9D,KAAK,SAACmD,GACLC,EAAaD,GACbK,GAAkB,KAEnBrD,MAAM,SAACC,GACNgD,OAAaxT,GACb4T,GAAkB,GAClBI,GAAqB,MAIrBG,EAAwBxE,sBAAYsE,EAAe,IA+BzD,OA7BArY,oBAAU,WACJvB,EAAMyT,gBAAkB,GAC1BqG,KAED,CAAC9Z,EAAMyT,eAAgBqG,IA0BxBxO,EAAAtJ,EAAAC,cAAC0V,EAAA,EAAD,CACEjF,WAAY1S,EAAM0S,WAClBkF,MAAM,EACNC,QAAS,kBAAM7X,EAAM8T,oBAAmB,IACxCpR,kBAAgB,2BAEhB4I,EAAAtJ,EAAAC,cAAC6V,EAAA,EAAD,CAAa1U,GAAG,2BACb,uBAEHkI,EAAAtJ,EAAAC,cAAC8V,EAAA,EAAD,KACEzM,EAAAtJ,EAAAC,cAAC8X,EAAA,EAAD,CAAO5X,UAAWlC,EAAQ8E,MACvB2U,EACCpO,EAAAtJ,EAAAC,cAAA,kCACEqX,EACFhO,EAAAtJ,EAAAC,cAAC+X,EAAA,EAAD,CAAkBnP,KAAM,UACRlF,IAAduT,EACFA,EAAUpW,IAAI,SAAC4U,GACb,OACEpM,EAAAtJ,EAAAC,cAAC4M,EAAD,CACE7L,IAAK0U,EAAKuC,OACV3N,MAAOoL,EAAKwC,KACZ/X,UAAWlC,EAAQ6Y,KACnBxT,MAAOoS,EAAKyC,YAAc,UAAY,YACtCxO,OACEL,EAAAtJ,EAAAC,cAACmY,EAAA,EAAD,MAAU1C,EAAKwC,KAAO,MAAMtE,UAAU,EAAG,GAAzC,KAEFhJ,QAAQ,WACRL,SAAU,YAnD1B,SAAyB8N,EAAgBC,EAAgBC,GACvDhB,GAAkB,GAClB,IAAIM,EAAG,GAAAxZ,OAAMyU,wFAAN,4BACP9U,EAAM8S,KAAK+B,wBACTgF,EACA,OACA,CACEQ,OAAM,GAAAha,OAAKga,GACXC,OAAM,GAAAja,OAAKia,GACXC,MAAK,GAAAla,OAAKka,IAEZ,6BAECxE,KAAK,SAACyE,MACNtE,MAAM,SAACC,GACNwD,GAAqB,KAEtB5D,KAAK,WACJwD,GAAkB,GAClBK,MAiCYa,CACEza,EAAMyT,eACNiE,EAAKuC,QACJvC,EAAKyC,cAGVhO,WACEuL,EAAKyC,YAAc7O,EAAAtJ,EAAAC,cAACyY,EAAA1Y,EAAD,MAAmBsJ,EAAAtJ,EAAAC,cAAC0Y,EAAA3Y,EAAD,UAK5C,OAGRsJ,EAAAtJ,EAAAC,cAACkW,EAAA,EAAD,KACE7M,EAAAtJ,EAAAC,cAACmW,EAAA,EAAD,CACEtS,QAAS,WACP9F,EAAM8T,oBAAmB,GACzB9T,EAAM0T,uBAAkB/N,GACxBwT,OAAaxT,IAEfL,MAAM,aANR,6CC3ZR,IAAAsV,EAA6BhX,EAAQ,IAErCnD,OAAAoa,eAAAC,EAAA,cACA5Z,OAAA,IAEA4Z,EAAAhb,aAAA,EAEA,IAAAib,EAAAH,EAAoChX,EAAQ,IAI5CoX,GAAA,EAFAJ,EAA4ChX,EAAQ,KAEpD9D,SAAAib,EAAAjb,QAAAmC,cAAA,QACA8B,EAAA,yJACC,QAED+W,EAAAhb,QAAAkb,oCCfA,IAAAJ,EAA6BhX,EAAQ,IAErCnD,OAAAoa,eAAAC,EAAA,cACA5Z,OAAA,IAEA4Z,EAAAhb,aAAA,EAEA,IAAAib,EAAAH,EAAoChX,EAAQ,IAI5CoX,GAAA,EAFAJ,EAA4ChX,EAAQ,KAEpD9D,SAAAib,EAAAjb,QAAAmC,cAAA,QACA8B,EAAA,kFACC,UAED+W,EAAAhb,QAAAkb,oCCfA,IAAAJ,EAA6BhX,EAAQ,IAErCnD,OAAAoa,eAAAC,EAAA,cACA5Z,OAAA,IAEA4Z,EAAAhb,aAAA,EAEA,IAAAib,EAAAH,EAAoChX,EAAQ,IAI5CoX,GAAA,EAFAJ,EAA4ChX,EAAQ,KAEpD9D,SAAAib,EAAAjb,QAAAmC,cAAA,QACA8B,EAAA,8mDACC,eAED+W,EAAAhb,QAAAkb,oCCfA,IAAAJ,EAA6BhX,EAAQ,IAErCnD,OAAAoa,eAAAC,EAAA,cACA5Z,OAAA,IAEA4Z,EAAAhb,aAAA,EAEA,IAAAib,EAAAH,EAAoChX,EAAQ,IAI5CoX,GAAA,EAFAJ,EAA4ChX,EAAQ,KAEpD9D,SAAAib,EAAAjb,QAAAmC,cAAA,QACA8B,EAAA,gUACC,aAED+W,EAAAhb,QAAAkb,oCCfA,IAAAJ,EAA6BhX,EAAQ,IAErCnD,OAAAoa,eAAAC,EAAA,cACA5Z,OAAA,IAEA4Z,EAAAhb,aAAA,EAEA,IAAAib,EAAAH,EAAoChX,EAAQ,IAI5CoX,GAAA,EAFAJ,EAA4ChX,EAAQ,KAEpD9D,SAAAib,EAAAjb,QAAAmC,cAAA,QACA8B,EAAA,uFACC,gBAED+W,EAAAhb,QAAAkb,oCCfA,IAAAJ,EAA6BhX,EAAQ,IAErCnD,OAAAoa,eAAAC,EAAA,cACA5Z,OAAA,IAEA4Z,EAAAhb,aAAA,EAEA,IAAAib,EAAAH,EAAoChX,EAAQ,IAI5CoX,GAAA,EAFAJ,EAA4ChX,EAAQ,KAEpD9D,SAAAib,EAAAjb,QAAAmC,cAAA,QACA8B,EAAA,yGACC,aAED+W,EAAAhb,QAAAkb,0aCAA,IAAM3b,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuF,KAAM,CACJ0M,MAAO,OACPwJ,UAAW1b,EAAM0F,QAAQ,IAE3BiW,MAAO,CACLzJ,MAAO,OACP0J,aAAc5b,EAAM0F,QAAQ,IAE9BmW,MAAO,CACLxC,SAAU,KAEZyC,aAAc,CACZC,UAAW,QAEb7Q,SAAU,CACRC,WAAYnL,EAAM0F,QAAQ,GAC1B0F,YAAapL,EAAM0F,QAAQ,QA6F1B,SAASsW,EAAUvb,GACxB,IAAMC,EAAUZ,IAD+BiB,EAEvBC,mBAAS,GAFcC,EAAAC,OAAA0H,EAAA,EAAA1H,CAAAH,EAAA,GAExCkb,EAFwChb,EAAA,GAElCib,EAFkCjb,EAAA,GAAAK,EAGTN,mBAAS,GAHAQ,EAAAN,OAAA0H,EAAA,EAAA1H,CAAAI,EAAA,GAGxC6a,EAHwC3a,EAAA,GAG3B4a,EAH2B5a,EAAA,GAAAwS,EAIbhT,oBAAS,GAJIiT,EAAA/S,OAAA0H,EAAA,EAAA1H,CAAA8S,EAAA,GAIxCqI,EAJwCpI,EAAA,GAI7BqI,EAJ6BrI,EAAA,GAAAG,EAKvBpT,mBAAS,CAAC,KALaqT,EAAAnT,OAAA0H,EAAA,EAAA1H,CAAAkT,EAAA,GAKxC+D,EALwC9D,EAAA,GAKlC9R,EALkC8R,EAAA,GAAAG,EAMjBxT,oBAAS,GANQyT,EAAAvT,OAAA0H,EAAA,EAAA1H,CAAAsT,EAAA,GAMxC+H,EANwC9H,EAAA,GAM/B+H,EAN+B/H,EAAA,GAAAgF,EAODzY,oBAAS,GAPR0Y,EAAAxY,OAAA0H,EAAA,EAAA1H,CAAAuY,EAAA,GAOxCgD,EAPwC/C,EAAA,GAOvBgD,EAPuBhD,EAAA,GAQ3CiD,OAAqBvW,EAEzBpE,oBAAU,WAGR,GAFAyU,QAAQC,IAAI,gBAEc,oBAAfjW,EAAM0X,KAAqB,CACpC,IAAIyE,EAAsCnc,EAAM0X,KAGhDmE,GAAa,GACbM,IACGpG,KAAK,SAACqG,GACLta,EAAQsa,GACRP,GAAa,KAEd3F,MAAM,SAACtT,GACNoT,QAAQC,IAAI,UAAYrT,GACxBiZ,GAAa,GACbE,GAAW,UAGfja,EAAQ9B,EAAM0X,MACdmE,GAAa,IAEd,CAAC7b,EAAM0X,KAAM1X,EAAMiU,cAUtB,IAAMoI,EACJX,GACChE,EAAO4E,KAAKC,IAAIb,EAAahE,EAAK/B,OAAS6F,EAAOE,GAAe,GAEpE,OACEhT,EAAA1G,EAAAC,cAACua,EAAA,EAAD,CAAyBzV,MAAO0V,KAC9B/T,EAAA1G,EAAAC,cAAA,OAAKE,UAAWlC,EAAQ8E,MACtB2D,EAAA1G,EAAAC,cAACya,EAAA,EAAD,CAAOva,UAAWlC,EAAQib,OACxBxS,EAAA1G,EAAAC,cAAA,OAAKE,UAAWlC,EAAQob,cACrBrb,EAAM0W,aACH1W,EAAM0W,aAAa,CACjBzQ,gBAAiB,WACfgW,GAAmB,IAErBjW,kBAAmB,WACjBiW,GAAmB,IAErBta,WAAYqa,EACZjW,mBAAoB,WAClB,OAAOmW,KAGX,KACJxT,EAAA1G,EAAAC,cAAC0a,EAAA,EAAD,CACExa,UAAWlC,EAAQmb,MACnB1Y,kBAAgB,aAChBmI,KAAM7K,EAAMwX,MAAQ,QAAU,UAE9B9O,EAAA1G,EAAAC,cAAC2a,EAAA,gBAAoB5c,GACrB0I,EAAA1G,EAAAC,cAAC4a,EAAA,EAAD,KACGb,GACCtT,EAAA1G,EAAAC,cAAC6a,EAAA,YAAD,CACE9Z,KAAM,EACNlC,IAAK,WACH,IAAIic,EAAiB,GAMrB,OALA/c,EAAME,QACHyC,OAAO,SAAAC,GAAC,MAAmB,iBAAfA,EAAEU,WACd0Z,QAAQ,SAAC/T,GACR8T,EAAU9T,EAAIhG,UAAY,KAEvB8Z,GAET5c,OAAQ,EACRD,QAASF,EAAME,QACfkC,gBAAgB,EAChBT,YAAY,EACZL,aAAc,SAACR,GACbob,EAAgBpb,KAIrB8a,GAAaE,EACZpT,EAAA1G,EAAAC,cAACgb,EAAA,EAAD,KACEvU,EAAA1G,EAAAC,cAACib,EAAA,EAAD,CACEC,QACEnd,EAAME,QAAQyC,OAAO,SAACC,GAAD,OAAqBA,EAAEC,SACzC8S,OAELyH,QAAS1B,EACT2B,MAAO,UAEP3U,EAAA1G,EAAAC,cAAA,WACG2Z,EACClT,EAAA1G,EAAAC,cAACqb,EAAA,EAAD,CACEzS,KAAM,GACN1I,UAAWlC,EAAQwK,WAGrB,0BAMRiN,GACAA,EAAK/B,OAAS,GACd+B,EACG6F,MAAM/B,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C5Y,IAAI,SAAChC,EAAUX,GACd,OACEuI,EAAA1G,EAAAC,cAAC6a,EAAA,YAAD,CACE9Z,IAAK7C,EACLW,IAAKA,EACLX,MAAOA,EACPD,QAASF,EAAME,QACfkC,eAAgBpC,EAAMoC,mBAK/Bia,EAAY,GACX3T,EAAA1G,EAAAC,cAACgb,EAAA,EAAD,CAAUO,MAAO,CAAE9N,OAAQ,GAAK2M,IAC9B3T,EAAA1G,EAAAC,cAACib,EAAA,EAAD,CACEC,QACEnd,EAAME,QAAQyC,OAAO,SAACC,GAAD,OAAqBA,EAAEC,SACzC8S,aAQjBjN,EAAA1G,EAAAC,cAACwb,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5Bva,UAAU,MACVwa,MAAOjG,EAAOA,EAAK/B,OAAS,EAC5B+F,YAAaA,EACbF,KAAMA,EACNoC,oBAAqB,CACnB5U,aAAc,iBAEhB6U,oBAAqB,CACnB7U,aAAc,aAEhB8U,aA3HV,SAA0BC,EAAiBC,GACzCvC,EAAQuC,IA2HAC,oBAxHV,SAAiCzU,GAC/BmS,GAAgBnS,EAAMlC,OAAOpG","file":"static/js/3.c1b5f33c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { TableColumn } from \"./index\";\nimport { Checkbox } from \"@material-ui/core\";\nimport EditableTableCell from \"./EditableTableCell\";\n\n/**\n *\n *\n * @export\n * @interface rowActionsAndStates\n */\nexport interface rowActionsAndStates {\n  /**\n   *Call this function to put the row in edit mode status\n   * @memberof rowActionsAndStates\n   */\n  enterEditMode: () => void;\n\n  /**\n   *Call this function to cancel the edit mode and return the row to reset status\n   * @memberof rowActionsAndStates\n   */\n  discardEditMode: () => void;\n\n  /**\n   *true if the row is in edit mode\n   * @type {boolean}\n   * @memberof rowActionsAndStates\n   */\n  editMode: boolean;\n  /**\n   * Original row data\n   * @type {*}\n   * @memberof rowActionsAndStates\n   */\n  oldData: any;\n  /**\n   * New Row Data (if it's modified)\n   * @type {*}\n   * @memberof rowActionsAndStates\n   */\n  newData: any;\n  /**\n   * Use this to set the row Data for example when a row is edited successfully and you want to replace the data\n   * without refreshing the whole content of the grid\n   * Note that this will set the the data in state and not whole table prop. i.e. if the page changes the row will reset\n   * BETTER OPTION IS TO REFRESH THE DATA FOR THE WHOLE GRID\n   * @memberof rowActionsAndStates\n   */\n  setData: (data: any) => void;\n  /**\n   * True when the record is a newly added record (not added yet!)\n   * @type {boolean}\n   * @memberof rowActionsAndStates\n   */\n  insertMode: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rowStyle: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  })\n);\n\nexport function LogiDataRow(props: {\n  columns: Array<TableColumn>;\n  index: number;\n  allowSelection?: boolean;\n  row: any;\n  insertMode?: boolean;\n  /**\n   * will be called everytime the record data is modified\n   */\n  setEditedRow?: (row: any) => void;\n}) {\n  const classes = useStyles();\n  const { columns, index } = props;\n  const labelId = `enhanced-table-checkbox-${index}`;\n  const [editMode, setEditMode] = useState(false);\n\n  const [row, setRow] = useState(props.row);\n  useEffect(() => {\n    setRow(props.row);\n  }, [props.row]);\n\n  function changeValue(value: any, columnName: string) {\n    var editedRow = { ...row };\n    editedRow[columnName] = value;\n    setRow(editedRow);\n    props.setEditedRow && props.setEditedRow(editedRow);\n  }\n  function resetRow() {\n    setRow(props.row);\n    props.setEditedRow && props.setEditedRow(props.row);\n  }\n\n  let rowStateAndAction: rowActionsAndStates = {\n    enterEditMode: () => {\n      setEditMode(true);\n    },\n    discardEditMode: () => {\n      setEditMode(false);\n      resetRow();\n    },\n    editMode: editMode || (props.insertMode ? props.insertMode : false),\n    oldData: props.row,\n    newData: row, // this will be modified data (in case user changes values)\n    setData: (newData: any) => {\n      setRow(newData);\n    },\n    insertMode: props.insertMode ? props.insertMode : false\n  };\n\n  return (\n    <TableRow className={classes.rowStyle}>\n      {props.allowSelection ? (\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked={false}\n            inputProps={{ \"aria-labelledby\": labelId }}\n          />\n        </TableCell>\n      ) : null}\n      {columns\n        .filter((c: TableColumn) => !c.hidden)\n        .map((c: TableColumn, colIndex: number) => {\n          if (colIndex === 0) {\n            return (\n              <TableCell\n                key={`${c.accessor ? c.accessor : c.header}${index}`}\n                component=\"th\"\n                id={labelId}\n                scope=\"row\"\n                padding=\"default\"\n              >\n                {props.insertMode &&\n                c.dataType === \"ActionColumn\" ? null : c.viewComponent ? (\n                  c.viewComponent(row, rowStateAndAction)\n                ) : (\n                  <EditableTableCell\n                    column={c}\n                    changeValue={(newValue: any) =>\n                      changeValue(newValue, c.accessor)\n                    }\n                    dataRow={row}\n                    editMode={editMode || props.insertMode}\n                  />\n                )}\n              </TableCell>\n            );\n          } else\n            return (\n              <TableCell key={`${c.accessor ? c.accessor : c.header}${index}`}>\n                {props.insertMode &&\n                c.dataType === \"ActionColumn\" ? null : c.viewComponent ? (\n                  c.viewComponent(row, rowStateAndAction)\n                ) : (\n                  <EditableTableCell\n                    column={c}\n                    changeValue={(newValue: any) =>\n                      changeValue(newValue, c.accessor)\n                    }\n                    dataRow={row}\n                    editMode={\n                      editMode || (props.insertMode ? props.insertMode : false)\n                    }\n                  />\n                )}\n              </TableCell>\n            );\n        })}\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Toolbar,\n  IconButton\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toolbarActionsAndState } from \"./index\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary,\n      flex: \"0 0 auto\"\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  })\n);\n\nexport const LogiTableToolbar = (props: {\n  title?: string;\n  actions?: React.ReactElement;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar className={classes.root}>\n      <div className={classes.title}>{props.title}</div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>{props.actions}</div>\n    </Toolbar>\n  );\n};\n\nexport const LogiStandardToolbar = (props: {\n  title: string;\n  actionsAndStates: toolbarActionsAndState;\n  insertNewRecord: (recordData: any) => void;\n}) => {\n  let actions: React.ReactElement = <></>;\n  if (props.insertNewRecord !== undefined) {\n    actions = !props.actionsAndStates.insertMode ? (\n      <IconButton\n        color=\"secondary\"\n        onClick={props.actionsAndStates.enterInsertMode}\n        title=\"Add Record\"\n      >\n        <AddIcon />\n      </IconButton>\n    ) : (\n      <>\n        <IconButton\n          onClick={() => {\n            props.insertNewRecord(props.actionsAndStates.insertedRecordData());\n          }}\n          title=\"Save changes\"\n        >\n          <SaveIcon />\n        </IconButton>\n        <IconButton\n          color=\"secondary\"\n          onClick={props.actionsAndStates.discardInsertMode}\n          title=\"Cancel changes\"\n        >\n          <CancelIcon />\n        </IconButton>\n      </>\n    );\n  }\n\n  return <LogiTableToolbar title={props.title} actions={actions} />;\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/moment\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider\n} from \"@material-ui/pickers\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ArrowForward from \"@material-ui/icons/ArrowForward\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport { TableColumn } from \"./index\";\n\ninterface IEditableTableCell {\n  column: TableColumn;\n  editMode?: boolean;\n  dataRow: any;\n  changeValue: (newValue: any) => void;\n}\n\nfunction EditableTableCell(props: IEditableTableCell) {\n  if (props.editMode && !props.column.readOnly) {\n    const onDateInputChange = (date: any) =>\n      props.changeValue(date.toISOString());\n    switch (props.column.dataType) {\n      case \"Date\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              autoOk={true}\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n              rightArrowIcon={<ArrowForward />}\n              leftArrowIcon={<ArrowBack />}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"Time\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <TimePicker\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"DateTime\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n              rightArrowIcon={<ArrowForward />}\n              leftArrowIcon={<ArrowBack />}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"Boolean\":\n        return (\n          <Checkbox\n            onChange={e => {\n              props.changeValue(e.target.checked);\n            }}\n            checked={getBool()}\n          />\n        );\n      case \"Number\":\n      case \"String\":\n      default:\n        return (\n          <TextField\n            type={props.column.dataType === \"Number\" ? \"number\" : \"text\"}\n            value={props.dataRow[props.column.accessor]}\n            onChange={e => props.changeValue(e.target.value)}\n          />\n        );\n    }\n  } //read only mode\n  else {\n    switch (props.column.dataType) {\n      case \"Date\":\n        return (\n          <React.Fragment>\n            {new Date(\n              props.dataRow[props.column.accessor]\n            ).toLocaleDateString()}\n          </React.Fragment>\n        );\n      case \"DateTime\":\n        return (\n          <React.Fragment>\n            {new Date(props.dataRow[props.column.accessor]).toLocaleString()}\n          </React.Fragment>\n        );\n      case \"Time\":\n        return (\n          <React.Fragment>\n            {new Date(\n              props.dataRow[props.column.accessor]\n            ).toLocaleTimeString()}\n          </React.Fragment>\n        );\n      case \"Boolean\":\n        return <Checkbox checked={getBool()} />;\n      default:\n        return (\n          <React.Fragment>\n            {props.dataRow[props.column.accessor]}\n          </React.Fragment>\n        );\n    }\n  }\n\n  function getBool(): boolean | undefined {\n    switch (typeof props.dataRow[props.column.accessor]) {\n      case \"boolean\":\n        return props.dataRow[props.column.accessor];\n      case \"number\":\n        return props.dataRow[props.column.accessor] > 0 ? true : false;\n      case \"string\":\n        return (props.dataRow[\n          props.column.accessor\n        ] as string).toLowerCase() === \"true\"\n          ? true\n          : false;\n      default:\n        //a lot of times the type seems to be undefined!\n        return props.dataRow[props.column.accessor];\n    }\n  }\n}\n\nexport default EditableTableCell;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Order, TableColumn } from \"./index\";\n\nexport function LogiTableHeader(props: {\n  onSelectAllClick?: any;\n  columns: TableColumn[];\n  customSortFunction?: any;\n  allowSelection?: boolean;\n  showSelectAll?: boolean;\n  allowSort?: boolean;\n}) {\n  const { onSelectAllClick, columns } = props;\n\n  const [order, setOrder] = React.useState<Order>(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"\");\n\n  const createSortHandler = (clickedColumn: TableColumn) => (\n    event: React.MouseEvent<unknown>\n  ) => {\n    if (props.customSortFunction)\n      props.customSortFunction(event, clickedColumn);\n    else {\n      const isDesc = orderBy === clickedColumn.header && order === \"desc\";\n      setOrder(isDesc ? \"asc\" : \"desc\");\n      setOrderBy(clickedColumn.header);\n    }\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {props.allowSelection ? (\n          <TableCell padding=\"checkbox\">\n            {props.showSelectAll ? (\n              <Checkbox\n                //TODO: fix the checked state for select all\n                checked={true}\n                onChange={onSelectAllClick}\n                inputProps={{ \"aria-label\": \"Select all\" }}\n              />\n            ) : null}\n          </TableCell>\n        ) : null}\n        {columns.map(col =>\n          col.hidden ? null : (\n            <TableCell\n              key={col.accessor}\n              //align={col.dataType === 'Number' ? 'right' : 'left'}\n              //padding={col.disablePadding ? \"none\" : \"default\"}\n              sortDirection={orderBy === col.header ? order : false}\n            >\n              {props.allowSort && !(col.dataType === \"ActionColumn\") ? (\n                <TableSortLabel\n                  active={orderBy === col.header}\n                  direction={order}\n                  onClick={createSortHandler(col)}\n                >\n                  {col.header}\n                </TableSortLabel>\n              ) : (\n                col.header\n              )}\n            </TableCell>\n          )\n        )}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport { rowActionsAndStates } from \"./index\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  CircularProgress\n} from \"@material-ui/core\";\n\nexport interface IStandardActionsAndStates extends rowActionsAndStates {\n  actionInProgress?: boolean;\n  saveChanges?: () => any;\n  deleteRecord?: () => any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    progress: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  })\n);\n\nexport function StandardActions(props: IStandardActionsAndStates) {\n  const classes = useStyles();\n  if (props.actionInProgress) {\n    return <CircularProgress size={30} className={classes.progress} />;\n  }\n  if (props.editMode) {\n    return <EditComp {...props} />;\n  }\n  return (\n    <>\n      {props.saveChanges !== undefined ? <EditComp {...props} /> : null}\n      {props.deleteRecord !== undefined ? <DeleteComp {...props} /> : null}\n    </>\n  );\n}\n\nexport function EditComp(props: IStandardActionsAndStates) {\n  if (!props.editMode) {\n    return (\n      <EditButton\n        onClick={() => {\n          props.enterEditMode();\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <CommitButton\n          onClick={(e: any) => {\n            props.saveChanges && props.saveChanges();\n          }}\n        />\n        <CancelButton\n          onClick={() => {\n            props.discardEditMode();\n          }}\n        />\n      </>\n    );\n  }\n}\nexport function DeleteComp(props: IStandardActionsAndStates) {\n  return (\n    <DeleteButton onClick={() => props.deleteRecord && props.deleteRecord()} />\n  );\n}\n\nconst EditButton = (props: any) => (\n  <IconButton onClick={props.onClick} title=\"Edit row\">\n    <EditIcon />\n  </IconButton>\n);\n\nconst DeleteButton = (props: any) => (\n  <IconButton onClick={props.onClick} title=\"Delete row\">\n    <DeleteIcon />\n  </IconButton>\n);\n\nconst CommitButton = (props: any) => (\n  <IconButton onClick={props.onClick} title=\"Save changes\">\n    <SaveIcon />\n  </IconButton>\n);\n\nconst CancelButton = (props: any) => (\n  <IconButton color=\"secondary\" onClick={props.onClick} title=\"Cancel changes\">\n    <CancelIcon />\n  </IconButton>\n);\n\nconst FailedButton = (props: any) => (\n  <Button color=\"primary\" onClick={props.onClick} title=\"Action Failed\">\n    Failed!\n  </Button>\n);\n\n/*export function StandardActions(props:any){\n      return ({newlyAdded ? (\n        <TableCell>New</TableCell>\n      ) : deleted ? (\n        <TableCell>DELETED</TableCell>\n      ) : actionInProgress ? (\n        <TableCell>\n          <CircularProgress size={30} className={classes.progress} />\n        </TableCell>\n      ) : actionSuccess && !actionSuccess ? (\n        <TableCell>\n          <FailedButton\n            onClick={() => {\n              //reset the row to original row\n              setEditMode(false);\n              setactionSuccess(undefined);\n              setActionInProgress(false);\n              setDeleted(false);\n              resetRow();\n            }}\n          />\n        </TableCell>\n      ) : editMode || props.addNewRecord ? (\n        <TableCell padding={\"checkbox\"}>\n          <CommitButton\n            onClick={() => {\n              if (props.addNewRecord) {\n                setActionInProgress(true);\n                props\n                  .addNewRecord(row)\n                  .then(result => {\n                    setactionSuccess(result);\n                    setActionInProgress(false);\n                    setEditMode(false);\n                    setNewlyAdded(true);\n                  })\n                  .catch(e => {\n                    console.log(e);\n                    setactionSuccess(false);\n                    setActionInProgress(false);\n                    setEditMode(false);\n                    resetRow();\n                  });\n              } else if (props.editRecord) {\n                setActionInProgress(true);\n                props\n                  .editRecord(props.row, row)\n                  .then(result => {\n                    setactionSuccess(result);\n                    setActionInProgress(false);\n                    setEditMode(false);\n                  })\n                  .catch(e => {\n                    console.log(e);\n                    setactionSuccess(false);\n                    setActionInProgress(false);\n                    setEditMode(false);\n                    resetRow();\n                  });\n              }\n            }}\n          />\n          <CancelButton\n            onClick={() => {\n              if (props.addNewRecord) {\n                props.addingNewRowCanceled && props.addingNewRowCanceled();\n              } else {\n                //reset the row to original row\n                setEditMode(false);\n                resetRow();\n              }\n            }}\n          />\n        </TableCell>\n      ) : allowEdit || allowDelete || allowAddNew ? (\n        <TableCell padding={\"checkbox\"}>\n          {allowEdit ? (\n            <EditButton\n              onClick={() => {\n                setEditMode(true);\n              }}\n            />\n          ) : null}\n          {allowDelete ? (\n            <DeleteButton\n              onClick={() => {\n                console.log(\"TODO:\");\n              }}\n            />\n          ) : null}\n        </TableCell>\n      ) : null})\n  }*/\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport warning from 'warning';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport { useForkRef } from '../utils/reactHelpers';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport { capitalize } from '../utils/helpers';\nimport '../Avatar/Avatar'; // So we don't have any override priority issue.\n\nexport var styles = function styles(theme) {\n  var height = 32;\n  var smallHeight = 24;\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: height,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: height / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 'none',\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: smallHeight\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      WebkitTapHighlightColor: 'transparent',\n      // Remove grey highlight\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1],\n        backgroundColor: emphasize(backgroundColor, 0.12)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      },\n      '&:active': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.12)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      },\n      '&:active': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.12)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: -1\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {\n      marginRight: -4,\n      width: height,\n      height: height,\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(16)\n    },\n    avatarSmall: {\n      width: smallHeight,\n      height: smallHeight,\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n\n    /* Styles applied to the `avatar` elements children. */\n    avatarChildren: {\n      height: 18\n    },\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -8\n    },\n    iconSmall: {\n      width: 16,\n      marginRight: -5\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element`. */\n    label: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: 12,\n      paddingRight: 12,\n      userSelect: 'none',\n      whiteSpace: 'nowrap',\n      cursor: 'inherit'\n    },\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      cursor: 'pointer',\n      height: 'auto',\n      margin: '0 5px 0 -8px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n    deleteIconSmall: {\n      height: 16,\n      margin: '0 1px 0 -9px'\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\nvar Chip = React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      classNameProp = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      deleteIconProp = props.deleteIcon,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Ignore events from children of `Chip`.\n\n\n    if (event.currentTarget !== event.target) {\n      return;\n    }\n\n    var key = event.key;\n\n    if (key === ' ' || key === 'Enter' || key === 'Backspace' || key === 'Delete' || key === 'Escape') {\n      event.preventDefault();\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Ignore events from children of `Chip`.\n\n\n    if (event.currentTarget !== event.target) {\n      return;\n    }\n\n    var key = event.key;\n\n    if (onClick && (key === ' ' || key === 'Enter')) {\n      onClick(event);\n    } else if (onDelete && (key === 'Backspace' || key === 'Delete')) {\n      onDelete(event);\n    } else if (key === 'Escape' && chipRef.current) {\n      chipRef.current.blur();\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var className = clsx(classes.root, classNameProp, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, color === 'primary' && classes.outlinedPrimary, color === 'secondary' && classes.outlinedSecondary], small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable);\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && React.isValidElement(deleteIconProp) ? React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && React.isValidElement(avatarProp)) {\n    avatar = React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))]),\n      childrenClassName: clsx(classes.avatarChildren, avatarProp.props.childrenClassName)\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && React.isValidElement(iconProp)) {\n    icon = React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!avatar || !icon, 'Material-UI: the Chip component can not handle the avatar ' + 'and the icon property at the same time. Pick one.') : void 0;\n  var handleRef = useForkRef(chipRef, ref);\n  return React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: className,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, other), avatar || icon, React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This property isn't supported.\n   * Use the `component` property if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If true, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick property is not defined.\n   * If false, the chip will not be clickable, even if onClick property is defined.\n   * This can be used, for example,\n   * along with the component property to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useAuth } from \"../Contexts/AuthContext\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  useTheme,\n  IconButton,\n  Paper,\n  Avatar,\n  Chip\n} from \"@material-ui/core/\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {\n  TableColumn,\n  LogiTable,\n  rowActionsAndStates,\n  toolbarActionsAndState\n} from \"../Components/logi-table\"; //\"logi-table\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport GroupWork from \"@material-ui/icons/GroupWork\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport RemoveCircle from \"@material-ui/icons/RemoveCircle\";\nimport AddCircle from \"@material-ui/icons/AddCircle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { StandardActions } from \"../Components/logi-table/StandardActions\";\nimport { LogiStandardToolbar } from \"../Components/logi-table/LogiTableToolbar\";\n\ninterface IUsersProps {}\n\nconst Users: React.FunctionComponent<IUsersProps> = props => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const Auth: any = useAuth();\n  const [passwordDialogOpen, setPasswordDialogOpen] = React.useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [selectedUserID, setSelectedUserID] = useState();\n  const [rolesDialogOpen, setRolesDialogOpen] = useState(false);\n  const [refreshData, setRefreshData] = useState<number>(0);\n  //----\n  async function fetchUsers() {\n    let users = await Auth.AuthenticatedServerCall(\n      `${process.env.REACT_APP_APIURL}security/users`,\n      \"GET\"\n    );\n    return users;\n  }\n  //----Have to memoize this value because otherwise on every render\n  //---the component thinks the value has changed\n  const memorizedFetchUser = useCallback(fetchUsers, []);\n  //----\n\n  const columnsU: TableColumn[] = [\n    {\n      header: \"Actions\",\n      accessor: \"ActionColumnOne\",\n      dataType: \"ActionColumn\",\n      viewComponent: (row: any, rowAsAndSs: rowActionsAndStates) => {\n        return (\n          <StandardActions\n            {...rowAsAndSs}\n            saveChanges={(): Promise<boolean> => {\n              //go through the new Data and create the update statement\n              let updateStatement: String = \"\";\n              for (let key in rowAsAndSs.newData) {\n                if (rowAsAndSs.newData[key] !== rowAsAndSs.oldData[key]) {\n                  updateStatement += `${key} = \"${rowAsAndSs.newData[key]}\" ,`;\n                }\n              }\n              if (updateStatement.length > 0) {\n                //remove the last comma\n                updateStatement = updateStatement.substring(\n                  0,\n                  updateStatement.length - 1\n                );\n                return Auth.AuthenticatedServerCall(\n                  `${process.env.REACT_APP_APIURL}security/users`,\n                  \"PUT\",\n                  {\n                    UserID: rowAsAndSs.oldData.UserID,\n                    Update: updateStatement\n                  }\n                )\n                  .then((r: any) => {\n                    console.log(r);\n                    //rowActionsAndStates.discardEditMode();\n                    //rowActionsAndStates.setData(rowActionsAndStates.newData);\n                    setRefreshData(refreshData + 1);\n                  })\n                  .catch((error: any) => {\n                    console.log(error);\n                    rowAsAndSs.discardEditMode();\n                  });\n              }\n              return Promise.resolve(true);\n            }}\n          />\n        );\n      }\n    },\n    {\n      header: \"UserID\",\n      accessor: \"UserID\",\n      dataType: \"Number\",\n      hidden: false,\n      readOnly: true\n    },\n    {\n      header: \"Username\",\n      accessor: \"UserName\",\n      dataType: \"String\"\n    },\n    {\n      header: \"Email\",\n      accessor: \"EMail\",\n      dataType: \"String\"\n    },\n    {\n      header: \"Creation Date\",\n      accessor: \"CREATEDAT\",\n      dataType: \"DateTime\"\n    },\n    {\n      header: \"Is Disabled\",\n      accessor: \"IsDisabled\",\n      dataType: \"Boolean\"\n    },\n    {\n      header: \"Actions\",\n      accessor: \"ActionColumnTwo\",\n      dataType: \"ActionColumn\",\n      viewComponent: row => {\n        return (\n          <>\n            <IconButton\n              onClick={(event: any) => {\n                setSelectedUserID(row.UserID);\n                setPasswordDialogOpen(true);\n              }}\n              title=\"reset password\"\n            >\n              <Fingerprint />\n            </IconButton>\n            <IconButton\n              onClick={(event: any) => {\n                setSelectedUserID(row.UserID);\n                setRolesDialogOpen(true);\n              }}\n              title=\"reset password\"\n            >\n              <GroupWork />\n            </IconButton>\n          </>\n        );\n      }\n    }\n  ];\n\n  return (\n    <>\n      <LogiTable\n        tableToolbar={(actionsAndStates: toolbarActionsAndState) => {\n          return (\n            <LogiStandardToolbar\n              actionsAndStates={actionsAndStates}\n              title={\"Users\"}\n              insertNewRecord={async recordData => {\n                try {\n                  const newData: any = actionsAndStates.insertedRecordData();\n                  if (!newData.UserName || !newData.EMail) {\n                    alert(\"Please fill all required fields\");\n                    return;\n                  }\n                  await Auth.AuthenticatedServerCall(\n                    `${process.env.REACT_APP_APIURL}security/users`,\n                    \"POST\",\n                    {\n                      Insert: `(Username,Email,createdBy,CreatedAt,IsDisabled)  SELECT '${newData.UserName.trim()}' ,  '${newData.EMail.trim()}'\n                        , ${Auth.LoggedInUserID}, datetime(\"now\"),${\n                        newData.IsDisabled ? newData.IsDisabled : 0\n                      } `\n                    }\n                  );\n                  //refresh the data inside the grid\n                  setRefreshData(refreshData + 1);\n                  actionsAndStates.discardInsertMode();\n                } catch (exception) {\n                  console.log(exception);\n                  alert(\"something went wrong, trying to save the data\");\n                }\n              }}\n            />\n          );\n        }}\n        refreshData={refreshData}\n        dense={true}\n        allowSort={true}\n        columns={columnsU}\n        keyAccessor=\"UserID\"\n        data={memorizedFetchUser}\n        allowSelection={false}\n      />\n      <Dialog\n        fullScreen={fullScreen}\n        open={passwordDialogOpen}\n        onClose={() => setPasswordDialogOpen(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Change Password\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            margin=\"dense\"\n            id=\"NewPassword\"\n            label=\"New Password\"\n            type=\"password\"\n            fullWidth\n            required\n            value={newPassword}\n            onChange={event => setNewPassword(event.target.value)}\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"repeatPassword\"\n            label=\"Repeat Password\"\n            type=\"password\"\n            fullWidth\n            required\n            value={repeatPassword}\n            onChange={event => setRepeatPassword(event.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setPasswordDialogOpen(false);\n              setNewPassword(\"\");\n              setRepeatPassword(\"\");\n              setSelectedUserID(undefined);\n            }}\n            color=\"secondary\"\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={async () => {\n              return Auth.AuthenticatedServerCall(\n                `${process.env.REACT_APP_APIURL}security/userpassword`,\n                \"PUT\",\n                {\n                  UserID: `${selectedUserID}`,\n                  password: newPassword\n                }\n              )\n                .then((r: any) => {\n                  setNewPassword(\"\");\n                  setRepeatPassword(\"\");\n                  setSelectedUserID(undefined);\n                  setPasswordDialogOpen(false);\n                })\n                .catch((error: any) => {\n                  console.log(error);\n                  return undefined;\n                });\n            }}\n            color=\"primary\"\n            autoFocus\n            disabled={newPassword.length <= 0 || newPassword !== repeatPassword}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {rolesDialogOpen ? (\n        <UserRoleDialog\n          fullScreen={fullScreen}\n          setRolesDialogOpen={setRolesDialogOpen}\n          selectedUserID={selectedUserID}\n          setSelectedUserID={setSelectedUserID}\n          Auth={Auth}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default Users;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      padding: theme.spacing(2),\n      minWidth: 300,\n      minHeight: 300\n    },\n    chip: {\n      margin: theme.spacing(2)\n    }\n  })\n);\n\nconst UserRoleDialog = function(props: {\n  fullScreen: boolean;\n  setRolesDialogOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  selectedUserID: any;\n  setSelectedUserID: React.Dispatch<any>;\n  Auth: any;\n}) {\n  const classes = useStyles();\n  const [userRoles, setUserRoles] = useState();\n  const [isLoadingRoles, setIsLoadingRoles] = useState(false);\n  const [loadingRolesError, setLoadingRolesError] = useState(false);\n  const getUsersRoles = function() {\n    var url = `${process.env.REACT_APP_APIURL}security/roles/${\n      props.selectedUserID\n    }`;\n    setIsLoadingRoles(true);\n    props.Auth.AuthenticatedServerCall(url, \"GET\")\n      .then((userRoles: any) => {\n        setUserRoles(userRoles);\n        setIsLoadingRoles(false);\n      })\n      .catch((error: any) => {\n        setUserRoles(undefined);\n        setIsLoadingRoles(false);\n        setLoadingRolesError(true);\n      });\n  };\n\n  const memorizedGetUserRoles = useCallback(getUsersRoles, []);\n\n  useEffect(() => {\n    if (props.selectedUserID >= 0) {\n      memorizedGetUserRoles();\n    }\n  }, [props.selectedUserID, memorizedGetUserRoles]);\n\n  function modifyUsersRole(userID: number, roleID: number, isAdd: boolean) {\n    setIsLoadingRoles(true);\n    var url = `${process.env.REACT_APP_APIURL}security/modifyUserRoles`;\n    props.Auth.AuthenticatedServerCall(\n      url,\n      \"POST\",\n      {\n        userID: `${userID}`,\n        roleID: `${roleID}`,\n        isAdd: `${isAdd}`\n      },\n      \"Role Updated Successfully\"\n    )\n      .then((response: any) => {})\n      .catch((error: any) => {\n        setLoadingRolesError(true);\n      })\n      .then(() => {\n        setIsLoadingRoles(false);\n        getUsersRoles();\n      });\n  }\n\n  return (\n    <Dialog\n      fullScreen={props.fullScreen}\n      open={true}\n      onClose={() => props.setRolesDialogOpen(false)}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">\n        {\"Change User's Roles\"}\n      </DialogTitle>\n      <DialogContent>\n        <Paper className={classes.root}>\n          {loadingRolesError ? (\n            <div>Error Loading Roles</div>\n          ) : isLoadingRoles ? (\n            <CircularProgress size={30} />\n          ) : userRoles !== undefined ? (\n            userRoles.map((data: any) => {\n              return (\n                <Chip\n                  key={data.RoleID}\n                  label={data.Role}\n                  className={classes.chip}\n                  color={data.IsUsersRole ? \"primary\" : \"secondary\"}\n                  avatar={\n                    <Avatar>{(data.Role + \"xx\").substring(0, 2)} </Avatar>\n                  }\n                  variant=\"outlined\"\n                  onDelete={() => {\n                    modifyUsersRole(\n                      props.selectedUserID,\n                      data.RoleID,\n                      !data.IsUsersRole\n                    );\n                  }}\n                  deleteIcon={\n                    data.IsUsersRole ? <RemoveCircle /> : <AddCircle />\n                  }\n                />\n              );\n            })\n          ) : null}\n        </Paper>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.setRolesDialogOpen(false);\n            props.setSelectedUserID(undefined);\n            setUserRoles(undefined);\n          }}\n          color=\"secondary\"\n        >\n          Done\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z\"\n}), 'Fingerprint');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM8 17.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5zM9.5 8c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5S9.5 9.38 9.5 8zm6.5 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'GroupWork');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n}), 'RemoveCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { LogiTableHeader } from \"./LogiTableHeader\";\nimport { LogiDataRow, rowActionsAndStates } from \"./LogiDataRow\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport * from \"./LogiDataRow\";\nexport * from \"./LogiTableToolbar\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3)\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 750\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    },\n    progress: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  })\n);\n\nexport type Order = \"asc\" | \"desc\";\nexport type DataType =\n  | \"String\"\n  | \"Number\"\n  | \"Date\"\n  | \"DateTime\"\n  | \"Time\"\n  | \"Boolean\"\n  | \"ActionColumn\";\n\nexport interface TableColumn {\n  header: string;\n  /**\n   * Used to access the data filed i.e. dataRow[accessor]\n   * Please note if this value is available then it will be used to create the key for table cells\n   * specially in case of action columns set this to a dummy value\n   * @type {string}\n   * @memberof TableColumn\n   */\n  accessor: string;\n  dataType: DataType;\n  readOnly?: boolean;\n  hidden?: boolean;\n  viewComponent?: (\n    rowData: any,\n    rowActionsAndStates: rowActionsAndStates\n  ) => React.ReactElement;\n}\n\nexport interface toolbarActionsAndState {\n  /**\n   *Call this function to put the row in edit mode status\n   * @memberof toolbarActionsAndState\n   */\n  enterInsertMode: () => void;\n\n  /**\n   *Call this function to cancel the insert mode and return the row to reset status\n   * @memberof toolbarActionsAndState\n   */\n  discardInsertMode: () => void;\n\n  /**\n   *true if the table is in insert mode\n   * @type {boolean}\n   * @memberof toolbarActionsAndState\n   */\n  insertMode: boolean;\n  /**\n   * newly insert record data\n   * @type {*}\n   * @memberof toolbarActionsAndState\n   */\n  insertedRecordData: () => any;\n}\n\nexport interface LogiTableProps {\n  keyAccessor: string;\n  columns: Array<TableColumn>;\n  data: Array<{}> | (() => Promise<Array<{}>>);\n  allowSelection?: boolean;\n  showSelectAll?: boolean;\n  allowSort?: boolean;\n  customSortFunction?: (\n    event: React.MouseEvent<unknown>,\n    property: TableColumn\n  ) => void;\n  onSelectAllClick?: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => void;\n  dense?: boolean;\n  /**\n   * increase the counter from zero to refresh\n   * The value must change if you want the remote data to be re fetched\n   * @memberof LogiTableProps\n   */\n  refreshData?: number;\n  /**\n   * this component will be shown on top of the table\n   * you can import and use the LogiTableToolbar as standard if you want or create your own\n   * @memberof LogiTableProps\n   */\n  tableToolbar?: (\n    rowActionsAndStates: toolbarActionsAndState\n  ) => React.ReactElement;\n}\n\nexport function LogiTable(props: LogiTableProps) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([{}]);\n  const [isError, setIsError] = useState(false);\n  const [addingNewRecord, setAddingNewRecord] = useState(false);\n  let newlyAddedRow: any = undefined;\n\n  useEffect(() => {\n    console.log(\"setting data\");\n    //get data if passed as promise\n    if (typeof props.data === \"function\") {\n      let fetchData: () => Promise<Array<{}>> = props.data as () => Promise<\n        Array<{}>\n      >;\n      setIsLoading(true);\n      fetchData()\n        .then((fetchedData: Array<{}>) => {\n          setData(fetchedData);\n          setIsLoading(false);\n        })\n        .catch((c: any) => {\n          console.log(\"error: \" + c);\n          setIsLoading(false);\n          setIsError(true);\n        });\n    } else {\n      setData(props.data);\n      setIsLoading(false);\n    }\n  }, [props.data, props.refreshData]);\n\n  function handleChangePage(_event: unknown, newPage: number) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event: React.ChangeEvent<HTMLInputElement>) {\n    setRowsPerPage(+event.target.value);\n  }\n\n  const emptyRows =\n    rowsPerPage -\n    (data ? Math.min(rowsPerPage, data.length - page * rowsPerPage) : 0);\n\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <div className={classes.tableWrapper}>\n            {props.tableToolbar\n              ? props.tableToolbar({\n                  enterInsertMode: () => {\n                    setAddingNewRecord(true);\n                  },\n                  discardInsertMode: () => {\n                    setAddingNewRecord(false);\n                  },\n                  insertMode: addingNewRecord,\n                  insertedRecordData: () => {\n                    return newlyAddedRow;\n                  }\n                })\n              : null}\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={props.dense ? \"small\" : \"medium\"}\n            >\n              <LogiTableHeader {...props} />\n              <TableBody>\n                {addingNewRecord && (\n                  <LogiDataRow\n                    key={-1}\n                    row={() => {\n                      let newRecord: any = {};\n                      props.columns\n                        .filter(c => c.dataType !== \"ActionColumn\")\n                        .forEach((col: TableColumn) => {\n                          newRecord[col.accessor] = \"\";\n                        });\n                      return newRecord;\n                    }}\n                    index={-1}\n                    columns={props.columns}\n                    allowSelection={false}\n                    insertMode={true}\n                    setEditedRow={(row: any) => {\n                      newlyAddedRow = row;\n                    }}\n                  />\n                )}\n                {isLoading || isError ? (\n                  <TableRow>\n                    <TableCell\n                      colSpan={\n                        props.columns.filter((c: TableColumn) => !c.hidden)\n                          .length\n                      }\n                      rowSpan={rowsPerPage}\n                      align={\"center\"}\n                    >\n                      <div>\n                        {isLoading ? (\n                          <CircularProgress\n                            size={30}\n                            className={classes.progress}\n                          />\n                        ) : (\n                          \"Failed to load data!\"\n                        )}\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  data && //making sure data is available\n                  data.length > 0 &&\n                  data\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row: any, index: number) => {\n                      return (\n                        <LogiDataRow\n                          key={index}\n                          row={row}\n                          index={index}\n                          columns={props.columns}\n                          allowSelection={props.allowSelection}\n                        />\n                      );\n                    })\n                )}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell\n                      colSpan={\n                        props.columns.filter((c: TableColumn) => !c.hidden)\n                          .length\n                      }\n                    />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={data ? data.length : 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n"],"sourceRoot":""}