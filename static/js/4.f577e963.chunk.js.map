{"version":3,"sources":["framework/Components/logi-table/LogiDataRow.tsx","framework/Components/logi-table/LogiTableToolbar.tsx","framework/Components/logi-table/EditableTableCell.tsx","framework/Components/logi-table/LogiTableHeader.tsx","framework/Components/logi-table/StandardActions.tsx","framework/Administration/RolesAppManagement.js","framework/Administration/RolesWidgetManagement.js","framework/Administration/Roles.tsx","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Apps.js","../node_modules/@material-ui/icons/Widgets.js","framework/Components/logi-table/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","rowStyle","&:nth-of-type(odd)","backgroundColor","palette","background","default","LogiDataRow","props","classes","columns","index","labelId","concat","_useState","useState","_useState2","Object","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","editMode","setEditMode","_useState3","_useState4","isExpanded","setIsExpanded","_useState5","_useState6","rowDetails","setRowDetails","_useState7","row","_useState8","setRow","changeValue","value","columnName","editedRow","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","setEditedRow","useEffect","rowStateAndAction","enterEditMode","discardEditMode","insertMode","oldData","newData","setData","expand","detailsComp","collapse","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_3__","className","allowSelection","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_4__","padding","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","checked","inputProps","aria-labelledby","filter","c","hidden","map","colIndex","key","accessor","header","component","id","scope","dataType","viewComponent","_EditableTableCell__WEBPACK_IMPORTED_MODULE_8__","column","newValue","dataRow","colSpan","length","__webpack_require__","r","__webpack_exports__","d","LogiTableToolbar","LogiStandardToolbar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_7___default","root","paddingLeft","spacing","paddingRight","spacer","flex","actions","color","text","secondary","title","undefined","insertNewRecord","actionsAndStates","onClick","insertedRecordData","discardInsertMode","enterInsertMode","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1__","_date_io_moment__WEBPACK_IMPORTED_MODULE_2__","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_6___default","EditableTableCell","readOnly","onDateInputChange","date","toISOString","utils","DateFnsUtils","autoOk","onChange","rightArrowIcon","leftArrowIcon","e","target","getBool","type","Date","toLocaleDateString","toLocaleString","toLocaleTimeString","toLowerCase","LogiTableHeader","onSelectAllClick","_React$useState","React","_React$useState2","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","order","setOrder","_React$useState3","_React$useState4","orderBy","setOrderBy","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_2__","showSelectAll","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_6__","aria-label","col","sortDirection","allowSort","_material_ui_core_TableSortLabel__WEBPACK_IMPORTED_MODULE_5__","active","direction","clickedColumn","event","customSortFunction","isDesc","StandardActions","EditComp","DeleteComp","ExpandDetail","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_1__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_ExpandLess__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_ExpandLess__WEBPACK_IMPORTED_MODULE_11___default","progress","marginLeft","marginRight","actionInProgress","size","expandComp","saveChanges","deleteRecord","CommitButton","CancelButton","EditButton","DeleteButton","AppsManagement","state","rolesApps","loadingApps","RoleID","_this2","this","url","process","setState","Auth","AuthenticatedServerCall","then","tempApps","app","ParentID","forEach","appGroup","appsForGroup","ApplicationID","ShowInNavigationTree","childApps","push","apply","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","sort","appA","appB","AppOrder","catch","error","ApplicationRoleID","_this3","fetchRolesApps","selectedRoleID","prevProp","_this4","react__WEBPACK_IMPORTED_MODULE_20___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","style","height","overflow","_material_ui_core__WEBPACK_IMPORTED_MODULE_16__","avatar","_material_ui_icons_Apps__WEBPACK_IMPORTED_MODULE_19___default","subheader","Application","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","button","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","Icon","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","inset","primary","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","in","timeout","unmountOnExit","disablePadding","nested","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","Boolean","IsPublic","disabled","modifyRoleApps","Component","withStyles","margin","red","withTheme","rolesWidgets","loadingWidgets","WidgetID","WidgetRoleID","fetchRolesWidgets","react__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_icons_Widgets__WEBPACK_IMPORTED_MODULE_18___default","modifyRoleWidgets","Name","Roles","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","roles","setRoles","isLoadingRoles","setIsLoadingRoles","refreshTrigger","setRefreshTrigger","useAuth","insertRole","_x","_insertRole","arguments","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee4","wrap","_context4","prev","next","Role","Description","abrupt","Promise","reject","Insert","trim","LoggedInUserID","t0","console","log","stop","deleteRole","_x2","_deleteRole","_callee5","_context5","_fetchRoles","_callee","_context","sent","fetchRoles","rowAsAndSs","react__WEBPACK_IMPORTED_MODULE_3___default","_Components_logi_table_StandardActions__WEBPACK_IMPORTED_MODULE_6__","assign","RolesDetail","_callee2","_context2","window","confirm","_Components_logi_table__WEBPACK_IMPORTED_MODULE_5__","isRemoteLoading","dense","keyAccessor","data","tableToolbar","_ref2","_callee3","recordData","_context3","alert","_x3","tabsRoot","borderBottom","selectedTab","setSelectedTab","icon","_material_ui_icons_Apps__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_icons_Widgets__WEBPACK_IMPORTED_MODULE_12___default","_RolesAppManagement__WEBPACK_IMPORTED_MODULE_13__","_RolesWidgetManagement__WEBPACK_IMPORTED_MODULE_14__","_interopRequireDefault","defineProperty","exports","_react","_default","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","LogiTable","page","setPage","rowsPerPage","setRowsPerPage","isLoading","setIsLoading","_useState9","_useState10","isError","setIsError","_useState11","_useState12","addingNewRecord","setAddingNewRecord","newlyAddedRow","fetchData","fetchedData","refreshData","emptyRows","Math","min","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_12__","MomentUtils","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_4__","_LogiTableHeader__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_5__","_LogiDataRow__WEBPACK_IMPORTED_MODULE_11__","newRecord","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_6__","rowSpan","align","slice","_material_ui_core_TablePagination__WEBPACK_IMPORTED_MODULE_7__","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","_event","newPage","onChangeRowsPerPage"],"mappings":"yOAgFMA,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,SAAU,CACRC,qBAAsB,CACpBC,gBAAiBJ,EAAMK,QAAQC,WAAWC,cAM3C,SAASC,EAAYC,GAW1B,IAAMC,EAAUZ,IACRa,EAAmBF,EAAnBE,QAASC,EAAUH,EAAVG,MACXC,EAAO,2BAAAC,OAA8BF,GAH1CG,EAI+BC,oBAAS,GAJxCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIMK,EAJNH,EAAA,GAIgBI,EAJhBJ,EAAA,GAAAK,EAKmCN,oBAAS,GAL5CO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAKME,EALND,EAAA,GAKkBE,EALlBF,EAAA,GAAAG,EAMmCV,qBANnCW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAMME,EANND,EAAA,GAMkBE,EANlBF,EAAA,GAAAG,EAOqBd,mBAASP,EAAMsB,KAPpCC,EAAAd,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAOMC,EAPNC,EAAA,GAOWC,EAPXD,EAAA,GAYD,SAASE,EAAYC,EAAYC,GAC/B,IAAIC,EAASnB,OAAAoB,EAAA,EAAApB,CAAA,GAAQa,GACrBM,EAAUD,GAAcD,EACxBF,EAAOI,GACP5B,EAAM8B,cAAgB9B,EAAM8B,aAAaF,GAR3CG,oBAAU,WACRP,EAAOxB,EAAMsB,MACZ,CAACtB,EAAMsB,MAaV,IAAIU,EAAyC,CAC3CC,cAAe,WACbrB,GAAY,IAEdsB,gBAAiB,WACftB,GAAY,GATdY,EAAOxB,EAAMsB,KACbtB,EAAM8B,cAAgB9B,EAAM8B,aAAa9B,EAAMsB,MAW/CX,SAAUA,KAAaX,EAAMmC,YAAanC,EAAMmC,WAChDC,QAASpC,EAAMsB,IACfe,QAASf,EACTgB,QAAS,SAACD,GACRb,EAAOa,IAETF,aAAYnC,EAAMmC,YAAanC,EAAMmC,WACrCpB,WAAYA,EACZwB,OAAQ,SAAAC,GACNpB,EAAcoB,GACdxB,GAAc,IAEhByB,SAAU,WACRzB,GAAc,KAIlB,OACE0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUC,UAAW9C,EAAQR,UAC1BO,EAAMgD,eACLN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAWC,QAAQ,YACjBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,SAAS,EACTC,WAAY,CAAEC,kBAAmBlD,MAGnC,KACHF,EACEqD,OAAO,SAACC,GAAD,OAAqBA,EAAEC,SAC9BC,IAAI,SAACF,EAAgBG,GACpB,OAAiB,IAAbA,EAEAjB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEW,IAAG,GAAAvD,OAAKmD,EAAEK,SAAWL,EAAEK,SAAWL,EAAEM,QAAjCzD,OAA0CF,GAC7C4D,UAAU,KACVC,GAAI5D,EACJ6D,MAAM,MACNf,QAAQ,WAEPlD,EAAMmC,YACQ,iBAAfqB,EAAEU,SAA8B,KAAOV,EAAEW,cACvCX,EAAEW,cAAc7C,EAAKU,GAErBU,EAAAC,EAAAC,cAACwB,EAAA,QAAD,CACEC,OAAQb,EACR/B,YAAa,SAAC6C,GAAD,OACX7C,EAAY6C,EAAUd,EAAEK,WAE1BU,QAASjD,EACTX,SAAUA,GAAYX,EAAMmC,cAOlCO,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEW,IAAG,GAAAvD,OAAKmD,EAAEK,SAAWL,EAAEK,SAAWL,EAAEM,QAAjCzD,OAA0CF,IAE5CH,EAAMmC,YACQ,iBAAfqB,EAAEU,SAA8B,KAAOV,EAAEW,cACvCX,EAAEW,cAAc7C,EAAKU,GAErBU,EAAAC,EAAAC,cAACwB,EAAA,QAAD,CACEC,OAAQb,EACR/B,YAAa,SAAC6C,GAAD,OACX7C,EAAY6C,EAAUd,EAAEK,WAE1BU,QAASjD,EACTX,SACEA,KACCX,EAAMmC,YAAanC,EAAMmC,iBAQ3CpB,EACC2B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEuB,QAAStE,EAAQqD,OAAO,SAACC,GAAD,OAAqBA,EAAEC,SAAQgB,QAEtDtD,IAGH,yCC3NVuD,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,qCAAAE,IAAAJ,EAAAG,EAAAD,EAAA,wCAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,IAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAAQ,EAAAK,GAAAE,EAAAf,EAAA,KAAAgB,EAAAhB,EAAAQ,EAAAO,GAAAE,EAAAjB,EAAA,KAAAkB,EAAAlB,EAAAQ,EAAAS,GAaMtG,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqG,KAAM,CACJC,YAAavG,EAAMwG,QAAQ,GAC3BC,aAAczG,EAAMwG,QAAQ,IAE9BE,OAAQ,CACNC,KAAM,YAERC,QAAS,CACPC,MAAO7G,EAAMK,QAAQyG,KAAKC,UAC1BJ,KAAM,YAERK,MAAO,CACLL,KAAM,gBAKCpB,EAAmB,SAAC9E,GAI/B,IAAMC,EAAUZ,IAEhB,OACE4F,EAAAtC,EAAAC,cAACyC,EAAA,EAAD,CAAStC,UAAW9C,EAAQ4F,MAC1BZ,EAAAtC,EAAAC,cAAA,OAAKG,UAAW9C,EAAQsG,OAAQvG,EAAMuG,OACtCtB,EAAAtC,EAAAC,cAAA,OAAKG,UAAW9C,EAAQgG,SACxBhB,EAAAtC,EAAAC,cAAA,OAAKG,UAAW9C,EAAQkG,SAAUnG,EAAMmG,WAKjCpB,EAAsB,SAAC/E,GAKlC,IAAImG,EAA8BlB,EAAAtC,EAAAC,cAAAqC,EAAAtC,EAAAE,SAAA,MA+BlC,YA9B8B2D,IAA1BxG,EAAMyG,kBACRN,EAAWnG,EAAM0G,iBAAiBvE,WAShC8C,EAAAtC,EAAAC,cAAAqC,EAAAtC,EAAAE,SAAA,KACEoC,EAAAtC,EAAAC,cAAC0C,EAAA,EAAD,CACEqB,QAAS,WACP3G,EAAMyG,gBAAgBzG,EAAM0G,iBAAiBE,uBAE/CL,MAAM,gBAENtB,EAAAtC,EAAAC,cAAC8C,EAAA/C,EAAD,OAEFsC,EAAAtC,EAAAC,cAAC0C,EAAA,EAAD,CACEc,MAAM,YACNO,QAAS3G,EAAM0G,iBAAiBG,kBAChCN,MAAM,kBAENtB,EAAAtC,EAAAC,cAACgD,EAAAjD,EAAD,QAtBJsC,EAAAtC,EAAAC,cAAC0C,EAAA,EAAD,CACEc,MAAM,YACNO,QAAS3G,EAAM0G,iBAAiBI,gBAChCP,MAAM,cAENtB,EAAAtC,EAAAC,cAAC4C,EAAA7C,EAAD,QAuBCsC,EAAAtC,EAAAC,cAACkC,EAAD,CAAkByB,MAAOvG,EAAMuG,MAAOJ,QAASA,uCCnFxDzB,EAAAC,EAAAC,GAAA,IAAAI,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAA+B,EAAArC,EAAA,KAAAsC,EAAAtC,EAAA,KAAAuC,EAAAvC,EAAA,KAAAwC,EAAAxC,EAAA,KAAAyC,EAAAzC,EAAA,KAAA0C,EAAA1C,EAAAQ,EAAAiC,GAAAE,EAAA3C,EAAA,KAAA4C,EAAA5C,EAAAQ,EAAAmC,GAqIeE,UAhHf,SAA2BvH,GACzB,GAAIA,EAAMW,WAAaX,EAAMqE,OAAOmD,SAAU,CAC5C,IAAMC,EAAoB,SAACC,GAAD,OACxB1H,EAAMyB,YAAYiG,EAAKC,gBACzB,OAAQ3H,EAAMqE,OAAOH,UACnB,IAAK,OACH,OACEe,EAAAtC,EAAAC,cAACqE,EAAA,EAAD,CAAyBW,MAAOC,KAC9B5C,EAAAtC,EAAAC,cAACqE,EAAA,EAAD,CACEa,QAAQ,EACRpG,MAAO1B,EAAMuE,QAAQvE,EAAMqE,OAAOR,UAClCkE,SAAUN,EACVO,eAAgB/C,EAAAtC,EAAAC,cAACwE,EAAAzE,EAAD,MAChBsF,cAAehD,EAAAtC,EAAAC,cAAC0E,EAAA3E,EAAD,SAIvB,IAAK,OACH,OACEsC,EAAAtC,EAAAC,cAACqE,EAAA,EAAD,CAAyBW,MAAOC,KAC9B5C,EAAAtC,EAAAC,cAACqE,EAAA,EAAD,CACEvF,MAAO1B,EAAMuE,QAAQvE,EAAMqE,OAAOR,UAClCkE,SAAUN,KAIlB,IAAK,WACH,OACExC,EAAAtC,EAAAC,cAACqE,EAAA,EAAD,CAAyBW,MAAOC,KAC9B5C,EAAAtC,EAAAC,cAACqE,EAAA,EAAD,CACEvF,MAAO1B,EAAMuE,QAAQvE,EAAMqE,OAAOR,UAClCkE,SAAUN,EACVO,eAAgB/C,EAAAtC,EAAAC,cAACwE,EAAAzE,EAAD,MAChBsF,cAAehD,EAAAtC,EAAAC,cAAC0E,EAAA3E,EAAD,SAIvB,IAAK,UACH,OACEsC,EAAAtC,EAAAC,cAACsE,EAAA,EAAD,CACEa,SAAU,SAAAG,GACRlI,EAAMyB,YAAYyG,EAAEC,OAAO/E,UAE7BA,QAASgF,MAGf,IAAK,SACL,IAAK,SACL,QACE,OACEnD,EAAAtC,EAAAC,cAACmE,EAAA,EAAD,CACEsB,KAAgC,WAA1BrI,EAAMqE,OAAOH,SAAwB,SAAW,OACtDxC,MAAO1B,EAAMuE,QAAQvE,EAAMqE,OAAOR,UAClCkE,SAAU,SAAAG,GAAC,OAAIlI,EAAMyB,YAAYyG,EAAEC,OAAOzG,gBAMlD,OAAQ1B,EAAMqE,OAAOH,UACnB,IAAK,OACH,OACEe,EAAAtC,EAAAC,cAACqC,EAAAtC,EAAME,SAAP,KACG,IAAIyF,KACHtI,EAAMuE,QAAQvE,EAAMqE,OAAOR,WAC3B0E,sBAGR,IAAK,WACH,OACEtD,EAAAtC,EAAAC,cAACqC,EAAAtC,EAAME,SAAP,KACG,IAAIyF,KAAKtI,EAAMuE,QAAQvE,EAAMqE,OAAOR,WAAW2E,kBAGtD,IAAK,OACH,OACEvD,EAAAtC,EAAAC,cAACqC,EAAAtC,EAAME,SAAP,KACG,IAAIyF,KACHtI,EAAMuE,QAAQvE,EAAMqE,OAAOR,WAC3B4E,sBAGR,IAAK,UACH,OAAOxD,EAAAtC,EAAAC,cAACsE,EAAA,EAAD,CAAU9D,QAASgF,MAC5B,QACE,OACEnD,EAAAtC,EAAAC,cAACqC,EAAAtC,EAAME,SAAP,KACG7C,EAAMuE,QAAQvE,EAAMqE,OAAOR,WAMtC,SAASuE,IACP,cAAepI,EAAMuE,QAAQvE,EAAMqE,OAAOR,WACxC,IAAK,UACH,OAAO7D,EAAMuE,QAAQvE,EAAMqE,OAAOR,UACpC,IAAK,SACH,OAAO7D,EAAMuE,QAAQvE,EAAMqE,OAAOR,UAAY,EAChD,IAAK,SACH,MAE+B,SAFvB7D,EAAMuE,QACZvE,EAAMqE,OAAOR,UACF6E,cAGf,QAEE,OAAO1I,EAAMuE,QAAQvE,EAAMqE,OAAOR,6KCxHnC,SAAS8E,EAAgB3I,GAO7B,IACO4I,EAA8B5I,EAA9B4I,iBAAkB1I,EAAYF,EAAZE,QADzB2I,EAGyBC,IAAMvI,SAAgB,OAH/CwI,EAAAtI,OAAAuI,EAAA,EAAAvI,CAAAoI,EAAA,GAGMI,EAHNF,EAAA,GAGaG,EAHbH,EAAA,GAAAI,EAI6BL,IAAMvI,SAAS,IAJ5C6I,EAAA3I,OAAAuI,EAAA,EAAAvI,CAAA0I,EAAA,GAIME,EAJND,EAAA,GAIeE,EAJfF,EAAA,GAkBD,OACEG,EAAA5G,EAAAC,cAAC4G,EAAA,EAAD,KACED,EAAA5G,EAAAC,cAAC6G,EAAA,EAAD,KACGzJ,EAAMgD,eACLuG,EAAA5G,EAAAC,cAAC8G,EAAA,EAAD,CAAWxG,QAAQ,YAChBlD,EAAM2J,cACLJ,EAAA5G,EAAAC,cAACgH,EAAA,EAAD,CAEExG,SAAS,EACT2E,SAAUa,EACVvF,WAAY,CAAEwG,aAAc,gBAE5B,MAEJ,KACH3J,EAAQwD,IAAI,SAAAoG,GAAG,OACdA,EAAIrG,OAAS,KACX8F,EAAA5G,EAAAC,cAAC8G,EAAA,EAAD,CACE9F,IAAKkG,EAAIjG,SAGTkG,cAAeV,IAAYS,EAAIhG,QAASmF,GAEvCjJ,EAAMgK,WAAgC,iBAAjBF,EAAI5F,SACxBqF,EAAA5G,EAAAC,cAACqH,EAAA,EAAD,CACEC,OAAQb,IAAYS,EAAIhG,OACxBqG,UAAWlB,EACXtC,SAvCWyD,EAuCgBN,EAvCe,SACxDO,GAEA,GAAIrK,EAAMsK,mBACRtK,EAAMsK,mBAAmBD,EAAOD,OAC7B,CACH,IAAMG,EAASlB,IAAYe,EAActG,QAAoB,SAAVmF,EACnDC,EAASqB,EAAS,MAAQ,QAC1BjB,EAAWc,EAActG,YAiCZgG,EAAIhG,QAGPgG,EAAIhG,QA5CQ,IAACsG,yCCrB7B1F,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,oCAAA4F,IAAA9F,EAAAG,EAAAD,EAAA,6BAAA6F,IAAA/F,EAAAG,EAAAD,EAAA,+BAAA8F,IAAAhG,EAAAG,EAAAD,EAAA,iCAAA+F,IAAA,IAAA3F,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAA4F,EAAAlG,EAAA,KAAAmG,EAAAnG,EAAAQ,EAAA0F,GAAAE,EAAApG,EAAA,KAAAqG,EAAArG,EAAAQ,EAAA4F,GAAAE,EAAAtG,EAAA,KAAAuG,EAAAvG,EAAAQ,EAAA8F,GAAAE,EAAAxG,EAAA,KAAAyG,EAAAzG,EAAAQ,EAAAgG,GAAAE,EAAA1G,EAAA,IAAAvB,GAAAuB,EAAA,IAAAA,EAAA,KAAA2G,EAAA3G,EAAA,KAAA4G,EAAA5G,EAAA,KAAA6G,EAAA7G,EAAA,KAAA8G,EAAA9G,EAAAQ,EAAAqG,GAAAE,EAAA/G,EAAA,KAAAgH,EAAAhH,EAAAQ,EAAAuG,GA8CMpM,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXmM,SAAU,CACRC,WAAYrM,EAAMwG,QAAQ,GAC1B8F,YAAatM,EAAMwG,QAAQ,QAK1B,SAASyE,EAAgBxK,GAC9B,IAAMC,EAAUZ,IAChB,OAAIW,EAAM8L,iBACD7G,EAAAtC,EAAAC,cAAC0I,EAAA,EAAD,CAAkBS,KAAM,GAAIhJ,UAAW9C,EAAQ0L,WAEpD3L,EAAMW,SACDsE,EAAAtC,EAAAC,cAAC6H,EAAazK,GAGrBiF,EAAAtC,EAAAC,cAAAqC,EAAAtC,EAAAE,SAAA,UACwB2D,IAArBxG,EAAMgM,WAA2B/G,EAAAtC,EAAAC,cAAC+H,EAAiB3K,GAAY,UACzCwG,IAAtBxG,EAAMiM,YAA4BhH,EAAAtC,EAAAC,cAAC6H,EAAazK,GAAY,UACrCwG,IAAvBxG,EAAMkM,aAA6BjH,EAAAtC,EAAAC,cAAC8H,EAAe1K,GAAY,MAK/D,SAASyK,EAASzK,GACvB,OAAKA,EAAMW,SAUPsE,EAAAtC,EAAAC,cAAAqC,EAAAtC,EAAAE,SAAA,KACEoC,EAAAtC,EAAAC,cAACuJ,EAAD,CACExF,QAAS,SAACuB,GACRlI,EAAMiM,aAAejM,EAAMiM,iBAG/BhH,EAAAtC,EAAAC,cAACwJ,EAAD,CACEzF,QAAS,WACP3G,EAAMkC,sBAhBZ+C,EAAAtC,EAAAC,cAACyJ,EAAD,CACE1F,QAAS,WACP3G,EAAMiC,mBAqBT,SAASyI,EAAW1K,GACzB,OACEiF,EAAAtC,EAAAC,cAAC0J,EAAD,CAAc3F,QAAS,kBAAM3G,EAAMkM,cAAgBlM,EAAMkM,kBAItD,SAASvB,EAAa3K,GAC3B,OAAIA,EAAMe,WAENkE,EAAAtC,EAAAC,cAACwI,EAAA,EAAD,CACEzE,QAAS,WACP3G,EAAMyC,UAAYzC,EAAMyC,aAG1BwC,EAAAtC,EAAAC,cAAC8I,EAAA/I,EAAD,OAKFsC,EAAAtC,EAAAC,cAACwI,EAAA,EAAD,CACEzE,QAAS,WACP3G,EAAMgM,YAAchM,EAAMuC,OAAOvC,EAAMgM,cAGzC/G,EAAAtC,EAAAC,cAAC4I,EAAA7I,EAAD,OAMR,IAAM0J,EAAa,SAACrM,GAAD,OACjBiF,EAAAtC,EAAAC,cAACwI,EAAA,EAAD,CAAYzE,QAAS3G,EAAM2G,QAASJ,MAAM,YACxCtB,EAAAtC,EAAAC,cAACmI,EAAApI,EAAD,QAIE2J,EAAe,SAACtM,GAAD,OACnBiF,EAAAtC,EAAAC,cAACwI,EAAA,EAAD,CAAYzE,QAAS3G,EAAM2G,QAASJ,MAAM,cACxCtB,EAAAtC,EAAAC,cAACiI,EAAAlI,EAAD,QAIEwJ,EAAe,SAACnM,GAAD,OACnBiF,EAAAtC,EAAAC,cAACwI,EAAA,EAAD,CAAYzE,QAAS3G,EAAM2G,QAASJ,MAAM,gBACxCtB,EAAAtC,EAAAC,cAACqI,EAAAtI,EAAD,QAIEyJ,EAAe,SAACpM,GAAD,OACnBiF,EAAAtC,EAAAC,cAACwI,EAAA,EAAD,CAAYhF,MAAM,YAAYO,QAAS3G,EAAM2G,QAASJ,MAAM,kBAC1DtB,EAAAtC,EAAAC,cAACuI,EAAAxI,EAAD,8QCtHE4J,6MACJC,MAAQ,CACNC,UAAW,GACXC,aAAa,iFAGAC,GAAQ,IAAAC,EAAAC,KACjBC,EAAG,GAAAzM,OAAM0M,4FAAN,uBAAA1M,OAAwDsM,GAC/DE,KAAKG,SAAS,CAAEN,aAAa,IAC7BG,KAAK7M,MAAMiN,KAAKC,wBAAwBJ,EAAK,OAC1CK,KAAK,SAAAV,GACJ,IAAIW,EAAWX,EAAUlJ,OACvB,SAAA8J,GAAG,OAAIA,EAAIC,WAA8B,IAAlBD,EAAIC,WAE7BF,EAASG,QAAQ,SAAAC,GACf,IAAIC,EAAehB,EAAUlJ,OAAO,SAAA8J,GAClC,OAAOA,EAAIC,WAAaE,EAASE,gBAE/BD,EAAahJ,OAAS,GACxB+I,EAASG,sBAAuB,EAChCH,EAASI,UAAYH,GAErBD,EAASG,sBAAuB,IAIpCP,EAASS,KAATC,MAAAV,EAAQ3M,OAAAsN,EAAA,EAAAtN,CACHgM,EAAUlJ,OAAO,SAAA8J,GAAG,OAAKA,EAAIC,UAA6B,OAAjBD,EAAIC,aAElDV,EAAKI,SAAS,CACZP,UAAWW,EAASY,KAClB,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,SAAWD,EAAKC,WAEvCzB,aAAa,MAGhB0B,MAAM,SAAAC,GAAK,OAAIzB,EAAKI,SAAS,CAAEqB,QAAO3B,aAAa,6CAGzCC,EAAQe,EAAeY,GAAmB,IAAAC,EAAA1B,KACvDA,KAAKG,SAAS,CAAEN,aAAa,IAC7B,IAAII,EAAG,GAAAzM,OAAM0M,4FAAN,2BACPF,KAAK7M,MAAMiN,KAAKC,wBAAwBJ,EAAK,OAAQ,CACnDH,OAAQA,EACRe,cAAeA,EACfY,kBAAmBA,IAElBnB,KAAK,WACJoB,EAAKC,eAAeD,EAAKvO,MAAMyO,gBAC/BF,EAAKvB,SAAS,CACZN,aAAa,MAGhB0B,MAAM,SAAAC,GACLE,EAAKvB,SAAS,CACZN,aAAa,IAEf6B,EAAKC,eAAeD,EAAKvO,MAAMyO,6DAIlBC,GACjB,GAAIA,EAASD,iBAAmB5B,KAAK7M,MAAMyO,eAAgB,CACzD,GAAI5B,KAAK7M,MAAMyO,eAAiB,EAI9B,YAHA5B,KAAKG,SAAS,CACZP,UAAW,KAIXI,KAAK7M,MAAMyO,gBAAkB5B,KAAK7M,MAAMyO,gBAAkB,GAC5D5B,KAAK2B,eAAe3B,KAAK7M,MAAMyO,6DAI/B5B,KAAK7M,MAAMyO,gBAAkB5B,KAAK7M,MAAMyO,gBAAkB,GAC5D5B,KAAK2B,eAAe3B,KAAK7M,MAAMyO,iDAI1B,IAAAE,EAAA9B,KACD7M,EAAQ6M,KAAK7M,MACnB,OACE4O,EAAAjM,EAAAC,cAACgM,EAAAjM,EAAME,SAAP,KACE+L,EAAAjM,EAAAC,cAACiM,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,OAAQC,SAAU,SACrChP,EAAMyO,eASHzO,EAAM0M,YAqGTkC,EAAAjM,EAAAC,cAACqM,EAAA,EAAD,MApGAL,EAAAjM,EAAAC,cAACgM,EAAAjM,EAAME,SAAP,KACE+L,EAAAjM,EAAAC,cAACO,EAAA,EAAD,CACE+L,OACEN,EAAAjM,EAAAC,cAACyI,EAAA,EAAD,CAAQxB,aAAW,OAAO9G,UAAW/C,EAAMC,QAAQiP,QACjDN,EAAAjM,EAAAC,cAACuM,EAAAxM,EAAD,OAGJ4D,MAAM,4CACN6I,UAAU,wDAEZR,EAAAjM,EAAAC,cAAC0I,EAAA,EAAD,KACEsD,EAAAjM,EAAAC,cAAA,WACGiK,KAAKL,MAAMC,UAAU/I,IAAI,SAAA2J,GACxB,YAC+B7G,IAA7B6G,EAAIM,sBAC0B,IAA7BN,EAAIM,uBAC0B,IAA7BN,EAAIM,qBA8EM,KA5ERN,EAAIO,UAGJgB,EAAAjM,EAAAC,cAACgM,EAAAjM,EAAME,SAAP,CAAgBe,IAAK,IAAMyJ,EAAIgC,aAC7BT,EAAAjM,EAAAC,cAAC0M,EAAA,EAAD,CAAUC,QAAM,EAAC3L,IAAKyJ,EAAIK,eACxBkB,EAAAjM,EAAAC,cAAC4M,EAAA,EAAD,KACEZ,EAAAjM,EAAAC,cAAC6M,EAAA,EAAD,CAAMrJ,MAAM,WAAWiH,EAAIqC,OAE7Bd,EAAAjM,EAAAC,cAAC+M,EAAA,EAAD,CAAcC,OAAK,EAACC,QAASxC,EAAIgC,eAEnCT,EAAAjM,EAAAC,cAACkN,EAAA,EAAD,CAAUC,IAAI,EAAMC,QAAQ,OAAOC,eAAa,GAC9CrB,EAAAjM,EAAAC,cAAC0I,EAAA,EAAD,CAAMvH,UAAU,MAAMmM,gBAAc,GACjC7C,EAAIO,UAAUlK,IAAI,SAAA2J,GACjB,OACEuB,EAAAjM,EAAAC,cAAC0M,EAAA,EAAD,CACEC,QAAM,EACNxM,UAAW/C,EAAMC,QAAQkQ,OACzBvM,IAAKyJ,EAAIK,eAETkB,EAAAjM,EAAAC,cAACwN,EAAA,EAAD,CACEhN,QAASiN,QACPhD,EAAIiD,UAAYjD,EAAIiB,mBAEtBiC,SAAUF,QAAQhD,EAAIiD,UACtBvI,SAAU,WACR4G,EAAK6B,eACHxQ,EAAMyO,eACNpB,EAAIK,cACJL,EAAIiB,sBAIVM,EAAAjM,EAAAC,cAAC4M,EAAA,EAAD,KACEZ,EAAAjM,EAAAC,cAAC6M,EAAA,EAAD,CAAMrJ,MAAM,WAAWiH,EAAIqC,OAE7Bd,EAAAjM,EAAAC,cAAC+M,EAAA,EAAD,CACEE,QACExC,EAAIgC,aACHhC,EAAIiD,SAAW,aAAe,YAY/C1B,EAAAjM,EAAAC,cAAC0M,EAAA,EAAD,CAAUC,QAAM,EAAC3L,IAAKyJ,EAAIK,eACxBkB,EAAAjM,EAAAC,cAACwN,EAAA,EAAD,CACEhN,QAASiN,QACPhD,EAAIiD,UAAYjD,EAAIiB,mBAEtBiC,SAAUF,QAAQhD,EAAIiD,UACtBvI,SAAU,kBACR4G,EAAK6B,eACHxQ,EAAMyO,eACNpB,EAAIK,cACJL,EAAIiB,sBAIVM,EAAAjM,EAAAC,cAAC4M,EAAA,EAAD,KACEZ,EAAAjM,EAAAC,cAAC6M,EAAA,EAAD,CAAMrJ,MAAM,WAAWiH,EAAIqC,OAE7Bd,EAAAjM,EAAAC,cAAC+M,EAAA,EAAD,CACEE,QACExC,EAAIgC,aACHhC,EAAIiD,SAAW,aAAe,YAjGnD1B,EAAAjM,EAAAC,cAACO,EAAA,EAAD,CACE+L,OACEN,EAAAjM,EAAAC,cAACyI,EAAA,EAAD,CAAQxB,aAAW,OAAO9G,UAAW/C,EAAMC,QAAQiP,QAAnD,KAIF3I,MAAM,gEA3FSkK,aA0MdC,cAtNA,SAAAnR,GAAK,MAAK,CACvB4Q,OAAQ,CACNrK,YAAavG,EAAMwG,QAAQ,IAE7B4F,SAAU,CACRgF,OAAQpR,EAAMwG,QAAQ,IAExBmJ,OAAQ,CACNvP,gBAAiBiR,IAAI,QA8MS,CAAEC,WAAW,GAAhCH,CAAwCnE,gQC3MjDA,6MACJC,MAAQ,CACNsE,aAAc,GACdC,gBAAgB,oFAGApE,GAAQ,IAAAC,EAAAC,KACpBC,EAAG,GAAAzM,OAAM0M,4FAAN,0BAAA1M,OAA2DsM,GAClEE,KAAKG,SAAS,CAAE+D,gBAAgB,IAChClE,KAAK7M,MAAMiN,KAAKC,wBAAwBJ,EAAK,OAC1CK,KAAK,SAAA2D,GACJ,IAAI1D,EAAW0D,EAAavN,OAC1B,SAAA8J,GAAG,OAAIA,EAAIC,WAA8B,IAAlBD,EAAIC,WAE7BF,EAASG,QAAQ,SAAAC,GACf,IAAIC,EAAeqD,EAAavN,OAAO,SAAA8J,GACrC,OAAOA,EAAIC,WAAaE,EAASE,gBAE/BD,EAAahJ,OAAS,GACxB+I,EAASG,sBAAuB,EAChCH,EAASI,UAAYH,GAErBD,EAASG,sBAAuB,IAIpCP,EAASS,KAATC,MAAAV,EAAQ3M,OAAAsN,EAAA,EAAAtN,CACHqQ,EAAavN,OAAO,SAAA8J,GAAG,OAAKA,EAAIC,UAA6B,OAAjBD,EAAIC,aAErDV,EAAKI,SAAS,CACZ8D,aAAc1D,EAASY,KACrB,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,SAAWD,EAAKC,WAEvC4C,gBAAgB,MAGnB3C,MAAM,SAAAC,GAAK,OAAIzB,EAAKI,SAAS,CAAEqB,QAAO0C,gBAAgB,gDAGzCpE,EAAQqE,EAAUC,GAAc,IAAA1C,EAAA1B,KAChDA,KAAKG,SAAS,CAAE+D,gBAAgB,IAChC,IAAIjE,EAAG,GAAAzM,OAAM0M,4FAAN,8BACPF,KAAK7M,MAAMiN,KAAKC,wBAAwBJ,EAAK,OAAQ,CACnDH,OAAQA,EACRqE,SAAUA,EACVC,aAAcA,IAEb9D,KAAK,kBAAMoB,EAAK2C,kBAAkB3C,EAAKvO,MAAMyO,kBAC7CL,MAAM,SAAAC,GACLE,EAAKvB,SAAS,CACZ+D,gBAAgB,IAElBxC,EAAK2C,kBAAkB3C,EAAKvO,MAAMyO,6DAIrBC,GACjB,GAAIA,EAASD,iBAAmB5B,KAAK7M,MAAMyO,eAAgB,CACzD,GAAI5B,KAAK7M,MAAMyO,eAAiB,EAI9B,YAHA5B,KAAKG,SAAS,CACZ8D,aAAc,KAIdjE,KAAK7M,MAAMyO,gBAAkB5B,KAAK7M,MAAMyO,gBAAkB,GAC5D5B,KAAKqE,kBAAkBrE,KAAK7M,MAAMyO,6DAKlC5B,KAAK7M,MAAMyO,gBAAkB,GAC/B5B,KAAKqE,kBAAkBrE,KAAK7M,MAAMyO,iDAI7B,IAAAE,EAAA9B,KACD7M,EAAQ6M,KAAK7M,MACnB,OACEmR,EAAAxO,EAAAC,cAACuO,EAAAxO,EAAME,SAAP,KACEsO,EAAAxO,EAAAC,cAACiM,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,OAAQC,SAAU,SACrChP,EAAMyO,eASHzO,EAAM+Q,eA8CTI,EAAAxO,EAAAC,cAACwN,EAAA,EAAD,MA7CAe,EAAAxO,EAAAC,cAACuO,EAAAxO,EAAME,SAAP,KACEsO,EAAAxO,EAAAC,cAACO,EAAA,EAAD,CACE+L,OACEiC,EAAAxO,EAAAC,cAACyI,EAAA,EAAD,CAAQxB,aAAW,UAAU9G,UAAW/C,EAAMC,QAAQiP,QACpDiC,EAAAxO,EAAAC,cAACwO,EAAAzO,EAAD,OAGJ4D,MAAM,gDACN6I,UAAU,2DAEZ+B,EAAAxO,EAAAC,cAAC0I,EAAA,EAAD,KACE6F,EAAAxO,EAAAC,cAAA,WACGiK,KAAKL,MAAMsE,aAAapN,IAAI,SAAA2J,GAC3B,OACE8D,EAAAxO,EAAAC,cAAC0M,EAAA,EAAD,CACEC,QAAM,EACNxM,UAAW/C,EAAMC,QAAQkQ,OACzBvM,IAAKyJ,EAAI2D,UAETG,EAAAxO,EAAAC,cAAC4M,EAAA,EAAD,CACEpM,QAASiN,QAAQhD,EAAIiD,UAAYjD,EAAI4D,cACrCV,SAAUF,QAAQhD,EAAIiD,UACtBvI,SAAU,WACR4G,EAAK0C,kBACHrR,EAAMyO,eACNpB,EAAI2D,SACJ3D,EAAI4D,iBAIVE,EAAAxO,EAAAC,cAAC6M,EAAA,EAAD,KACE0B,EAAAxO,EAAAC,cAAC+M,EAAA,EAAD,CAAMvJ,MAAM,WAAWiH,EAAIqC,OAE7ByB,EAAAxO,EAAAC,cAACkN,EAAA,EAAD,CACED,QACExC,EAAIiE,MAAQjE,EAAIiD,SAAW,aAAe,YA5C1Da,EAAAxO,EAAAC,cAACO,EAAA,EAAD,CACE+L,OACEiC,EAAAxO,EAAAC,cAACyI,EAAA,EAAD,CAAQxB,aAAW,OAAO9G,UAAW/C,EAAMC,QAAQiP,QAAnD,KAIF3I,MAAM,mEAvFSkK,aA+IdC,cA3JA,SAAAnR,GAAK,MAAK,CACvB4Q,OAAQ,CACNrK,YAAavG,EAAMwG,QAAQ,IAE7B4F,SAAU,CACRgF,OAAQpR,EAAMwG,QAAQ,IAExBmJ,OAAQ,CACNvP,gBAAiBiR,IAAI,QAmJS,CAAEC,WAAW,GAAhCH,CAAwCnE,mNCVxCgF,UAhJqC,SAASvR,GAAO,IAAAM,EACxCC,qBADwCC,EAAAC,OAAA+Q,EAAA,EAAA/Q,CAAAH,EAAA,GAC3DmR,EAD2DjR,EAAA,GACpDkR,EADoDlR,EAAA,GAAAK,EAEtBN,oBAAS,GAFaO,EAAAL,OAAA+Q,EAAA,EAAA/Q,CAAAI,EAAA,GAE3D8Q,EAF2D7Q,EAAA,GAE3C8Q,EAF2C9Q,EAAA,GAAAG,EAGtBV,mBAAS,GAHaW,EAAAT,OAAA+Q,EAAA,EAAA/Q,CAAAQ,EAAA,GAG3D4Q,EAH2D3Q,EAAA,GAG3C4Q,EAH2C5Q,EAAA,GAK5D+L,EAAY8E,oBALgD,SAmBnDC,EAnBmDC,GAAA,OAAAC,EAAApE,MAAAjB,KAAAsF,WAAA,SAAAD,IAAA,OAAAA,EAAAzR,OAAA2R,EAAA,EAAA3R,CAAA4R,EAAA1P,EAAA2P,KAmBlE,SAAAC,EAA0BlQ,GAA1B,IAAAyK,EAAA,OAAAuF,EAAA1P,EAAA6P,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAESrQ,EAAQuQ,MAASvQ,EAAQwQ,YAFlC,CAAAJ,EAAAE,KAAA,eAAAF,EAAAK,OAAA,SAGaC,QAAQC,OAAO,oCAH5B,cAKQlG,EALR,GAAAzM,OAKiB0M,4FALjB,kBAAA0F,EAAAE,KAAA,EAOU1F,EAAKC,wBAAwBJ,EAAK,OAAQ,CAC9CmG,OAAM,oDAAA5S,OAAsDgC,EAAQuQ,KAAKM,OAAnE,kBAAA7S,OACHgC,EAAQwQ,YAAYK,OADjB,eAAA7S,OAEJ4M,EAAKkG,eAFD,uBARZ,cAAAV,EAAAK,OAAA,UAYW,GAZX,cAAAL,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAcIY,QAAQC,IAARb,EAAAW,IAdJX,EAAAK,OAAA,UAeW,GAfX,yBAAAL,EAAAc,SAAAhB,EAAA,kBAnBkEzE,MAAAjB,KAAAsF,WAAA,SAsCnDqB,EAtCmDC,GAAA,OAAAC,EAAA5F,MAAAjB,KAAAsF,WAAA,SAAAuB,IAAA,OAAAA,EAAAjT,OAAA2R,EAAA,EAAA3R,CAAA4R,EAAA1P,EAAA2P,KAsClE,SAAAqB,EAA0BhH,GAA1B,IAAAG,EAAA,OAAAuF,EAAA1P,EAAA6P,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAlB,KAAA,EAEQ5F,EAFR,GAAAzM,OAEiB0M,4FAFjB,kBAAA6G,EAAAjB,KAAA,EAGU1F,EAAKC,wBAAwBJ,EAAK,SAAU,CAAEH,OAAQA,IAHhE,cAAAiH,EAAAd,OAAA,UAIW,GAJX,cAAAc,EAAAlB,KAAA,EAAAkB,EAAAR,GAAAQ,EAAA,SAMIP,QAAQC,IAARM,EAAAR,IANJQ,EAAAd,OAAA,UAOW,GAPX,yBAAAc,EAAAL,SAAAI,EAAA,kBAtCkE7F,MAAAjB,KAAAsF,WAMlEpQ,oBAAU,WAAM,SAAA8R,IAAA,OAAAA,EAAApT,OAAA2R,EAAA,EAAA3R,CAAA4R,EAAA1P,EAAA2P,KACd,SAAAwB,IAAA,IAAAhH,EAAA2E,EAAA,OAAAY,EAAA1P,EAAA6P,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cACEf,GAAkB,GAEd9E,EAHN,GAAAzM,OAGe0M,4FAHf,qBAAAgH,EAAApB,KAAA,EAIoB1F,EAAKC,wBAAwBJ,EAAK,OAJtD,OAIM2E,EAJNsC,EAAAC,KAKEX,QAAQC,IAAI,kBACZ5B,EAASD,GACTG,GAAkB,GAPpB,wBAAAmC,EAAAR,SAAAO,OADchG,MAAAjB,KAAAsF,YAAA,WAAA0B,EAAA/F,MAAAjB,KAAAsF,WAUd8B,IACC,CAAChH,EAAM4E,IAgCV,IAAM3R,EAAyB,CAC7B,CACE4D,OAAQ,UACRD,SAAU,kBACVK,SAAU,eACVC,cAAe,SAAC7C,EAAU4S,GACxB,OACEC,EAAAxR,EAAAC,cAAAuR,EAAAxR,EAAAE,SAAA,KAQEsR,EAAAxR,EAAAC,cAACwR,EAAA,gBAAD3T,OAAA4T,OAAA,GACMH,EADN,CAEElI,WAAYmI,EAAAxR,EAAAC,cAAC0R,EAAD,CAAa7F,eAAgBnN,EAAIqL,SAC7CT,aAAYzL,OAAA2R,EAAA,EAAA3R,CAAA4R,EAAA1P,EAAA2P,KAAE,SAAAiC,IAAA,OAAAlC,EAAA1P,EAAA6P,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,WAEV8B,OAAOC,QAAP,mCAAArU,OACqCiB,EAAIsR,KADzC,OAFU,CAAA4B,EAAA7B,KAAA,eAMVf,GAAkB,GANR4C,EAAA7B,KAAA,EAOJa,EAAWlS,EAAIqL,QAPX,OAQVmF,EAAkBD,GAAkC,GACpDD,GAAkB,GATR,wBAAA4C,EAAAjB,SAAAgB,YAiBxB,CACEzQ,OAAQ,SACRD,SAAU,SACVK,SAAU,SACVT,QAAQ,EACR+D,UAAU,GAEZ,CACE1D,OAAQ,OACRD,SAAU,OACVK,SAAU,UAEZ,CACEJ,OAAQ,cACRD,SAAU,cACVK,SAAU,UAEZ,CACEJ,OAAQ,YACRD,SAAU,YACVK,SAAU,WACVsD,UAAU,IAGd,OACE2M,EAAAxR,EAAAC,cAAAuR,EAAAxR,EAAAE,SAAA,KACEsR,EAAAxR,EAAAC,cAAC+R,EAAA,UAAD,CACEC,gBAAiBjD,EACjBkD,OAAO,EACP7K,WAAW,EACX9J,QAASA,EACT4U,YAAY,SACZC,KAAMtD,EAENuD,aAAc,SAACtO,GACb,OACEyN,EAAAxR,EAAAC,cAAC+R,EAAA,oBAAD,CACEjO,iBAAkBA,EAClBH,MAAO,QACPE,gBAAe,eAAAwO,EAAAxU,OAAA2R,EAAA,EAAA3R,CAAA4R,EAAA1P,EAAA2P,KAAE,SAAA4C,EAAMC,GAAN,IAAA9S,EAAA,OAAAgQ,EAAA1P,EAAA6P,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAA1C,KAAA,EAEbd,GAAkB,GACZvP,EAAeqE,EAAiBE,qBAHzBwO,EAAAzC,KAAA,EAIPX,EAAW3P,GAJJ,OAKbyP,EAAkBD,GAAkC,GACpDnL,EAAiBG,oBACjB+K,GAAkB,GAPLwD,EAAAzC,KAAA,iBAAAyC,EAAA1C,KAAA,GAAA0C,EAAAhC,GAAAgC,EAAA,SASb/B,QAAQC,IAAR8B,EAAAhC,IACAiC,MAAM,iDAVO,yBAAAD,EAAA7B,SAAA2B,EAAA,kBAAF,gBAAAI,GAAA,OAAAL,EAAAnH,MAAAjB,KAAAsF,YAAA,UAuB7B,IAAM9S,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACX+V,SAAU,CACRC,aAAc,yBAKpB,SAASlB,EAAYtU,GACnB,IAAMiN,EAAY8E,oBACZ9R,EAAUZ,IAFegC,EAGOd,mBAAS,GAHhBgB,EAAAd,OAAA+Q,EAAA,EAAA/Q,CAAAY,EAAA,GAGxBoU,EAHwBlU,EAAA,GAGXmU,EAHWnU,EAAA,GAI/B,OACE4S,EAAAxR,EAAAC,cAAAuR,EAAAxR,EAAAE,SAAA,KACEsR,EAAAxR,EAAAC,cAAC0I,EAAA,EAAD,CACE5J,MAAO+T,EACPxV,QAAS,CAAE4F,KAAM5F,EAAQsV,UACzBxN,SAAU,SAACsC,EAAO3I,GAChBgU,EAAehU,KAGjByS,EAAAxR,EAAAC,cAAC0M,EAAA,EAAD,CAAKqG,KAAMxB,EAAAxR,EAAAC,cAACgT,EAAAjT,EAAD,QACXwR,EAAAxR,EAAAC,cAAC0M,EAAA,EAAD,CAAKqG,KAAMxB,EAAAxR,EAAAC,cAACiT,EAAAlT,EAAD,SAEI,IAAhB8S,GACCtB,EAAAxR,EAAAC,cAACkT,EAAA,QAAD,CAAoBrH,eAAgBzO,EAAMyO,eAAgBxB,KAAMA,IAEjD,IAAhBwI,GACCtB,EAAAxR,EAAAC,cAACmT,EAAA,QAAD,CACEtH,eAAgBzO,EAAMyO,eACtBxB,KAAMA,wCChMhB,IAAA+I,EAA6BtR,EAAQ,IAErCjE,OAAAwV,eAAAC,EAAA,cACAxU,OAAA,IAEAwU,EAAApW,aAAA,EAEA,IAAAqW,EAAAH,EAAoCtR,EAAQ,IAI5C0R,GAAA,EAFAJ,EAA4CtR,EAAQ,KAEpD5E,SAAAqW,EAAArW,QAAA8C,cAAA,QACAiC,EAAA,yJACC,QAEDqR,EAAApW,QAAAsW,oCCfA,IAAAJ,EAA6BtR,EAAQ,IAErCjE,OAAAwV,eAAAC,EAAA,cACAxU,OAAA,IAEAwU,EAAApW,aAAA,EAEA,IAAAqW,EAAAH,EAAoCtR,EAAQ,IAI5C0R,GAAA,EAFAJ,EAA4CtR,EAAQ,KAEpD5E,SAAAqW,EAAArW,QAAA8C,cAAA,QACAiC,EAAA,kFACC,UAEDqR,EAAApW,QAAAsW,oCCfA,IAAAJ,EAA6BtR,EAAQ,IAErCjE,OAAAwV,eAAAC,EAAA,cACAxU,OAAA,IAEAwU,EAAApW,aAAA,EAEA,IAAAqW,EAAAH,EAAoCtR,EAAQ,IAI5C0R,GAAA,EAFAJ,EAA4CtR,EAAQ,KAEpD5E,SAAAqW,EAAArW,QAAA8C,cAAA,QACAiC,EAAA,0IACC,QAEDqR,EAAApW,QAAAsW,oCCfA,IAAAJ,EAA6BtR,EAAQ,IAErCjE,OAAAwV,eAAAC,EAAA,cACAxU,OAAA,IAEAwU,EAAApW,aAAA,EAEA,IAAAqW,EAAAH,EAAoCtR,EAAQ,IAI5C0R,GAAA,EAFAJ,EAA4CtR,EAAQ,KAEpD5E,SAAAqW,EAAArW,QAAA8C,cAAA,QACAiC,EAAA,mGACC,WAEDqR,EAAApW,QAAAsW,0aCAA,IAAM/W,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqG,KAAM,CACJwQ,MAAO,OACPC,UAAW/W,EAAMwG,QAAQ,IAE3BwQ,MAAO,CACLF,MAAO,OACPG,aAAcjX,EAAMwG,QAAQ,IAE9B0Q,MAAO,CACLC,SAAU,KAEZC,aAAc,CACZC,UAAW,QAEbjL,SAAU,CACRC,WAAYrM,EAAMwG,QAAQ,GAC1B8F,YAAatM,EAAMwG,QAAQ,QAmG1B,SAAS8Q,EAAU7W,GACxB,IAAMC,EAAUZ,IAD+BiB,EAEvBC,mBAAS,GAFcC,EAAAC,OAAAuI,EAAA,EAAAvI,CAAAH,EAAA,GAExCwW,EAFwCtW,EAAA,GAElCuW,EAFkCvW,EAAA,GAAAK,EAGTN,mBAAS,GAHAO,EAAAL,OAAAuI,EAAA,EAAAvI,CAAAI,EAAA,GAGxCmW,EAHwClW,EAAA,GAG3BmW,EAH2BnW,EAAA,GAAAG,EAIbV,oBAAS,GAJIW,EAAAT,OAAAuI,EAAA,EAAAvI,CAAAQ,EAAA,GAIxCiW,EAJwChW,EAAA,GAI7BiW,EAJ6BjW,EAAA,GAAAG,EAKvBd,mBAAS,CAAC,KALagB,EAAAd,OAAAuI,EAAA,EAAAvI,CAAAY,EAAA,GAKxC0T,EALwCxT,EAAA,GAKlCe,EALkCf,EAAA,GAAA6V,EAMjB7W,oBAAS,GANQ8W,EAAA5W,OAAAuI,EAAA,EAAAvI,CAAA2W,EAAA,GAMxCE,EANwCD,EAAA,GAM/BE,EAN+BF,EAAA,GAAAG,EAODjX,oBAAS,GAPRkX,EAAAhX,OAAAuI,EAAA,EAAAvI,CAAA+W,EAAA,GAOxCE,EAPwCD,EAAA,GAOvBE,EAPuBF,EAAA,GAQ3CG,OAAqBpR,EAEzBzE,oBAAU,WAGR,GAFAsR,QAAQC,IAAI,gBAEc,oBAAftT,EAAM+U,KAAqB,CACpC,IAAI8C,EAAsC7X,EAAM+U,KAGhDoC,GAAa,GACbU,IACG1K,KAAK,SAAC2K,GACLxV,EAAQwV,GACRX,GAAa,KAEd/I,MAAM,SAAC5K,GACN6P,QAAQC,IAAI,UAAY9P,GACxB2T,GAAa,GACbI,GAAW,UAGfjV,EAAQtC,EAAM+U,OAGf,CAAC/U,EAAM+U,KAAM/U,EAAM+X,cAUtB,IAAMC,EACJhB,GACCjC,EAAOkD,KAAKC,IAAIlB,EAAajC,EAAKtQ,OAASqS,EAAOE,GAAe,GAEpE,OACEzN,EAAA5G,EAAAC,cAACuV,EAAA,EAAD,CAAyBvQ,MAAOwQ,KAC9B7O,EAAA5G,EAAAC,cAAA,OAAKG,UAAW9C,EAAQ4F,MACtB0D,EAAA5G,EAAAC,cAACyV,EAAA,EAAD,CAAOtV,UAAW9C,EAAQsW,OACxBhN,EAAA5G,EAAAC,cAAA,OAAKG,UAAW9C,EAAQ0W,cACrB3W,EAAMgV,aACHhV,EAAMgV,aAAa,CACjBlO,gBAAiB,WACf6Q,GAAmB,IAErB9Q,kBAAmB,WACjB8Q,GAAmB,IAErBxV,WAAYuV,EACZ9Q,mBAAoB,WAClB,OAAOgR,KAGX,KACJrO,EAAA5G,EAAAC,cAAC0V,EAAA,EAAD,CACEvV,UAAW9C,EAAQwW,MACnBnT,kBAAgB,aAChByI,KAAM/L,EAAM6U,MAAQ,QAAU,UAE9BtL,EAAA5G,EAAAC,cAAC2V,EAAA,gBAAoBvY,GACrBuJ,EAAA5G,EAAAC,cAAC4V,EAAA,EAAD,KACGd,GACCnO,EAAA5G,EAAAC,cAAC6V,EAAA,YAAD,CACE7U,KAAM,EACNtC,IAAK,WACH,IAAIoX,EAAiB,GAMrB,OALA1Y,EAAME,QACHqD,OAAO,SAAAC,GAAC,MAAmB,iBAAfA,EAAEU,WACdqJ,QAAQ,SAACzD,GACR4O,EAAU5O,EAAIjG,UAAY,KAEvB6U,GAETvY,OAAQ,EACRD,QAASF,EAAME,QACf8C,gBAAgB,EAChBb,YAAY,EACZL,aAAc,SAACR,GACbsW,EAAgBtW,KAIrBtB,EAAM4U,iBAAmBsC,GAAaI,EACrC/N,EAAA5G,EAAAC,cAAC+V,EAAA,EAAD,KACEpP,EAAA5G,EAAAC,cAACgW,EAAA,EAAD,CACEpU,QACExE,EAAME,QAAQqD,OAAO,SAACC,GAAD,OAAqBA,EAAEC,SACzCgB,OAELoU,QAAS7B,EACT8B,MAAO,UAEPvP,EAAA5G,EAAAC,cAAA,WACG5C,EAAM4U,iBAAmBsC,EACxB3N,EAAA5G,EAAAC,cAACkN,EAAA,EAAD,CACE/D,KAAM,GACNhJ,UAAW9C,EAAQ0L,WAGrB,0BAMRoJ,GACAA,EAAKtQ,OAAS,GACdsQ,EACGgE,MAAMjC,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CtT,IAAI,SAACpC,EAAUnB,GACd,OACEoJ,EAAA5G,EAAAC,cAAC6V,EAAA,YAAD,CACE7U,IAAKzD,EACLmB,IAAKA,EACLnB,MAAOA,EACPD,QAASF,EAAME,QACf8C,eAAgBhD,EAAMgD,mBAK/BgV,EAAY,GACXzO,EAAA5G,EAAAC,cAAC+V,EAAA,EAAD,CAAU7J,MAAO,CAAEC,OAAQ,GAAKiJ,IAC9BzO,EAAA5G,EAAAC,cAACgW,EAAA,EAAD,CACEpU,QACExE,EAAME,QAAQqD,OAAO,SAACC,GAAD,OAAqBA,EAAEC,SACzCgB,aAQjB8E,EAAA5G,EAAAC,cAACoW,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BlV,UAAU,MACVmV,MAAOnE,EAAOA,EAAKtQ,OAAS,EAC5BuS,YAAaA,EACbF,KAAMA,EACNqC,oBAAqB,CACnBtP,aAAc,iBAEhBuP,oBAAqB,CACnBvP,aAAc,aAEhBwP,aA3HV,SAA0BC,EAAiBC,GACzCxC,EAAQwC,IA2HAC,oBAxHV,SAAiCnP,GAC/B4M,GAAgB5M,EAAMlC,OAAOzG","file":"static/js/4.f577e963.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { TableColumn } from \"./index\";\nimport { Checkbox } from \"@material-ui/core\";\nimport EditableTableCell from \"./EditableTableCell\";\n\n/**\n *\n *\n * @export\n * @interface rowActionsAndStates\n */\nexport interface rowActionsAndStates {\n  /**\n   *Call this function to put the row in edit mode status\n   * @memberof rowActionsAndStates\n   */\n  enterEditMode: () => void;\n\n  /**\n   *Call this function to cancel the edit mode and return the row to reset status\n   * @memberof rowActionsAndStates\n   */\n  discardEditMode: () => void;\n\n  /**\n   *true if the row is in edit mode\n   * @type {boolean}\n   * @memberof rowActionsAndStates\n   */\n  editMode: boolean;\n  /**\n   * Original row data\n   * @type {*}\n   * @memberof rowActionsAndStates\n   */\n  oldData: any;\n  /**\n   * New Row Data (if it's modified)\n   * @type {*}\n   * @memberof rowActionsAndStates\n   */\n  newData: any;\n  /**\n   * Use this to set the row Data for example when a row is edited successfully and you want to replace the data\n   * without refreshing the whole content of the grid\n   * Note that this will set the the data in state and not whole table prop. i.e. if the page changes the row will reset\n   * BETTER OPTION IS TO REFRESH THE DATA FOR THE WHOLE GRID\n   * @memberof rowActionsAndStates\n   */\n  setData: (data: any) => void;\n  /**\n   * True when the record is a newly added record (not added yet!)\n   * @type {boolean}\n   * @memberof rowActionsAndStates\n   */\n  insertMode: boolean;\n\n  /**\n   *True when the details panel is open\n   * @type {boolean}\n   * @memberof IStandardActionsAndStates\n   */\n  isExpanded: boolean;\n\n  /**\n   * call to expand the row with sent details\n   * @memberof rowActionsAndStates\n   */\n  expand: (detailsComp: React.ReactElement) => void;\n  /**\n   *Close the details panel\n   *\n   * @memberof IStandardActionsAndStates\n   */\n  collapse: () => any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rowStyle: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  })\n);\n\nexport function LogiDataRow(props: {\n  columns: Array<TableColumn>;\n  index: number;\n  allowSelection?: boolean;\n  row: any;\n  insertMode?: boolean;\n  /**\n   * will be called every time the record data is modified\n   */\n  setEditedRow?: (row: any) => void;\n}) {\n  const classes = useStyles();\n  const { columns, index } = props;\n  const labelId = `enhanced-table-checkbox-${index}`;\n  const [editMode, setEditMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [rowDetails, setRowDetails] = useState();\n  const [row, setRow] = useState(props.row);\n  useEffect(() => {\n    setRow(props.row);\n  }, [props.row]);\n\n  function changeValue(value: any, columnName: string) {\n    var editedRow = { ...row };\n    editedRow[columnName] = value;\n    setRow(editedRow);\n    props.setEditedRow && props.setEditedRow(editedRow);\n  }\n  function resetRow() {\n    setRow(props.row);\n    props.setEditedRow && props.setEditedRow(props.row);\n  }\n\n  let rowStateAndAction: rowActionsAndStates = {\n    enterEditMode: () => {\n      setEditMode(true);\n    },\n    discardEditMode: () => {\n      setEditMode(false);\n      resetRow();\n    },\n    editMode: editMode || (props.insertMode ? props.insertMode : false),\n    oldData: props.row,\n    newData: row, // this will be modified data (in case user changes values)\n    setData: (newData: any) => {\n      setRow(newData);\n    },\n    insertMode: props.insertMode ? props.insertMode : false,\n    isExpanded: isExpanded,\n    expand: detailsComp => {\n      setRowDetails(detailsComp);\n      setIsExpanded(true);\n    },\n    collapse: () => {\n      setIsExpanded(false);\n    }\n  };\n\n  return (\n    <>\n      <TableRow className={classes.rowStyle}>\n        {props.allowSelection ? (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              checked={false}\n              inputProps={{ \"aria-labelledby\": labelId }}\n            />\n          </TableCell>\n        ) : null}\n        {columns\n          .filter((c: TableColumn) => !c.hidden)\n          .map((c: TableColumn, colIndex: number) => {\n            if (colIndex === 0) {\n              return (\n                <TableCell\n                  key={`${c.accessor ? c.accessor : c.header}${index}`}\n                  component=\"th\"\n                  id={labelId}\n                  scope=\"row\"\n                  padding=\"default\"\n                >\n                  {props.insertMode &&\n                  c.dataType === \"ActionColumn\" ? null : c.viewComponent ? (\n                    c.viewComponent(row, rowStateAndAction)\n                  ) : (\n                    <EditableTableCell\n                      column={c}\n                      changeValue={(newValue: any) =>\n                        changeValue(newValue, c.accessor)\n                      }\n                      dataRow={row}\n                      editMode={editMode || props.insertMode}\n                    />\n                  )}\n                </TableCell>\n              );\n            } else\n              return (\n                <TableCell\n                  key={`${c.accessor ? c.accessor : c.header}${index}`}\n                >\n                  {props.insertMode &&\n                  c.dataType === \"ActionColumn\" ? null : c.viewComponent ? (\n                    c.viewComponent(row, rowStateAndAction)\n                  ) : (\n                    <EditableTableCell\n                      column={c}\n                      changeValue={(newValue: any) =>\n                        changeValue(newValue, c.accessor)\n                      }\n                      dataRow={row}\n                      editMode={\n                        editMode ||\n                        (props.insertMode ? props.insertMode : false)\n                      }\n                    />\n                  )}\n                </TableCell>\n              );\n          })}\n      </TableRow>\n      {isExpanded ? (\n        <TableRow>\n          <TableCell\n            colSpan={columns.filter((c: TableColumn) => !c.hidden).length}\n          >\n            {rowDetails}\n          </TableCell>\n        </TableRow>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Toolbar,\n  IconButton\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toolbarActionsAndState } from \"./index\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary,\n      flex: \"0 0 auto\"\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  })\n);\n\nexport const LogiTableToolbar = (props: {\n  title?: string;\n  actions?: React.ReactElement;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar className={classes.root}>\n      <div className={classes.title}>{props.title}</div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>{props.actions}</div>\n    </Toolbar>\n  );\n};\n\nexport const LogiStandardToolbar = (props: {\n  title: string;\n  actionsAndStates: toolbarActionsAndState;\n  insertNewRecord: (recordData: any) => void;\n}) => {\n  let actions: React.ReactElement = <></>;\n  if (props.insertNewRecord !== undefined) {\n    actions = !props.actionsAndStates.insertMode ? (\n      <IconButton\n        color=\"secondary\"\n        onClick={props.actionsAndStates.enterInsertMode}\n        title=\"Add Record\"\n      >\n        <AddIcon />\n      </IconButton>\n    ) : (\n      <>\n        <IconButton\n          onClick={() => {\n            props.insertNewRecord(props.actionsAndStates.insertedRecordData());\n          }}\n          title=\"Save changes\"\n        >\n          <SaveIcon />\n        </IconButton>\n        <IconButton\n          color=\"secondary\"\n          onClick={props.actionsAndStates.discardInsertMode}\n          title=\"Cancel changes\"\n        >\n          <CancelIcon />\n        </IconButton>\n      </>\n    );\n  }\n\n  return <LogiTableToolbar title={props.title} actions={actions} />;\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/moment\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider\n} from \"@material-ui/pickers\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ArrowForward from \"@material-ui/icons/ArrowForward\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport { TableColumn } from \"./index\";\n\ninterface IEditableTableCell {\n  column: TableColumn;\n  editMode?: boolean;\n  dataRow: any;\n  changeValue: (newValue: any) => void;\n}\n\nfunction EditableTableCell(props: IEditableTableCell) {\n  if (props.editMode && !props.column.readOnly) {\n    const onDateInputChange = (date: any) =>\n      props.changeValue(date.toISOString());\n    switch (props.column.dataType) {\n      case \"Date\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              autoOk={true}\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n              rightArrowIcon={<ArrowForward />}\n              leftArrowIcon={<ArrowBack />}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"Time\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <TimePicker\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"DateTime\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n              rightArrowIcon={<ArrowForward />}\n              leftArrowIcon={<ArrowBack />}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"Boolean\":\n        return (\n          <Checkbox\n            onChange={e => {\n              props.changeValue(e.target.checked);\n            }}\n            checked={getBool()}\n          />\n        );\n      case \"Number\":\n      case \"String\":\n      default:\n        return (\n          <TextField\n            type={props.column.dataType === \"Number\" ? \"number\" : \"text\"}\n            value={props.dataRow[props.column.accessor]}\n            onChange={e => props.changeValue(e.target.value)}\n          />\n        );\n    }\n  } //read only mode\n  else {\n    switch (props.column.dataType) {\n      case \"Date\":\n        return (\n          <React.Fragment>\n            {new Date(\n              props.dataRow[props.column.accessor]\n            ).toLocaleDateString()}\n          </React.Fragment>\n        );\n      case \"DateTime\":\n        return (\n          <React.Fragment>\n            {new Date(props.dataRow[props.column.accessor]).toLocaleString()}\n          </React.Fragment>\n        );\n      case \"Time\":\n        return (\n          <React.Fragment>\n            {new Date(\n              props.dataRow[props.column.accessor]\n            ).toLocaleTimeString()}\n          </React.Fragment>\n        );\n      case \"Boolean\":\n        return <Checkbox checked={getBool()} />;\n      default:\n        return (\n          <React.Fragment>\n            {props.dataRow[props.column.accessor]}\n          </React.Fragment>\n        );\n    }\n  }\n\n  function getBool(): boolean | undefined {\n    switch (typeof props.dataRow[props.column.accessor]) {\n      case \"boolean\":\n        return props.dataRow[props.column.accessor];\n      case \"number\":\n        return props.dataRow[props.column.accessor] > 0 ? true : false;\n      case \"string\":\n        return (props.dataRow[\n          props.column.accessor\n        ] as string).toLowerCase() === \"true\"\n          ? true\n          : false;\n      default:\n        //a lot of times the type seems to be undefined!\n        return props.dataRow[props.column.accessor];\n    }\n  }\n}\n\nexport default EditableTableCell;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Order, TableColumn } from \"./index\";\n\nexport function LogiTableHeader(props: {\n  onSelectAllClick?: any;\n  columns: TableColumn[];\n  customSortFunction?: any;\n  allowSelection?: boolean;\n  showSelectAll?: boolean;\n  allowSort?: boolean;\n}) {\n  const { onSelectAllClick, columns } = props;\n\n  const [order, setOrder] = React.useState<Order>(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"\");\n\n  const createSortHandler = (clickedColumn: TableColumn) => (\n    event: React.MouseEvent<unknown>\n  ) => {\n    if (props.customSortFunction)\n      props.customSortFunction(event, clickedColumn);\n    else {\n      const isDesc = orderBy === clickedColumn.header && order === \"desc\";\n      setOrder(isDesc ? \"asc\" : \"desc\");\n      setOrderBy(clickedColumn.header);\n    }\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {props.allowSelection ? (\n          <TableCell padding=\"checkbox\">\n            {props.showSelectAll ? (\n              <Checkbox\n                //TODO: fix the checked state for select all\n                checked={true}\n                onChange={onSelectAllClick}\n                inputProps={{ \"aria-label\": \"Select all\" }}\n              />\n            ) : null}\n          </TableCell>\n        ) : null}\n        {columns.map(col =>\n          col.hidden ? null : (\n            <TableCell\n              key={col.accessor}\n              //align={col.dataType === 'Number' ? 'right' : 'left'}\n              //padding={col.disablePadding ? \"none\" : \"default\"}\n              sortDirection={orderBy === col.header ? order : false}\n            >\n              {props.allowSort && !(col.dataType === \"ActionColumn\") ? (\n                <TableSortLabel\n                  active={orderBy === col.header}\n                  direction={order}\n                  onClick={createSortHandler(col)}\n                >\n                  {col.header}\n                </TableSortLabel>\n              ) : (\n                col.header\n              )}\n            </TableCell>\n          )\n        )}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport { rowActionsAndStates } from \"./index\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  CircularProgress\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\n\nexport interface IStandardActionsAndStates extends rowActionsAndStates {\n  /**\n   *True when a delete or Save is in progress\n   *\n   * @type {boolean}\n   * @memberof IStandardActionsAndStates\n   */\n  actionInProgress?: boolean;\n  /**\n   * Will be fired when Save button is clicked,\n   * if exists Edit button will be displayed\n   * @memberof IStandardActionsAndStates\n   */\n  saveChanges?: () => any;\n  /**\n   *Will be fired when delete button is clicked\n   * if exists Delete icon will be displayed\n   * @memberof IStandardActionsAndStates\n   */\n  deleteRecord?: () => any;\n  /**\n   * The component that you expect to be displayed in details panel\n   *\n   * @type {React.ReactElement}\n   * @memberof IStandardActionsAndStates\n   */\n  expandComp?: React.ReactElement;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    progress: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  })\n);\n\nexport function StandardActions(props: IStandardActionsAndStates) {\n  const classes = useStyles();\n  if (props.actionInProgress) {\n    return <CircularProgress size={30} className={classes.progress} />;\n  }\n  if (props.editMode) {\n    return <EditComp {...props} />;\n  }\n  return (\n    <>\n      {props.expandComp !== undefined ? <ExpandDetail {...props} /> : null}\n      {props.saveChanges !== undefined ? <EditComp {...props} /> : null}\n      {props.deleteRecord !== undefined ? <DeleteComp {...props} /> : null}\n    </>\n  );\n}\n\nexport function EditComp(props: IStandardActionsAndStates) {\n  if (!props.editMode) {\n    return (\n      <EditButton\n        onClick={() => {\n          props.enterEditMode();\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <CommitButton\n          onClick={(e: any) => {\n            props.saveChanges && props.saveChanges();\n          }}\n        />\n        <CancelButton\n          onClick={() => {\n            props.discardEditMode();\n          }}\n        />\n      </>\n    );\n  }\n}\nexport function DeleteComp(props: IStandardActionsAndStates) {\n  return (\n    <DeleteButton onClick={() => props.deleteRecord && props.deleteRecord()} />\n  );\n}\n\nexport function ExpandDetail(props: IStandardActionsAndStates) {\n  if (props.isExpanded) {\n    return (\n      <IconButton\n        onClick={() => {\n          props.collapse && props.collapse();\n        }}\n      >\n        <ExpandLessIcon />\n      </IconButton>\n    );\n  } else {\n    return (\n      <IconButton\n        onClick={() => {\n          props.expandComp && props.expand(props.expandComp);\n        }}\n      >\n        <ExpandMoreIcon />\n      </IconButton>\n    );\n  }\n}\n\nconst EditButton = (props: any) => (\n  <IconButton onClick={props.onClick} title=\"Edit row\">\n    <EditIcon />\n  </IconButton>\n);\n\nconst DeleteButton = (props: any) => (\n  <IconButton onClick={props.onClick} title=\"Delete row\">\n    <DeleteIcon />\n  </IconButton>\n);\n\nconst CommitButton = (props: any) => (\n  <IconButton onClick={props.onClick} title=\"Save changes\">\n    <SaveIcon />\n  </IconButton>\n);\n\nconst CancelButton = (props: any) => (\n  <IconButton color=\"secondary\" onClick={props.onClick} title=\"Cancel changes\">\n    <CancelIcon />\n  </IconButton>\n);\n\nconst FailedButton = (props: any) => (\n  <Button color=\"primary\" onClick={props.onClick} title=\"Action Failed\">\n    Failed!\n  </Button>\n);\n","import {\n  Avatar,\n  Card,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Collapse,\n  Icon,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from \"@material-ui/core\";\nimport red from \"@material-ui/core/colors/red\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Apps from \"@material-ui/icons/Apps\";\nimport React, { Component } from \"react\";\n\nconst styles = theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  progress: {\n    margin: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n});\n\nclass AppsManagement extends Component {\n  state = {\n    rolesApps: [],\n    loadingApps: false\n  };\n\n  fetchRolesApps(RoleID) {\n    var url = `${process.env.REACT_APP_APIURL}security/rolesApps/${RoleID}`;\n    this.setState({ loadingApps: true });\n    this.props.Auth.AuthenticatedServerCall(url, \"GET\")\n      .then(rolesApps => {\n        let tempApps = rolesApps.filter(\n          app => app.ParentID && app.ParentID === -1\n        );\n        tempApps.forEach(appGroup => {\n          let appsForGroup = rolesApps.filter(app => {\n            return app.ParentID === appGroup.ApplicationID;\n          });\n          if (appsForGroup.length > 0) {\n            appGroup.ShowInNavigationTree = true;\n            appGroup.childApps = appsForGroup;\n          } else {\n            appGroup.ShowInNavigationTree = false; //empty group no need to display\n          }\n        });\n        //---add all other apps (with no parent)\n        tempApps.push(\n          ...rolesApps.filter(app => !app.ParentID || app.ParentID === null)\n        );\n        this.setState({\n          rolesApps: tempApps.sort(\n            (appA, appB) => appA.AppOrder - appB.AppOrder\n          ),\n          loadingApps: false\n        });\n      })\n      .catch(error => this.setState({ error, loadingApps: false }));\n  }\n\n  modifyRoleApps(RoleID, ApplicationID, ApplicationRoleID) {\n    this.setState({ loadingApps: true });\n    var url = `${process.env.REACT_APP_APIURL}security/modifyRoleApps`;\n    this.props.Auth.AuthenticatedServerCall(url, \"POST\", {\n      RoleID: RoleID,\n      ApplicationID: ApplicationID,\n      ApplicationRoleID: ApplicationRoleID\n    })\n      .then(() => {\n        this.fetchRolesApps(this.props.selectedRoleID);\n        this.setState({\n          loadingApps: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          loadingApps: false\n        });\n        this.fetchRolesApps(this.props.selectedRoleID);\n      });\n  }\n\n  componentDidUpdate(prevProp) {\n    if (prevProp.selectedRoleID !== this.props.selectedRoleID) {\n      if (this.props.selectedRoleID < 0) {\n        this.setState({\n          rolesApps: []\n        });\n        return;\n      }\n      if (this.props.selectedRoleID && this.props.selectedRoleID >= 0)\n        this.fetchRolesApps(this.props.selectedRoleID);\n    }\n  }\n  componentDidMount() {\n    if (this.props.selectedRoleID && this.props.selectedRoleID >= 0) {\n      this.fetchRolesApps(this.props.selectedRoleID);\n    }\n  }\n\n  render() {\n    const props = this.props;\n    return (\n      <React.Fragment>\n        <Card style={{ height: \"100%\", overflow: \"Auto\" }}>\n          {!props.selectedRoleID ? (\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"Apps\" className={props.classes.avatar}>\n                  R\n                </Avatar>\n              }\n              title=\"Please Select a Role to view/amend accessible Apps\"\n            />\n          ) : !props.loadingApps ? (\n            <React.Fragment>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"Apps\" className={props.classes.avatar}>\n                    <Apps />\n                  </Avatar>\n                }\n                title=\"You can tune accessible app for the roles\"\n                subheader=\"Please note Public apps are accessible for everyone\"\n              />\n              <List>\n                <div>\n                  {this.state.rolesApps.map(app => {\n                    if (\n                      app.ShowInNavigationTree !== undefined &&\n                      (app.ShowInNavigationTree === 1 ||\n                        app.ShowInNavigationTree === true)\n                    ) {\n                      if (app.childApps) {\n                        //it's a group\n                        return (\n                          <React.Fragment key={\"G\" + app.Application}>\n                            <ListItem button key={app.ApplicationID}>\n                              <ListItemIcon>\n                                <Icon color=\"primary\">{app.Icon}</Icon>\n                              </ListItemIcon>\n                              <ListItemText inset primary={app.Application} />\n                            </ListItem>\n                            <Collapse in={true} timeout=\"auto\" unmountOnExit>\n                              <List component=\"div\" disablePadding>\n                                {app.childApps.map(app => {\n                                  return (\n                                    <ListItem\n                                      button\n                                      className={props.classes.nested}\n                                      key={app.ApplicationID}\n                                    >\n                                      <Checkbox\n                                        checked={Boolean(\n                                          app.IsPublic || app.ApplicationRoleID\n                                        )}\n                                        disabled={Boolean(app.IsPublic)}\n                                        onChange={() => {\n                                          this.modifyRoleApps(\n                                            props.selectedRoleID,\n                                            app.ApplicationID,\n                                            app.ApplicationRoleID\n                                          );\n                                        }}\n                                      />\n                                      <ListItemIcon>\n                                        <Icon color=\"primary\">{app.Icon}</Icon>\n                                      </ListItemIcon>\n                                      <ListItemText\n                                        primary={\n                                          app.Application +\n                                          (app.IsPublic ? \" (PUBLIC) \" : \"\")\n                                        }\n                                      />\n                                    </ListItem>\n                                  );\n                                })}\n                              </List>\n                            </Collapse>\n                          </React.Fragment>\n                        );\n                      } else {\n                        return (\n                          <ListItem button key={app.ApplicationID}>\n                            <Checkbox\n                              checked={Boolean(\n                                app.IsPublic || app.ApplicationRoleID\n                              )}\n                              disabled={Boolean(app.IsPublic)}\n                              onChange={() =>\n                                this.modifyRoleApps(\n                                  props.selectedRoleID,\n                                  app.ApplicationID,\n                                  app.ApplicationRoleID\n                                )\n                              }\n                            />\n                            <ListItemIcon>\n                              <Icon color=\"primary\">{app.Icon}</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                              primary={\n                                app.Application +\n                                (app.IsPublic ? \" (PUBLIC) \" : \"\")\n                              }\n                            />\n                          </ListItem>\n                        );\n                      }\n                    } else return null;\n                  })}\n                </div>\n              </List>\n            </React.Fragment>\n          ) : (\n            <CircularProgress />\n          )}\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AppsManagement);\n","import {\n  Avatar,\n  Card,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Icon,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from \"@material-ui/core\";\nimport red from \"@material-ui/core/colors/red\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Widgets from \"@material-ui/icons/Widgets\";\nimport React, { Component } from \"react\";\n\nconst styles = theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  progress: {\n    margin: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n});\n\nclass AppsManagement extends Component {\n  state = {\n    rolesWidgets: [],\n    loadingWidgets: false\n  };\n\n  fetchRolesWidgets(RoleID) {\n    var url = `${process.env.REACT_APP_APIURL}security/rolesWidgets/${RoleID}`;\n    this.setState({ loadingWidgets: true });\n    this.props.Auth.AuthenticatedServerCall(url, \"GET\")\n      .then(rolesWidgets => {\n        let tempApps = rolesWidgets.filter(\n          app => app.ParentID && app.ParentID === -1\n        );\n        tempApps.forEach(appGroup => {\n          let appsForGroup = rolesWidgets.filter(app => {\n            return app.ParentID === appGroup.ApplicationID;\n          });\n          if (appsForGroup.length > 0) {\n            appGroup.ShowInNavigationTree = true;\n            appGroup.childApps = appsForGroup;\n          } else {\n            appGroup.ShowInNavigationTree = false; //empty group no need to display\n          }\n        });\n        //---add all other apps (with no parent)\n        tempApps.push(\n          ...rolesWidgets.filter(app => !app.ParentID || app.ParentID === null)\n        );\n        this.setState({\n          rolesWidgets: tempApps.sort(\n            (appA, appB) => appA.AppOrder - appB.AppOrder\n          ),\n          loadingWidgets: false\n        });\n      })\n      .catch(error => this.setState({ error, loadingWidgets: false }));\n  }\n\n  modifyRoleWidgets(RoleID, WidgetID, WidgetRoleID) {\n    this.setState({ loadingWidgets: true });\n    var url = `${process.env.REACT_APP_APIURL}security/modifyRoleWidgets`;\n    this.props.Auth.AuthenticatedServerCall(url, \"POST\", {\n      RoleID: RoleID,\n      WidgetID: WidgetID,\n      WidgetRoleID: WidgetRoleID\n    })\n      .then(() => this.fetchRolesWidgets(this.props.selectedRoleID))\n      .catch(error => {\n        this.setState({\n          loadingWidgets: false\n        });\n        this.fetchRolesWidgets(this.props.selectedRoleID);\n      });\n  }\n\n  componentDidUpdate(prevProp) {\n    if (prevProp.selectedRoleID !== this.props.selectedRoleID) {\n      if (this.props.selectedRoleID < 0) {\n        this.setState({\n          rolesWidgets: []\n        });\n        return;\n      }\n      if (this.props.selectedRoleID && this.props.selectedRoleID >= 0)\n        this.fetchRolesWidgets(this.props.selectedRoleID);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.selectedRoleID >= 0) {\n      this.fetchRolesWidgets(this.props.selectedRoleID);\n    }\n  }\n\n  render() {\n    const props = this.props;\n    return (\n      <React.Fragment>\n        <Card style={{ height: \"100%\", overflow: \"Auto\" }}>\n          {!props.selectedRoleID ? (\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"Apps\" className={props.classes.avatar}>\n                  R\n                </Avatar>\n              }\n              title=\"Please Select a Role to view/amend accessible Widgets\"\n            />\n          ) : !props.loadingWidgets ? (\n            <React.Fragment>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"Widgets\" className={props.classes.avatar}>\n                    <Widgets />\n                  </Avatar>\n                }\n                title=\"You can tune accessible widgets for the roles\"\n                subheader=\"Please note Public widgets are accessible for everyone\"\n              />\n              <List>\n                <div>\n                  {this.state.rolesWidgets.map(app => {\n                    return (\n                      <ListItem\n                        button\n                        className={props.classes.nested}\n                        key={app.WidgetID}\n                      >\n                        <Checkbox\n                          checked={Boolean(app.IsPublic || app.WidgetRoleID)}\n                          disabled={Boolean(app.IsPublic)}\n                          onChange={() => {\n                            this.modifyRoleWidgets(\n                              props.selectedRoleID,\n                              app.WidgetID,\n                              app.WidgetRoleID\n                            );\n                          }}\n                        />\n                        <ListItemIcon>\n                          <Icon color=\"primary\">{app.Icon}</Icon>\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            app.Name + (app.IsPublic ? \" (PUBLIC) \" : \"\")\n                          }\n                        />\n                      </ListItem>\n                    );\n                  })}\n                </div>\n              </List>\n            </React.Fragment>\n          ) : (\n            <CircularProgress />\n          )}\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AppsManagement);\n","import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../Contexts/AuthContext\";\nimport {\n  LogiTable,\n  TableColumn,\n  rowActionsAndStates,\n  toolbarActionsAndState,\n  LogiStandardToolbar\n} from \"../Components/logi-table\"; //\"logi-table\";\nimport { StandardActions } from \"../Components/logi-table/StandardActions\";\nimport { Tabs, Tab, makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport Apps from \"@material-ui/icons/Apps\";\nimport Widgets from \"@material-ui/icons/Widgets\";\nimport RolesAppManagement from \"./RolesAppManagement\";\nimport RolesWidgetManagement from \"./RolesWidgetManagement\";\n\ninterface IRolesProps {}\n\nconst Roles: React.FunctionComponent<IRolesProps> = function(props) {\n  const [roles, setRoles] = useState();\n  const [isLoadingRoles, setIsLoadingRoles] = useState(false);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  //const [selectedRoleID, setSelectedRoleID] = useState();\n  const Auth: any = useAuth();\n  useEffect(() => {\n    async function fetchRoles() {\n      setIsLoadingRoles(true);\n      //sending -1 as userID in order to get all Roles\n      var url = `${process.env.REACT_APP_APIURL}security/roles/-1`;\n      let roles = await Auth.AuthenticatedServerCall(url, \"GET\");\n      console.log(\"fetch finished\");\n      setRoles(roles);\n      setIsLoadingRoles(false);\n    }\n    fetchRoles();\n  }, [Auth, refreshTrigger]);\n\n  async function insertRole(newData: any) {\n    try {\n      if (!newData.Role || !newData.Description) {\n        return Promise.reject(\"Please fill all required fields\");\n      }\n      var url = `${process.env.REACT_APP_APIURL}security/roles`;\n\n      await Auth.AuthenticatedServerCall(url, \"POST\", {\n        Insert: ` (Role,Description,createdBy,CreatedAt)  SELECT '${newData.Role.trim()}' ,\n        '${newData.Description.trim()}'\n      , ${Auth.LoggedInUserID}, datetime(\"now\")`\n      });\n      return true;\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n\n  async function deleteRole(RoleID: any) {\n    try {\n      var url = `${process.env.REACT_APP_APIURL}security/roles`;\n      await Auth.AuthenticatedServerCall(url, \"DELETE\", { RoleID: RoleID });\n      return true;\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n\n  const columns: TableColumn[] = [\n    {\n      header: \"Actions\",\n      accessor: \"ActionColumnOne\",\n      dataType: \"ActionColumn\",\n      viewComponent: (row: any, rowAsAndSs: rowActionsAndStates) => {\n        return (\n          <>\n            {/* <Checkbox\n              checked={selectedRoleID === row.RoleID}\n              onClick={() => {\n                if (selectedRoleID === row.RoleID) setSelectedRoleID(undefined);\n                else setSelectedRoleID(row.RoleID);\n              }}\n            /> */}\n            <StandardActions\n              {...rowAsAndSs}\n              expandComp={<RolesDetail selectedRoleID={row.RoleID} />}\n              deleteRecord={async () => {\n                if (\n                  window.confirm(\n                    `Are you sure you want to delete ${row.Role} ?`\n                  )\n                ) {\n                  setIsLoadingRoles(true);\n                  await deleteRole(row.RoleID);\n                  setRefreshTrigger(refreshTrigger ? refreshTrigger : 0 + 1);\n                  setIsLoadingRoles(false);\n                }\n              }}\n            />\n          </>\n        );\n      }\n    },\n    {\n      header: \"RoleID\",\n      accessor: \"RoleID\",\n      dataType: \"Number\",\n      hidden: true,\n      readOnly: true\n    },\n    {\n      header: \"Role\",\n      accessor: \"Role\",\n      dataType: \"String\"\n    },\n    {\n      header: \"Description\",\n      accessor: \"Description\",\n      dataType: \"String\"\n    },\n    {\n      header: \"CreatedAt\",\n      accessor: \"CreatedAt\",\n      dataType: \"DateTime\",\n      readOnly: true\n    }\n  ];\n  return (\n    <>\n      <LogiTable\n        isRemoteLoading={isLoadingRoles}\n        dense={true}\n        allowSort={true}\n        columns={columns}\n        keyAccessor=\"RoleID\"\n        data={roles}\n        //allowSelection={true}\n        tableToolbar={(actionsAndStates: toolbarActionsAndState) => {\n          return (\n            <LogiStandardToolbar\n              actionsAndStates={actionsAndStates}\n              title={\"Roles\"}\n              insertNewRecord={async recordData => {\n                try {\n                  setIsLoadingRoles(true);\n                  const newData: any = actionsAndStates.insertedRecordData();\n                  await insertRole(newData);\n                  setRefreshTrigger(refreshTrigger ? refreshTrigger : 0 + 1);\n                  actionsAndStates.discardInsertMode();\n                  setIsLoadingRoles(false);\n                } catch (exception) {\n                  console.log(exception);\n                  alert(\"something went wrong, trying to save the data\");\n                }\n              }}\n            />\n          );\n        }}\n      />\n    </>\n  );\n};\n\nexport default Roles;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    tabsRoot: {\n      borderBottom: \"1px solid #e8e8e8\"\n    }\n  })\n);\n\nfunction RolesDetail(props: any) {\n  const Auth: any = useAuth();\n  const classes = useStyles();\n  const [selectedTab, setSelectedTab] = useState(0);\n  return (\n    <>\n      <Tabs\n        value={selectedTab}\n        classes={{ root: classes.tabsRoot }}\n        onChange={(event, value) => {\n          setSelectedTab(value);\n        }}\n      >\n        <Tab icon={<Apps />} />\n        <Tab icon={<Widgets />} />\n      </Tabs>\n      {selectedTab === 0 && (\n        <RolesAppManagement selectedRoleID={props.selectedRoleID} Auth={Auth} />\n      )}\n      {selectedTab === 1 && (\n        <RolesWidgetManagement\n          selectedRoleID={props.selectedRoleID}\n          Auth={Auth}\n        />\n      )}\n    </>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z\"\n}), 'Apps');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13 13v8h8v-8h-8zM3 21h8v-8H3v8zM3 3v8h8V3H3zm13.66-1.31L11 7.34 16.66 13l5.66-5.66-5.66-5.65z\"\n}), 'Widgets');\n\nexports.default = _default;","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { LogiTableHeader } from \"./LogiTableHeader\";\nimport { LogiDataRow, rowActionsAndStates } from \"./LogiDataRow\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport * from \"./LogiDataRow\";\nexport * from \"./LogiTableToolbar\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3)\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 750\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    },\n    progress: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  })\n);\n\nexport type Order = \"asc\" | \"desc\";\nexport type DataType =\n  | \"String\"\n  | \"Number\"\n  | \"Date\"\n  | \"DateTime\"\n  | \"Time\"\n  | \"Boolean\"\n  | \"ActionColumn\";\n\nexport interface TableColumn {\n  header: string;\n  /**\n   * Used to access the data filed i.e. dataRow[accessor]\n   * Please note if this value is available then it will be used to create the key for table cells\n   * specially in case of action columns set this to a dummy value\n   * @type {string}\n   * @memberof TableColumn\n   */\n  accessor: string;\n  dataType: DataType;\n  readOnly?: boolean;\n  hidden?: boolean;\n  viewComponent?: (\n    rowData: any,\n    rowActionsAndStates: rowActionsAndStates\n  ) => React.ReactElement;\n}\n\nexport interface toolbarActionsAndState {\n  /**\n   *Call this function to put the row in edit mode status\n   * @memberof toolbarActionsAndState\n   */\n  enterInsertMode: () => void;\n\n  /**\n   *Call this function to cancel the insert mode and return the row to reset status\n   * @memberof toolbarActionsAndState\n   */\n  discardInsertMode: () => void;\n\n  /**\n   *true if the table is in insert mode\n   * @type {boolean}\n   * @memberof toolbarActionsAndState\n   */\n  insertMode: boolean;\n  /**\n   * newly insert record data\n   * @type {*}\n   * @memberof toolbarActionsAndState\n   */\n  insertedRecordData: () => any;\n}\n\nexport interface LogiTableProps {\n  keyAccessor: string;\n  columns: Array<TableColumn>;\n  data: Array<{}> | (() => Promise<Array<{}>>);\n  allowSelection?: boolean;\n  showSelectAll?: boolean;\n  allowSort?: boolean;\n  customSortFunction?: (\n    event: React.MouseEvent<unknown>,\n    property: TableColumn\n  ) => void;\n  onSelectAllClick?: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => void;\n  dense?: boolean;\n  /**\n   * increase the counter from zero to refresh\n   * The value must change if you want the remote data to be re fetched\n   * @memberof LogiTableProps\n   */\n  refreshData?: number;\n  /**\n   * this component will be shown on top of the table\n   * you can import and use the LogiTableToolbar as standard if you want or create your own\n   * @memberof LogiTableProps\n   */\n  tableToolbar?: (\n    rowActionsAndStates: toolbarActionsAndState\n  ) => React.ReactElement;\n  /**\n   * Set value to show loading indicator (useful when data is being managed from outside)\n   * @type {boolean}\n   * @memberof LogiTableProps\n   */\n  isRemoteLoading?: boolean;\n}\n\nexport function LogiTable(props: LogiTableProps) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([{}]);\n  const [isError, setIsError] = useState(false);\n  const [addingNewRecord, setAddingNewRecord] = useState(false);\n  let newlyAddedRow: any = undefined;\n\n  useEffect(() => {\n    console.log(\"setting data\");\n    //get data if passed as promise\n    if (typeof props.data === \"function\") {\n      let fetchData: () => Promise<Array<{}>> = props.data as () => Promise<\n        Array<{}>\n      >;\n      setIsLoading(true);\n      fetchData()\n        .then((fetchedData: Array<{}>) => {\n          setData(fetchedData);\n          setIsLoading(false);\n        })\n        .catch((c: any) => {\n          console.log(\"error: \" + c);\n          setIsLoading(false);\n          setIsError(true);\n        });\n    } else {\n      setData(props.data);\n      //setIsLoading(false);\n    }\n  }, [props.data, props.refreshData]);\n\n  function handleChangePage(_event: unknown, newPage: number) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event: React.ChangeEvent<HTMLInputElement>) {\n    setRowsPerPage(+event.target.value);\n  }\n\n  const emptyRows =\n    rowsPerPage -\n    (data ? Math.min(rowsPerPage, data.length - page * rowsPerPage) : 0);\n\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <div className={classes.tableWrapper}>\n            {props.tableToolbar\n              ? props.tableToolbar({\n                  enterInsertMode: () => {\n                    setAddingNewRecord(true);\n                  },\n                  discardInsertMode: () => {\n                    setAddingNewRecord(false);\n                  },\n                  insertMode: addingNewRecord,\n                  insertedRecordData: () => {\n                    return newlyAddedRow;\n                  }\n                })\n              : null}\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={props.dense ? \"small\" : \"medium\"}\n            >\n              <LogiTableHeader {...props} />\n              <TableBody>\n                {addingNewRecord && (\n                  <LogiDataRow\n                    key={-1}\n                    row={() => {\n                      let newRecord: any = {};\n                      props.columns\n                        .filter(c => c.dataType !== \"ActionColumn\")\n                        .forEach((col: TableColumn) => {\n                          newRecord[col.accessor] = \"\";\n                        });\n                      return newRecord;\n                    }}\n                    index={-1}\n                    columns={props.columns}\n                    allowSelection={false}\n                    insertMode={true}\n                    setEditedRow={(row: any) => {\n                      newlyAddedRow = row;\n                    }}\n                  />\n                )}\n                {props.isRemoteLoading || isLoading || isError ? (\n                  <TableRow>\n                    <TableCell\n                      colSpan={\n                        props.columns.filter((c: TableColumn) => !c.hidden)\n                          .length\n                      }\n                      rowSpan={rowsPerPage}\n                      align={\"center\"}\n                    >\n                      <div>\n                        {props.isRemoteLoading || isLoading ? (\n                          <CircularProgress\n                            size={30}\n                            className={classes.progress}\n                          />\n                        ) : (\n                          \"Failed to load data!\"\n                        )}\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  data && //making sure data is available\n                  data.length > 0 &&\n                  data\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row: any, index: number) => {\n                      return (\n                        <LogiDataRow\n                          key={index}\n                          row={row}\n                          index={index}\n                          columns={props.columns}\n                          allowSelection={props.allowSelection}\n                        />\n                      );\n                    })\n                )}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell\n                      colSpan={\n                        props.columns.filter((c: TableColumn) => !c.hidden)\n                          .length\n                      }\n                    />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={data ? data.length : 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n"],"sourceRoot":""}