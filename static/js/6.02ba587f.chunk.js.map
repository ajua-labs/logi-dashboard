{"version":3,"sources":["framework/Components/logi-table/LogiDataRow.tsx","framework/Components/logi-table/EditableTableCell.tsx","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js"],"names":["useStyles","makeStyles","theme","createStyles","rowStyle","&:nth-of-type(odd)","backgroundColor","palette","background","default","LogiDataRow","props","classes","columns","index","labelId","concat","_useState","useState","_useState2","Object","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","editMode","setEditMode","_useState3","row","_useState4","setRow","changeValue","value","columnName","editedRow","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","setEditedRow","useEffect","rowStateAndAction","enterEditMode","discardEditMode","insertMode","oldData","newData","setData","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_3__","className","allowSelection","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_4__","padding","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","checked","inputProps","aria-labelledby","filter","c","hidden","map","colIndex","key","accessor","header","component","id","scope","dataType","viewComponent","_EditableTableCell__WEBPACK_IMPORTED_MODULE_8__","column","newValue","dataRow","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1__","_date_io_moment__WEBPACK_IMPORTED_MODULE_2__","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_6___default","EditableTableCell","readOnly","onDateInputChange","date","toISOString","utils","DateFnsUtils","autoOk","onChange","rightArrowIcon","leftArrowIcon","e","target","getBool","type","Fragment","Date","toLocaleDateString","toLocaleString","toLocaleTimeString","toLowerCase","Tablelvl2Context","createContext","TableContext","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_Table_Tablelvl2Context__WEBPACK_IMPORTED_MODULE_6__","TableRow","forwardRef","ref","_props$component","Component","_props$hover","hover","_props$selected","selected","other","tablelvl2","useContext","root","variant","head","footer","color","display","verticalAlign","outline","&$selected","&$hover:hover","name","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","_utils_helpers__WEBPACK_IMPORTED_MODULE_6__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_7__","_Table_TableContext__WEBPACK_IMPORTED_MODULE_8__","_Table_Tablelvl2Context__WEBPACK_IMPORTED_MODULE_9__","TableCell","_props$align","align","paddingProp","scopeProp","sizeProp","size","sortDirection","table","ariaSort","body","aria-sort","typography","body2","borderBottom","divider","textAlign","&:last-child","paddingRight","text","secondary","fontSize","pxToRem","lineHeight","fontWeight","fontWeightMedium","primary","fontWeightRegular","sizeSmall","&$paddingCheckbox","width","paddingLeft","& > *","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify"],"mappings":"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","file":"static/js/6.02ba587f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { TableColumn } from \"./index\";\nimport { Checkbox } from \"@material-ui/core\";\nimport EditableTableCell from \"./EditableTableCell\";\n\n/**\n *\n *\n * @export\n * @interface rowActionsAndStates\n */\nexport interface rowActionsAndStates {\n  /**\n   *Call this function to put the row in edit mode status\n   * @memberof rowActionsAndStates\n   */\n  enterEditMode: () => void;\n\n  /**\n   *Call this function to cancel the edit mode and return the row to reset status\n   * @memberof rowActionsAndStates\n   */\n  discardEditMode: () => void;\n\n  /**\n   *true if the row is in edit mode\n   * @type {boolean}\n   * @memberof rowActionsAndStates\n   */\n  editMode: boolean;\n  /**\n   * Original row data\n   * @type {*}\n   * @memberof rowActionsAndStates\n   */\n  oldData: any;\n  /**\n   * New Row Data (if it's modified)\n   * @type {*}\n   * @memberof rowActionsAndStates\n   */\n  newData: any;\n  /**\n   * Use this to set the row Data for example when a row is edited successfully and you want to replace the data\n   * without refreshing the whole content of the grid\n   * Note that this will set the the data in state and not whole table prop. i.e. if the page changes the row will reset\n   * BETTER OPTION IS TO REFRESH THE DATA FOR THE WHOLE GRID\n   * @memberof rowActionsAndStates\n   */\n  setData: (data: any) => void;\n  /**\n   * True when the record is a newly added record (not added yet!)\n   * @type {boolean}\n   * @memberof rowActionsAndStates\n   */\n  insertMode: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rowStyle: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  })\n);\n\nexport function LogiDataRow(props: {\n  columns: Array<TableColumn>;\n  index: number;\n  allowSelection?: boolean;\n  row: any;\n  insertMode?: boolean;\n  /**\n   * will be called everytime the record data is modified\n   */\n  setEditedRow?: (row: any) => void;\n}) {\n  const classes = useStyles();\n  const { columns, index } = props;\n  const labelId = `enhanced-table-checkbox-${index}`;\n  const [editMode, setEditMode] = useState(false);\n\n  const [row, setRow] = useState(props.row);\n  useEffect(() => {\n    setRow(props.row);\n  }, [props.row]);\n\n  function changeValue(value: any, columnName: string) {\n    var editedRow = { ...row };\n    editedRow[columnName] = value;\n    setRow(editedRow);\n    props.setEditedRow && props.setEditedRow(editedRow);\n  }\n  function resetRow() {\n    setRow(props.row);\n    props.setEditedRow && props.setEditedRow(props.row);\n  }\n\n  let rowStateAndAction: rowActionsAndStates = {\n    enterEditMode: () => {\n      setEditMode(true);\n    },\n    discardEditMode: () => {\n      setEditMode(false);\n      resetRow();\n    },\n    editMode: editMode || (props.insertMode ? props.insertMode : false),\n    oldData: props.row,\n    newData: row, // this will be modified data (in case user changes values)\n    setData: (newData: any) => {\n      setRow(newData);\n    },\n    insertMode: props.insertMode ? props.insertMode : false\n  };\n\n  return (\n    <TableRow className={classes.rowStyle}>\n      {props.allowSelection ? (\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked={false}\n            inputProps={{ \"aria-labelledby\": labelId }}\n          />\n        </TableCell>\n      ) : null}\n      {columns\n        .filter((c: TableColumn) => !c.hidden)\n        .map((c: TableColumn, colIndex: number) => {\n          if (colIndex === 0) {\n            return (\n              <TableCell\n                key={`${c.accessor ? c.accessor : c.header}${index}`}\n                component=\"th\"\n                id={labelId}\n                scope=\"row\"\n                padding=\"default\"\n              >\n                {props.insertMode &&\n                c.dataType === \"ActionColumn\" ? null : c.viewComponent ? (\n                  c.viewComponent(row, rowStateAndAction)\n                ) : (\n                  <EditableTableCell\n                    column={c}\n                    changeValue={(newValue: any) =>\n                      changeValue(newValue, c.accessor)\n                    }\n                    dataRow={row}\n                    editMode={editMode || props.insertMode}\n                  />\n                )}\n              </TableCell>\n            );\n          } else\n            return (\n              <TableCell key={`${c.accessor ? c.accessor : c.header}${index}`}>\n                {props.insertMode &&\n                c.dataType === \"ActionColumn\" ? null : c.viewComponent ? (\n                  c.viewComponent(row, rowStateAndAction)\n                ) : (\n                  <EditableTableCell\n                    column={c}\n                    changeValue={(newValue: any) =>\n                      changeValue(newValue, c.accessor)\n                    }\n                    dataRow={row}\n                    editMode={\n                      editMode || (props.insertMode ? props.insertMode : false)\n                    }\n                  />\n                )}\n              </TableCell>\n            );\n        })}\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/moment\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider\n} from \"@material-ui/pickers\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ArrowForward from \"@material-ui/icons/ArrowForward\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport { TableColumn } from \"./index\";\n\ninterface IEditableTableCell {\n  column: TableColumn;\n  editMode?: boolean;\n  dataRow: any;\n  changeValue: (newValue: any) => void;\n}\n\nfunction EditableTableCell(props: IEditableTableCell) {\n  if (props.editMode && !props.column.readOnly) {\n    const onDateInputChange = (date: any) =>\n      props.changeValue(date.toISOString());\n    switch (props.column.dataType) {\n      case \"Date\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              autoOk={true}\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n              rightArrowIcon={<ArrowForward />}\n              leftArrowIcon={<ArrowBack />}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"Time\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <TimePicker\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"DateTime\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n              rightArrowIcon={<ArrowForward />}\n              leftArrowIcon={<ArrowBack />}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"Boolean\":\n        return (\n          <Checkbox\n            onChange={e => {\n              props.changeValue(e.target.checked);\n            }}\n            checked={getBool()}\n          />\n        );\n      case \"Number\":\n      case \"String\":\n      default:\n        return (\n          <TextField\n            type={props.column.dataType === \"Number\" ? \"number\" : \"text\"}\n            value={props.dataRow[props.column.accessor]}\n            onChange={e => props.changeValue(e.target.value)}\n          />\n        );\n    }\n  } //read only mode\n  else {\n    switch (props.column.dataType) {\n      case \"Date\":\n        return (\n          <React.Fragment>\n            {new Date(\n              props.dataRow[props.column.accessor]\n            ).toLocaleDateString()}\n          </React.Fragment>\n        );\n      case \"DateTime\":\n        return (\n          <React.Fragment>\n            {new Date(props.dataRow[props.column.accessor]).toLocaleString()}\n          </React.Fragment>\n        );\n      case \"Time\":\n        return (\n          <React.Fragment>\n            {new Date(\n              props.dataRow[props.column.accessor]\n            ).toLocaleTimeString()}\n          </React.Fragment>\n        );\n      case \"Boolean\":\n        return <Checkbox checked={getBool()} />;\n      default:\n        return (\n          <React.Fragment>\n            {props.dataRow[props.column.accessor]}\n          </React.Fragment>\n        );\n    }\n  }\n\n  function getBool(): boolean | undefined {\n    switch (typeof props.dataRow[props.column.accessor]) {\n      case \"boolean\":\n        return props.dataRow[props.column.accessor];\n      case \"number\":\n        return props.dataRow[props.column.accessor] > 0 ? true : false;\n      case \"string\":\n        return (props.dataRow[\n          props.column.accessor\n        ] as string).toLowerCase() === \"true\"\n          ? true\n          : false;\n      default:\n        //a lot of times the type seems to be undefined!\n        return props.dataRow[props.column.accessor];\n    }\n  }\n}\n\nexport default EditableTableCell;\n","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\nexport default Tablelvl2Context;","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\nexport default TableContext;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 'none',\n      '&$selected': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.04)' // grey[100]\n        : 'rgba(255, 255, 255, 0.08)'\n      },\n      '&$hover:hover': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.07)' // grey[200]\n        : 'rgba(255, 255, 255, 0.14)'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tr' : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && [tablelvl2.variant === 'head' && classes.head, tablelvl2.variant === 'footer' && classes.footer], hover && classes.hover, selected && classes.selected)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: '14px 40px 14px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      }\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      lineHeight: theme.typography.pxToRem(21),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary,\n      fontWeight: theme.typography.fontWeightRegular\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `padding=\"dense\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0px 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    }\n  };\n};\nvar TableCell = React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var Component;\n\n  if (component) {\n    Component = component;\n  } else {\n    Component = tablelvl2 && tablelvl2.variant === 'head' ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && tablelvl2 && tablelvl2.variant === 'head') {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, (variant ? variant === 'head' : tablelvl2 && tablelvl2.variant === 'head') && classes.head, (variant ? variant === 'body' : tablelvl2 && tablelvl2.variant === 'body') && classes.body, (variant ? variant === 'footer' : tablelvl2 && tablelvl2.variant === 'footer') && classes.footer, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    \"aria-sort\": ariaSort,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`normal`).\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['head', 'body', 'footer'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);"],"sourceRoot":""}