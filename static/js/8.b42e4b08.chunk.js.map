{"version":3,"sources":["framework/Components/logi-table/LogiDataRow.tsx","framework/Components/logi-table/LogiTableToolbar.tsx","framework/Components/logi-table/EditableTableCell.tsx","framework/Components/logi-table/LogiTableHeader.tsx","framework/Components/logi-table/StandardActions.tsx","framework/Administration/Widgets.tsx","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/Delete.js","framework/Components/logi-table/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","rowStyle","&:nth-of-type(odd)","backgroundColor","palette","background","default","LogiDataRow","props","classes","columns","index","labelId","concat","_useState","useState","_useState2","Object","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","editMode","setEditMode","_useState3","_useState4","isExpanded","setIsExpanded","_useState5","_useState6","rowDetails","setRowDetails","_useState7","row","_useState8","setRow","changeValue","value","columnName","editedRow","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","setEditedRow","useEffect","rowStateAndAction","enterEditMode","discardEditMode","insertMode","oldData","newData","setData","expand","detailsComp","collapse","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_3__","className","allowSelection","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_4__","padding","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","checked","inputProps","aria-labelledby","filter","c","hidden","map","colIndex","key","accessor","header","component","id","scope","dataType","viewComponent","_EditableTableCell__WEBPACK_IMPORTED_MODULE_8__","column","newValue","dataRow","colSpan","length","__webpack_require__","r","__webpack_exports__","d","LogiTableToolbar","LogiStandardToolbar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_7___default","root","paddingLeft","spacing","paddingRight","spacer","flex","actions","color","text","secondary","title","undefined","insertNewRecord","actionsAndStates","onClick","insertedRecordData","discardInsertMode","enterInsertMode","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1__","_date_io_moment__WEBPACK_IMPORTED_MODULE_2__","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_ArrowForward__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_6___default","EditableTableCell","readOnly","onDateInputChange","date","toISOString","utils","DateFnsUtils","autoOk","onChange","rightArrowIcon","leftArrowIcon","e","target","getBool","type","Date","toLocaleDateString","toLocaleString","toLocaleTimeString","toLowerCase","LogiTableHeader","onSelectAllClick","_React$useState","React","_React$useState2","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","order","setOrder","_React$useState3","_React$useState4","orderBy","setOrderBy","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_2__","showSelectAll","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_6__","aria-label","col","sortDirection","allowSort","_material_ui_core_TableSortLabel__WEBPACK_IMPORTED_MODULE_5__","active","direction","clickedColumn","event","customSortFunction","isDesc","StandardActions","EditComp","DeleteComp","ExpandDetail","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_1__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_Save__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_ExpandLess__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_ExpandLess__WEBPACK_IMPORTED_MODULE_11___default","progress","marginLeft","marginRight","actionInProgress","size","expandComp","saveChanges","deleteRecord","CommitButton","CancelButton","EditButton","DeleteButton","Widgets","console","log","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","widgets","setWidgets","isLoadingWidgets","setIsLoadingWidgets","refreshTrigger","setRefreshTrigger","Auth","useAuth","insertWidget","_x","_insertWidget","apply","this","arguments","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_Ashkan_Desktop_LogiPro_LogiDash_2019_06_05_dash_web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee4","url","wrap","_context4","prev","next","process","AuthenticatedServerCall","Insert","Name","trim","Component","Properties","Description","IsPublic","Value2SQLValue","get","abrupt","t0","stop","deleteWidget","_x2","_deleteWidget","_callee5","WidgetID","_context5","sent","_fetchRoles","_callee","roles","_context","fetchRoles","rowAsAndSs","react__WEBPACK_IMPORTED_MODULE_3___default","_Components_logi_table_StandardActions__WEBPACK_IMPORTED_MODULE_6__","assign","_callee2","_context2","window","confirm","updateStatement","substring","Update","then","catch","error","Promise","resolve","_Components_logi_table__WEBPACK_IMPORTED_MODULE_5__","isRemoteLoading","dense","keyAccessor","data","tableToolbar","_ref2","_callee3","recordData","_context3","alert","_x3","_interopRequireDefault","defineProperty","exports","_react","_default","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","LogiTable","page","setPage","rowsPerPage","setRowsPerPage","isLoading","setIsLoading","_useState9","_useState10","isError","setIsError","_useState11","_useState12","addingNewRecord","setAddingNewRecord","newlyAddedRow","fetchData","fetchedData","refreshData","emptyRows","Math","min","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_12__","MomentUtils","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_4__","_LogiTableHeader__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_5__","_LogiDataRow__WEBPACK_IMPORTED_MODULE_11__","newRecord","forEach","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_6__","rowSpan","align","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","slice","style","height","_material_ui_core_TablePagination__WEBPACK_IMPORTED_MODULE_7__","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","_event","newPage","onChangeRowsPerPage"],"mappings":"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","file":"static/js/8.b42e4b08.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { TableColumn } from \"./index\";\nimport { Checkbox } from \"@material-ui/core\";\nimport EditableTableCell from \"./EditableTableCell\";\n\n/**\n *\n *\n * @export\n * @interface rowActionsAndStates\n */\nexport interface rowActionsAndStates {\n  /**\n   *Call this function to put the row in edit mode status\n   * @memberof rowActionsAndStates\n   */\n  enterEditMode: () => void;\n\n  /**\n   *Call this function to cancel the edit mode and return the row to reset status\n   * @memberof rowActionsAndStates\n   */\n  discardEditMode: () => void;\n\n  /**\n   *true if the row is in edit mode\n   * @type {boolean}\n   * @memberof rowActionsAndStates\n   */\n  editMode: boolean;\n  /**\n   * Original row data\n   * @type {*}\n   * @memberof rowActionsAndStates\n   */\n  oldData: any;\n  /**\n   * New Row Data (if it's modified)\n   * @type {*}\n   * @memberof rowActionsAndStates\n   */\n  newData: any;\n  /**\n   * Use this to set the row Data for example when a row is edited successfully and you want to replace the data\n   * without refreshing the whole content of the grid\n   * Note that this will set the the data in state and not whole table prop. i.e. if the page changes the row will reset\n   * BETTER OPTION IS TO REFRESH THE DATA FOR THE WHOLE GRID\n   * @memberof rowActionsAndStates\n   */\n  setData: (data: any) => void;\n  /**\n   * True when the record is a newly added record (not added yet!)\n   * @type {boolean}\n   * @memberof rowActionsAndStates\n   */\n  insertMode: boolean;\n\n  /**\n   *True when the details panel is open\n   * @type {boolean}\n   * @memberof IStandardActionsAndStates\n   */\n  isExpanded: boolean;\n\n  /**\n   * call to expand the row with sent details\n   * @memberof rowActionsAndStates\n   */\n  expand: (detailsComp: React.ReactElement) => void;\n  /**\n   *Close the details panel\n   *\n   * @memberof IStandardActionsAndStates\n   */\n  collapse: () => any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rowStyle: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  })\n);\n\nexport function LogiDataRow(props: {\n  columns: Array<TableColumn>;\n  index: number;\n  allowSelection?: boolean;\n  row: any;\n  insertMode?: boolean;\n  /**\n   * will be called every time the record data is modified\n   */\n  setEditedRow?: (row: any) => void;\n}) {\n  const classes = useStyles();\n  const { columns, index } = props;\n  const labelId = `enhanced-table-checkbox-${index}`;\n  const [editMode, setEditMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [rowDetails, setRowDetails] = useState();\n  const [row, setRow] = useState(props.row);\n  useEffect(() => {\n    setRow(props.row);\n  }, [props.row]);\n\n  function changeValue(value: any, columnName: string) {\n    var editedRow = { ...row };\n    editedRow[columnName] = value;\n    setRow(editedRow);\n    props.setEditedRow && props.setEditedRow(editedRow);\n  }\n  function resetRow() {\n    setRow(props.row);\n    props.setEditedRow && props.setEditedRow(props.row);\n  }\n\n  let rowStateAndAction: rowActionsAndStates = {\n    enterEditMode: () => {\n      setEditMode(true);\n    },\n    discardEditMode: () => {\n      setEditMode(false);\n      resetRow();\n    },\n    editMode: editMode || (props.insertMode ? props.insertMode : false),\n    oldData: props.row,\n    newData: row, // this will be modified data (in case user changes values)\n    setData: (newData: any) => {\n      setRow(newData);\n    },\n    insertMode: props.insertMode ? props.insertMode : false,\n    isExpanded: isExpanded,\n    expand: detailsComp => {\n      setRowDetails(detailsComp);\n      setIsExpanded(true);\n    },\n    collapse: () => {\n      setIsExpanded(false);\n    }\n  };\n\n  return (\n    <>\n      <TableRow className={classes.rowStyle}>\n        {props.allowSelection ? (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              checked={false}\n              inputProps={{ \"aria-labelledby\": labelId }}\n            />\n          </TableCell>\n        ) : null}\n        {columns\n          .filter((c: TableColumn) => !c.hidden)\n          .map((c: TableColumn, colIndex: number) => {\n            if (colIndex === 0) {\n              return (\n                <TableCell\n                  key={`${c.accessor ? c.accessor : c.header}${index}`}\n                  component=\"th\"\n                  id={labelId}\n                  scope=\"row\"\n                  padding=\"default\"\n                >\n                  {props.insertMode &&\n                  c.dataType === \"ActionColumn\" ? null : c.viewComponent ? (\n                    c.viewComponent(row, rowStateAndAction)\n                  ) : (\n                    <EditableTableCell\n                      column={c}\n                      changeValue={(newValue: any) =>\n                        changeValue(newValue, c.accessor)\n                      }\n                      dataRow={row}\n                      editMode={editMode || props.insertMode}\n                    />\n                  )}\n                </TableCell>\n              );\n            } else\n              return (\n                <TableCell\n                  key={`${c.accessor ? c.accessor : c.header}${index}`}\n                >\n                  {props.insertMode &&\n                  c.dataType === \"ActionColumn\" ? null : c.viewComponent ? (\n                    c.viewComponent(row, rowStateAndAction)\n                  ) : (\n                    <EditableTableCell\n                      column={c}\n                      changeValue={(newValue: any) =>\n                        changeValue(newValue, c.accessor)\n                      }\n                      dataRow={row}\n                      editMode={\n                        editMode ||\n                        (props.insertMode ? props.insertMode : false)\n                      }\n                    />\n                  )}\n                </TableCell>\n              );\n          })}\n      </TableRow>\n      {isExpanded ? (\n        <TableRow>\n          <TableCell\n            colSpan={columns.filter((c: TableColumn) => !c.hidden).length}\n          >\n            {rowDetails}\n          </TableCell>\n        </TableRow>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Toolbar,\n  IconButton\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toolbarActionsAndState } from \"./index\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary,\n      flex: \"0 0 auto\"\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  })\n);\n\nexport const LogiTableToolbar = (props: {\n  title?: string;\n  actions?: React.ReactElement;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar className={classes.root}>\n      <div className={classes.title}>{props.title}</div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>{props.actions}</div>\n    </Toolbar>\n  );\n};\n\nexport const LogiStandardToolbar = (props: {\n  title: string;\n  actionsAndStates: toolbarActionsAndState;\n  insertNewRecord: (recordData: any) => void;\n}) => {\n  let actions: React.ReactElement = <></>;\n  if (props.insertNewRecord !== undefined) {\n    actions = !props.actionsAndStates.insertMode ? (\n      <IconButton\n        color=\"secondary\"\n        onClick={props.actionsAndStates.enterInsertMode}\n        title=\"Add Record\"\n      >\n        <AddIcon />\n      </IconButton>\n    ) : (\n      <>\n        <IconButton\n          onClick={() => {\n            props.insertNewRecord(props.actionsAndStates.insertedRecordData());\n          }}\n          title=\"Save changes\"\n        >\n          <SaveIcon />\n        </IconButton>\n        <IconButton\n          color=\"secondary\"\n          onClick={props.actionsAndStates.discardInsertMode}\n          title=\"Cancel changes\"\n        >\n          <CancelIcon />\n        </IconButton>\n      </>\n    );\n  }\n\n  return <LogiTableToolbar title={props.title} actions={actions} />;\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/moment\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider\n} from \"@material-ui/pickers\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ArrowForward from \"@material-ui/icons/ArrowForward\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport { TableColumn } from \"./index\";\n\ninterface IEditableTableCell {\n  column: TableColumn;\n  editMode?: boolean;\n  dataRow: any;\n  changeValue: (newValue: any) => void;\n}\n\nfunction EditableTableCell(props: IEditableTableCell) {\n  if (props.editMode && !props.column.readOnly) {\n    const onDateInputChange = (date: any) =>\n      props.changeValue(date.toISOString());\n    switch (props.column.dataType) {\n      case \"Date\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n              autoOk={true}\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n              rightArrowIcon={<ArrowForward />}\n              leftArrowIcon={<ArrowBack />}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"Time\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <TimePicker\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"DateTime\":\n        return (\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              value={props.dataRow[props.column.accessor]}\n              onChange={onDateInputChange}\n              rightArrowIcon={<ArrowForward />}\n              leftArrowIcon={<ArrowBack />}\n            />\n          </MuiPickersUtilsProvider>\n        );\n      case \"Boolean\":\n        return (\n          <Checkbox\n            onChange={e => {\n              props.changeValue(e.target.checked);\n            }}\n            checked={getBool()}\n          />\n        );\n      case \"Number\":\n      case \"String\":\n      default:\n        return (\n          <TextField\n            type={props.column.dataType === \"Number\" ? \"number\" : \"text\"}\n            value={props.dataRow[props.column.accessor]}\n            onChange={e => props.changeValue(e.target.value)}\n          />\n        );\n    }\n  } //read only mode\n  else {\n    switch (props.column.dataType) {\n      case \"Date\":\n        return (\n          <React.Fragment>\n            {new Date(\n              props.dataRow[props.column.accessor]\n            ).toLocaleDateString()}\n          </React.Fragment>\n        );\n      case \"DateTime\":\n        return (\n          <React.Fragment>\n            {new Date(props.dataRow[props.column.accessor]).toLocaleString()}\n          </React.Fragment>\n        );\n      case \"Time\":\n        return (\n          <React.Fragment>\n            {new Date(\n              props.dataRow[props.column.accessor]\n            ).toLocaleTimeString()}\n          </React.Fragment>\n        );\n      case \"Boolean\":\n        return <Checkbox checked={getBool()} />;\n      default:\n        return (\n          <React.Fragment>\n            {props.dataRow[props.column.accessor]}\n          </React.Fragment>\n        );\n    }\n  }\n\n  function getBool(): boolean | undefined {\n    switch (typeof props.dataRow[props.column.accessor]) {\n      case \"boolean\":\n        return props.dataRow[props.column.accessor];\n      case \"number\":\n        return props.dataRow[props.column.accessor] > 0 ? true : false;\n      case \"string\":\n        return (props.dataRow[\n          props.column.accessor\n        ] as string).toLowerCase() === \"true\"\n          ? true\n          : false;\n      default:\n        //a lot of times the type seems to be undefined!\n        return props.dataRow[props.column.accessor];\n    }\n  }\n}\n\nexport default EditableTableCell;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Order, TableColumn } from \"./index\";\n\nexport function LogiTableHeader(props: {\n  onSelectAllClick?: any;\n  columns: TableColumn[];\n  customSortFunction?: any;\n  allowSelection?: boolean;\n  showSelectAll?: boolean;\n  allowSort?: boolean;\n}) {\n  const { onSelectAllClick, columns } = props;\n\n  const [order, setOrder] = React.useState<Order>(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"\");\n\n  const createSortHandler = (clickedColumn: TableColumn) => (\n    event: React.MouseEvent<unknown>\n  ) => {\n    if (props.customSortFunction)\n      props.customSortFunction(event, clickedColumn);\n    else {\n      const isDesc = orderBy === clickedColumn.header && order === \"desc\";\n      setOrder(isDesc ? \"asc\" : \"desc\");\n      setOrderBy(clickedColumn.header);\n    }\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {props.allowSelection ? (\n          <TableCell padding=\"checkbox\">\n            {props.showSelectAll ? (\n              <Checkbox\n                //TODO: fix the checked state for select all\n                checked={true}\n                onChange={onSelectAllClick}\n                inputProps={{ \"aria-label\": \"Select all\" }}\n              />\n            ) : null}\n          </TableCell>\n        ) : null}\n        {columns.map(col =>\n          col.hidden ? null : (\n            <TableCell\n              key={col.accessor}\n              //align={col.dataType === 'Number' ? 'right' : 'left'}\n              //padding={col.disablePadding ? \"none\" : \"default\"}\n              sortDirection={orderBy === col.header ? order : false}\n            >\n              {props.allowSort && !(col.dataType === \"ActionColumn\") ? (\n                <TableSortLabel\n                  active={orderBy === col.header}\n                  direction={order}\n                  onClick={createSortHandler(col)}\n                >\n                  {col.header}\n                </TableSortLabel>\n              ) : (\n                col.header\n              )}\n            </TableCell>\n          )\n        )}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport { rowActionsAndStates } from \"./index\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  CircularProgress\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\n\nexport interface IStandardActionsAndStates extends rowActionsAndStates {\n  /**\n   *True when a delete or Save is in progress\n   *\n   * @type {boolean}\n   * @memberof IStandardActionsAndStates\n   */\n  actionInProgress?: boolean;\n  /**\n   * Will be fired when Save button is clicked,\n   * if exists Edit button will be displayed\n   * @memberof IStandardActionsAndStates\n   */\n  saveChanges?: () => any;\n  /**\n   *Will be fired when delete button is clicked\n   * if exists Delete icon will be displayed\n   * @memberof IStandardActionsAndStates\n   */\n  deleteRecord?: () => any;\n  /**\n   * The component that you expect to be displayed in details panel\n   *\n   * @type {React.ReactElement}\n   * @memberof IStandardActionsAndStates\n   */\n  expandComp?: React.ReactElement;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    progress: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  })\n);\n\nexport function StandardActions(props: IStandardActionsAndStates) {\n  const classes = useStyles();\n  if (props.actionInProgress) {\n    return <CircularProgress size={30} className={classes.progress} />;\n  }\n  if (props.editMode) {\n    return <EditComp {...props} />;\n  }\n  return (\n    <>\n      {props.expandComp !== undefined ? <ExpandDetail {...props} /> : null}\n      {props.saveChanges !== undefined ? <EditComp {...props} /> : null}\n      {props.deleteRecord !== undefined ? <DeleteComp {...props} /> : null}\n    </>\n  );\n}\n\nexport function EditComp(props: IStandardActionsAndStates) {\n  if (!props.editMode) {\n    return (\n      <EditButton\n        onClick={() => {\n          props.enterEditMode();\n        }}\n      />\n    );\n  } else {\n    return (\n      <>\n        <CommitButton\n          onClick={(e: any) => {\n            props.saveChanges && props.saveChanges();\n          }}\n        />\n        <CancelButton\n          onClick={() => {\n            props.discardEditMode();\n          }}\n        />\n      </>\n    );\n  }\n}\nexport function DeleteComp(props: IStandardActionsAndStates) {\n  return (\n    <DeleteButton onClick={() => props.deleteRecord && props.deleteRecord()} />\n  );\n}\n\nexport function ExpandDetail(props: IStandardActionsAndStates) {\n  if (props.isExpanded) {\n    return (\n      <IconButton\n        onClick={() => {\n          props.collapse && props.collapse();\n        }}\n      >\n        <ExpandLessIcon />\n      </IconButton>\n    );\n  } else {\n    return (\n      <IconButton\n        onClick={() => {\n          props.expandComp && props.expand(props.expandComp);\n        }}\n      >\n        <ExpandMoreIcon />\n      </IconButton>\n    );\n  }\n}\n\nconst EditButton = (props: any) => (\n  <IconButton onClick={props.onClick} title=\"Edit row\">\n    <EditIcon />\n  </IconButton>\n);\n\nconst DeleteButton = (props: any) => (\n  <IconButton onClick={props.onClick} title=\"Delete row\">\n    <DeleteIcon />\n  </IconButton>\n);\n\nconst CommitButton = (props: any) => (\n  <IconButton onClick={props.onClick} title=\"Save changes\">\n    <SaveIcon />\n  </IconButton>\n);\n\nconst CancelButton = (props: any) => (\n  <IconButton color=\"secondary\" onClick={props.onClick} title=\"Cancel changes\">\n    <CancelIcon />\n  </IconButton>\n);\n\nconst FailedButton = (props: any) => (\n  <Button color=\"primary\" onClick={props.onClick} title=\"Action Failed\">\n    Failed!\n  </Button>\n);\n","import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../Contexts/AuthContext\";\nimport {\n  LogiTable,\n  TableColumn,\n  rowActionsAndStates,\n  toolbarActionsAndState,\n  LogiStandardToolbar\n} from \"../Components/logi-table\"; //\"logi-table\";\nimport { StandardActions } from \"../Components/logi-table/StandardActions\";\nimport { Value2SQLValue } from \"../utils/helpers\";\n\ninterface IWidgetsProps {}\n\nconst Widgets: React.FunctionComponent<IWidgetsProps> = function(props) {\n  console.log(props);\n  const [widgets, setWidgets] = useState();\n  const [isLoadingWidgets, setIsLoadingWidgets] = useState(false);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n\n  const Auth: any = useAuth();\n  useEffect(() => {\n    async function fetchRoles() {\n      setIsLoadingWidgets(true);\n      var url = `${process.env.REACT_APP_APIURL}security/widgets`;\n      let roles = await Auth.AuthenticatedServerCall(url, \"GET\");\n      setWidgets(roles);\n      setIsLoadingWidgets(false);\n    }\n    fetchRoles();\n  }, [Auth, refreshTrigger]);\n\n  async function insertWidget(newData: any) {\n    try {\n      var url = `${process.env.REACT_APP_APIURL}security/widgets`;\n\n      await Auth.AuthenticatedServerCall(url, \"POST\", {\n        Insert: ` (\"Name\", \"Component\", \"Properties\", \"Description\", \"IsPublic\")\n          SELECT '${newData.Name.trim()}' ,\n        '${newData.Component ? newData.Component : null}' ,\n        '${newData.Properties ? newData.Properties : null}' ,\n        '${newData.Description.trim()}', \n        ${\n          newData.IsPublic !== undefined\n            ? Value2SQLValue.get(\"Boolean\")(newData.IsPublic)\n            : 0\n        }        \n      `\n      });\n      return true;\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n\n  async function deleteWidget(WidgetID: number) {\n    try {\n      var url = `${process.env.REACT_APP_APIURL}security/widgets`;\n      let a = await Auth.AuthenticatedServerCall(url, \"DELETE\", {\n        WidgetID: WidgetID\n      });\n      console.log(a);\n      return true;\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n\n  const columns: TableColumn[] = [\n    {\n      header: \"Actions\",\n      accessor: \"ActionColumnOne\",\n      dataType: \"ActionColumn\",\n      viewComponent: (row: any, rowAsAndSs: rowActionsAndStates) => {\n        return (\n          <>\n            <StandardActions\n              {...rowAsAndSs}\n              deleteRecord={async () => {\n                if (\n                  window.confirm(\n                    `Are you sure you want to delete ${row.Name} ?`\n                  )\n                ) {\n                  setIsLoadingWidgets(true);\n                  await deleteWidget(row.WidgetID);\n                  setRefreshTrigger(refreshTrigger => refreshTrigger + 1);\n                  setIsLoadingWidgets(false);\n                }\n              }}\n              saveChanges={(): Promise<boolean> => {\n                //go through the new Data and create the update statement\n                let updateStatement: String = \"\";\n                for (let key in rowAsAndSs.newData) {\n                  if (rowAsAndSs.newData[key] !== rowAsAndSs.oldData[key]) {\n                    if (typeof rowAsAndSs.newData[key] === \"boolean\") {\n                      rowAsAndSs.newData[key] = Value2SQLValue.get(\"Boolean\")(\n                        rowAsAndSs.newData.IsPublic\n                      );\n                    }\n                    updateStatement += `${key} = '${\n                      rowAsAndSs.newData[key]\n                    }' ,`;\n                  }\n                }\n                if (updateStatement.length > 0) {\n                  //remove the last comma\n                  updateStatement = updateStatement.substring(\n                    0,\n                    updateStatement.length - 1\n                  );\n                  return Auth.AuthenticatedServerCall(\n                    `${process.env.REACT_APP_APIURL}security/widgets`,\n                    \"PUT\",\n                    {\n                      WidgetID: rowAsAndSs.oldData.WidgetID,\n                      Update: updateStatement\n                    }\n                  )\n                    .then((r: any) => {\n                      console.log(r);\n                      setRefreshTrigger(refreshTrigger => refreshTrigger + 1);\n                    })\n                    .catch((error: any) => {\n                      console.log(error);\n                      rowAsAndSs.discardEditMode();\n                      setRefreshTrigger(refreshTrigger => refreshTrigger + 1);\n                    });\n                }\n                return Promise.resolve(true);\n              }}\n            />\n          </>\n        );\n      }\n    },\n    {\n      header: \"WidgetID\",\n      accessor: \"WidgetID\",\n      dataType: \"Number\",\n      readOnly: true\n    },\n    {\n      header: \"Name\",\n      accessor: \"Name\",\n      dataType: \"String\"\n    },\n    {\n      header: \"Component\",\n      accessor: \"Component\",\n      dataType: \"String\"\n    },\n    {\n      header: \"Properties\",\n      accessor: \"Properties\",\n      dataType: \"String\"\n    },\n    {\n      header: \"Is Public\",\n      accessor: \"IsPublic\",\n      dataType: \"Boolean\"\n    },\n    {\n      header: \"Description\",\n      accessor: \"Description\",\n      dataType: \"String\"\n    }\n  ];\n  return (\n    <>\n      <LogiTable\n        isRemoteLoading={isLoadingWidgets}\n        dense={true}\n        allowSort={false}\n        columns={columns}\n        keyAccessor=\"WidgetID\"\n        data={widgets}\n        tableToolbar={(actionsAndStates: toolbarActionsAndState) => {\n          return (\n            <LogiStandardToolbar\n              actionsAndStates={actionsAndStates}\n              title={\"Widgets\"}\n              insertNewRecord={async recordData => {\n                const newData: any = actionsAndStates.insertedRecordData();\n                try {\n                  if (\n                    !newData ||\n                    (!newData.Name || newData.Name.trim().length <= 0)\n                  ) {\n                    alert(\"Please fill all required fields and try again\");\n                    return;\n                  }\n                  setIsLoadingWidgets(true);\n                  await insertWidget(newData);\n                  setRefreshTrigger(refreshTrigger ? refreshTrigger : 0 + 1);\n                  actionsAndStates.discardInsertMode();\n                  setIsLoadingWidgets(false);\n                } catch (exception) {\n                  console.log(exception);\n                  alert(\"something went wrong, trying to save the data\");\n                }\n              }}\n            />\n          );\n        }}\n      />\n    </>\n  );\n};\n\nexport default Widgets;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { LogiTableHeader } from \"./LogiTableHeader\";\nimport { LogiDataRow, rowActionsAndStates } from \"./LogiDataRow\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport * from \"./LogiDataRow\";\nexport * from \"./LogiTableToolbar\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3)\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 750\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    },\n    progress: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  })\n);\n\nexport type Order = \"asc\" | \"desc\";\nexport type DataType =\n  | \"String\"\n  | \"Number\"\n  | \"Date\"\n  | \"DateTime\"\n  | \"Time\"\n  | \"Boolean\"\n  | \"ActionColumn\";\n\nexport interface TableColumn {\n  header: string;\n  /**\n   * Used to access the data filed i.e. dataRow[accessor]\n   * Please note if this value is available then it will be used to create the key for table cells\n   * specially in case of action columns set this to a dummy value\n   * @type {string}\n   * @memberof TableColumn\n   */\n  accessor: string;\n  dataType: DataType;\n  readOnly?: boolean;\n  hidden?: boolean;\n  viewComponent?: (\n    rowData: any,\n    rowActionsAndStates: rowActionsAndStates\n  ) => React.ReactElement;\n}\n\nexport interface toolbarActionsAndState {\n  /**\n   *Call this function to put the row in edit mode status\n   * @memberof toolbarActionsAndState\n   */\n  enterInsertMode: () => void;\n\n  /**\n   *Call this function to cancel the insert mode and return the row to reset status\n   * @memberof toolbarActionsAndState\n   */\n  discardInsertMode: () => void;\n\n  /**\n   *true if the table is in insert mode\n   * @type {boolean}\n   * @memberof toolbarActionsAndState\n   */\n  insertMode: boolean;\n  /**\n   * newly insert record data\n   * @type {*}\n   * @memberof toolbarActionsAndState\n   */\n  insertedRecordData: () => any;\n}\n\nexport interface LogiTableProps {\n  keyAccessor: string;\n  columns: Array<TableColumn>;\n  data: Array<{}> | (() => Promise<Array<{}>>);\n  allowSelection?: boolean;\n  showSelectAll?: boolean;\n  allowSort?: boolean;\n  customSortFunction?: (\n    event: React.MouseEvent<unknown>,\n    property: TableColumn\n  ) => void;\n  onSelectAllClick?: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => void;\n  dense?: boolean;\n  /**\n   * increase the counter from zero to refresh\n   * The value must change if you want the remote data to be re fetched\n   * @memberof LogiTableProps\n   */\n  refreshData?: number;\n  /**\n   * this component will be shown on top of the table\n   * you can import and use the LogiTableToolbar as standard if you want or create your own\n   * @memberof LogiTableProps\n   */\n  tableToolbar?: (\n    rowActionsAndStates: toolbarActionsAndState\n  ) => React.ReactElement;\n  /**\n   * Set value to show loading indicator (useful when data is being managed from outside)\n   * @type {boolean}\n   * @memberof LogiTableProps\n   */\n  isRemoteLoading?: boolean;\n}\n\nexport function LogiTable(props: LogiTableProps) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([{}]);\n  const [isError, setIsError] = useState(false);\n  const [addingNewRecord, setAddingNewRecord] = useState(false);\n  let newlyAddedRow: any = undefined;\n\n  useEffect(() => {\n    console.log(\"setting data\");\n    //get data if passed as promise\n    if (typeof props.data === \"function\") {\n      let fetchData: () => Promise<Array<{}>> = props.data as () => Promise<\n        Array<{}>\n      >;\n      setIsLoading(true);\n      fetchData()\n        .then((fetchedData: Array<{}>) => {\n          setData(fetchedData);\n          setIsLoading(false);\n        })\n        .catch((c: any) => {\n          console.log(\"error: \" + c);\n          setIsLoading(false);\n          setIsError(true);\n        });\n    } else {\n      setData(props.data);\n      //setIsLoading(false);\n    }\n  }, [props.data, props.refreshData]);\n\n  function handleChangePage(_event: unknown, newPage: number) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event: React.ChangeEvent<HTMLInputElement>) {\n    setRowsPerPage(+event.target.value);\n  }\n\n  const emptyRows =\n    rowsPerPage -\n    (data ? Math.min(rowsPerPage, data.length - page * rowsPerPage) : 0);\n\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <div className={classes.tableWrapper}>\n            {props.tableToolbar\n              ? props.tableToolbar({\n                  enterInsertMode: () => {\n                    setAddingNewRecord(true);\n                  },\n                  discardInsertMode: () => {\n                    setAddingNewRecord(false);\n                  },\n                  insertMode: addingNewRecord,\n                  insertedRecordData: () => {\n                    return newlyAddedRow;\n                  }\n                })\n              : null}\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={props.dense ? \"small\" : \"medium\"}\n            >\n              <LogiTableHeader {...props} />\n              <TableBody>\n                {addingNewRecord && (\n                  <LogiDataRow\n                    key={-1}\n                    row={() => {\n                      let newRecord: any = {};\n                      props.columns\n                        .filter(c => c.dataType !== \"ActionColumn\")\n                        .forEach((col: TableColumn) => {\n                          newRecord[col.accessor] = \"\";\n                        });\n                      return newRecord;\n                    }}\n                    index={-1}\n                    columns={props.columns}\n                    allowSelection={false}\n                    insertMode={true}\n                    setEditedRow={(row: any) => {\n                      newlyAddedRow = row;\n                    }}\n                  />\n                )}\n                {props.isRemoteLoading || isLoading || isError ? (\n                  <TableRow>\n                    <TableCell\n                      colSpan={\n                        props.columns.filter((c: TableColumn) => !c.hidden)\n                          .length\n                      }\n                      rowSpan={rowsPerPage}\n                      align={\"center\"}\n                    >\n                      <div>\n                        {props.isRemoteLoading || isLoading ? (\n                          <CircularProgress\n                            size={30}\n                            className={classes.progress}\n                          />\n                        ) : (\n                          \"Failed to load data!\"\n                        )}\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  data && //making sure data is available\n                  data.length > 0 &&\n                  data\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row: any, index: number) => {\n                      return (\n                        <LogiDataRow\n                          key={index}\n                          row={row}\n                          index={index}\n                          columns={props.columns}\n                          allowSelection={props.allowSelection}\n                        />\n                      );\n                    })\n                )}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell\n                      colSpan={\n                        props.columns.filter((c: TableColumn) => !c.hidden)\n                          .length\n                      }\n                    />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={data ? data.length : 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n"],"sourceRoot":""}